{"Asset":[{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":true},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":true},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":true},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":true},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":true},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":true},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":true},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":true},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":true},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":true},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":true},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":true},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":true},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":true},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":true},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":true},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":true},{"_id":"themes/yilia/source/js/script.js","path":"js/script.js","modified":true},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":true},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":true},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":true},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":true},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":true},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":true},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":true},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":true},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":true},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":true},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":true},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":true},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":true},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":true},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":true},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":true},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":true},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":true},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":true},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":true},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":true}],"Cache":[{"_id":"scaffolds/draft.md","mtime":1421023556000},{"_id":"scaffolds/page.md","mtime":1421023556000},{"_id":"scaffolds/photo.md","mtime":1421023556000},{"_id":"scaffolds/post.md","mtime":1421023556000},{"_id":"source/_posts/Rails-4-1-6-使用Devise-和Simple-Captcha-验证码.md","mtime":1421028004000},{"_id":"source/_posts/Ruby-on-Rails-缓存技术.md","mtime":1422522755000},{"_id":"source/_posts/kaminari简要文档.md","mtime":1421023556000},{"_id":"source/_posts/rails-多语言支持.md","mtime":1421024838000},{"_id":"source/_posts/rails-第一天.md","mtime":1421027959000},{"_id":"source/_posts/rails-第三天.md","mtime":1421027966000},{"_id":"source/_posts/rails-第二天.md","mtime":1421025016000},{"_id":"source/_posts/rails-第四天.md","mtime":1421027977000},{"_id":"source/_posts/rails开发CMS遇到的问题.md","mtime":1421027121000},{"_id":"source/_posts/thinkphp-ip-黑名单-白名单.md","mtime":1421028016000},{"_id":"source/_posts/thinkphp-后台动态设置路由.md","mtime":1421028011000},{"_id":"source/_posts/thinkphp-获取搜索引擎蜘蛛.md","mtime":1421024397000},{"_id":"source/_posts/thinkphp-路由分页搜索.md","mtime":1421129417000},{"_id":"source/_posts/使用chmod如何给文件夹递归授予权限.md","mtime":1421211243000},{"_id":"source/_posts/几个好用的css动画库.md","mtime":1421630058000},{"_id":"source/_posts/如何让顾客的体验从不完美到完美.md","mtime":1421037165000},{"_id":"source/_posts/如何设计你的2015年度计划.md","mtime":1421112336000},{"_id":"source/_posts/客户体验的三个层面.md","mtime":1421114175000},{"_id":"source/_posts/涨姿势！为什么有的颜色看起来非常高档？.md","mtime":1421292328000},{"_id":"themes/yilia/README.md","mtime":1421023556000},{"_id":"themes/yilia/_config.yml","mtime":1421112872000},{"_id":"themes/yilia/package.json","mtime":1421023556000},{"_id":"themes/yilia/scripts/fancybox.js","mtime":1421023556000},{"_id":"themes/yilia/layout/archive.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/category.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/index.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/layout.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/page.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/post.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/tag.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/archive.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/article.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/footer.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/head.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/header.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","mtime":1421023556000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","mtime":1421023556000},{"_id":"themes/yilia/source/img/coderwall.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/delicious.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/facebook.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/github.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/google.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/img-err.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/img-loading.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/linkedin.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/pinboard.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/pinterest.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/rss.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/stackoverflow.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/twitter.png","mtime":1421023556000},{"_id":"themes/yilia/source/img/weibo.png","mtime":1421023556000},{"_id":"themes/yilia/source/js/instagram.js","mtime":1421023556000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","mtime":1421023556000},{"_id":"themes/yilia/source/js/main.js","mtime":1421023556000},{"_id":"themes/yilia/source/js/script.js","mtime":1421023556000},{"_id":"themes/yilia/source/css/_extend.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_variables.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/style.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/archive.styl","mtime":1421046005000},{"_id":"themes/yilia/source/css/_partial/article.styl","mtime":1421045798000},{"_id":"themes/yilia/source/css/_partial/footer.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/header.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","mtime":1421032224000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/main.styl","mtime":1421029728000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/page.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/share.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_util/grid.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/_util/mixin.styl","mtime":1421023556000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","mtime":1421023556000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","mtime":1421023556000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","mtime":1421023556000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","mtime":1421023556000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/blank.gif","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","mtime":1421023556000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","mtime":1421023556000}],"Category":[],"Page":[],"Post":[{"title":"Ruby on Rails 缓存技术","date":1422522258000,"tags":["y1jtckj4cxneiidn","sodkjjrk95resnvm"],"content":"<p>当你网站访问量上升的时候，你可能为你的rails项目增加一些缓存应用。这个教程将告诉你关于rails缓存的方方面面，帮助你提高rails应用，而不必再为过度的cpu开销而烦心。</p>\n<p>rails缓存有几种方式，这篇教程将分几个部分向你分别介绍如何应用不同的缓存方案，以及一些高级的有针对性的缓存应用。<br><a id=\"more\"></a></p>\n<h3 id=\"首先介绍最快速的缓存应用：Page_Caching，页面缓存\">首先介绍最快速的缓存应用：Page Caching，页面缓存</h3>\n<h2 id=\"1、为什么要进行缓存\">1、为什么要进行缓存</h2>\n<p>（如果你已经对缓存的必要性有所了解，可以跳过本段）<br>ruby是一种解释性语言，这意味着ruby代码在没有被执行前，是不会编译成机器能识别的机器码的。<br>这个特点和php是一样的，但是java在这方面完全不同（java是先编译成机器码，后运行的）。<br>所以，当有人访问你的ruby程序的时候，你的代码才被读取并执行，你可以想象一下，当每秒钟有100个人访问你的代码的时候，你的程序将会消耗掉很多的系统资源。<br>那么改如何解决呢？<br>（译者：本篇文章讨论的是Rails框架中的缓存机制，Ruby是开发Rails框架的一种语言，和java，c语言一样的。）</p>\n<h2 id=\"2、缓存\">2、缓存</h2>\n<p>缓存是web处理(web应用)中的一个重要的设计策略，它被放置在一个临时的位置。如果有人请求了一个同样的应用，我们就可以为他提供一个应用的缓存版本。<br>提供一个缓存，不仅可以使我们的应用不用读取任何数据库资源，而且请求可以不必经过我们的rails应用服务。（译者：这句话很有意思，往后面看吧）<br>在开始缓存设计之前，有一些rails配置需要设定</p>\n<h2 id=\"3、缓存配置\">3、缓存配置</h2>\n<p>在开始缓存应用前，你需要配置你的<strong>/config/environments/development.rb</strong>文件 </p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">onfig.action_controller.perform_caching = <span class=\"keyword\">true</span></div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>默认情况下，缓存在产品模式下会被启动，上面的设置将在开发环境下启动缓存。</p>\n</blockquote>\n<h2 id=\"4、Page_Caching，页面缓存\">4、Page Caching，页面缓存</h2>\n<p>页面缓存是最快速的一种缓存应用。那么应该在什么时候使用他呢？<br>1、对于所有用户都相同的页面<br>2、公开的页面，没有用户认证的页面<br>如果你的应用中有符合上述条件的，请继续阅读下面的部分。如果你的应用中没有，那么也请继续阅读，下面的内容更精彩(ps：我觉得全世界的广告都一样，不过郁闷的是deyeb目前没有一个页面符合上面的条件，除了404和500吧)</p>\n<p>假设我们正在设计一个blog系统，页面并不经常变化，那么我们的controller可能这样来写：</p>\n<p>ruby</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">class BlogController &lt; ApplicationController</div><div class=\"line\">  def list</div><div class=\"line\">     Post.find(:all, :order =&gt; <span class=\"string\">\"created_on desc\"</span>, :limit =&gt; <span class=\"number\">10</span>)</div><div class=\"line\">  end</div><div class=\"line\">  <span class=\"keyword\">...</span></div></pre></td></tr></table></figure>\n\n<p>可以看到，List这个action是查询最近的10篇blog文章，对应的web页面上将会显示查询的结果。<br>如果我们要对这个页面进行缓存的话，只需;</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ApplicationController</span></span></span></div><div class=\"line\">   caches_page <span class=\"symbol\">:list</span>  </div><div class=\"line\">   <span class=\"function\"><span class=\"keyword\">def</span> </span>list</div><div class=\"line\">     <span class=\"constant\">Post</span>.find(<span class=\"symbol\">:all</span>, <span class=\"symbol\">:order</span> =&gt; <span class=\"string\">\"created_on desc\"</span>, <span class=\"symbol\">:limit</span> =&gt; <span class=\"number\">10</span>)</div><div class=\"line\">   <span class=\"keyword\">end</span></div><div class=\"line\">  ...</div></pre></td></tr></table></figure>\n\n<p>“caches_page”将会在下次请求list这个action时，将页面内容存入一个html页面，放置在一个缓存目录里。</p>\n<p>当你在mongrel里第一次运行该代码，访问这个页面的时候，你会在 <em>/logs/development.log</em> log日志中发现下面的代码：</p>\n<figure class=\"highlight logs\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">Processing BlogController<span class=\"comment\">#list (for 127.0.0.1 at 2007-02-23 00:58:56) [GET]</span></div><div class=\"line\"> Parameters: {<span class=\"string\">\"action\"</span>=&gt;<span class=\"string\">\"list\"</span>, <span class=\"string\">\"controller\"</span>=&gt;<span class=\"string\">\"blog\"</span>}</div><div class=\"line\">SELECT * FROM posts ORDER BY created_on LIMIT <span class=\"number\">10</span></div><div class=\"line\">Rendering blog/<span class=\"keyword\">list</span></div><div class=\"line\">Cached page: /blog/<span class=\"keyword\">list</span>.html (<span class=\"number\">0.00000</span>)</div><div class=\"line\">Completed in <span class=\"number\">0.18700</span> (<span class=\"number\">5</span> reqs/sec) | Rendering: <span class=\"number\">0.10900</span> (<span class=\"number\">58</span>%) | DB: <span class=\"number\">0.00000</span> (<span class=\"number\">0</span>%) | <span class=\"number\">200</span> OK [http:<span class=\"comment\">//localhost/blog/list]</span></div></pre></td></tr></table></figure>\n\n<p>注意这一句：<em>Cached page: /blog/list.htm</em>，<br>这说明，这个页面已经被加载，而且最终你看到的html页面已经被储存在 <em>/public/blog/list.htm</em> 这个位置，如果你检查一下这个页面的话，你会发现上面没有一行ruby代码。</p>\n<p>以后，如果当有访问同样的url地址的时候，加载的将是这个html页面，而不适重新加载这个controller中的action（译者：这样说更清 楚）。想像的到，加载一个静态的页面可是比加载并处理一个解释性语言要快得多，几乎快上100倍！（ps：这是真对大访问量情况下的有效的解决办法，同时 也是普通网站的一个很好的设计架构。）</p>\n<p>但是只得注意或提醒的是，这样一个静态页面是没有执行任何ruby代码的。所以，当你的页面需要反应一些及时的用户信息，或者当前的信息，你就不能采用这种页面缓存，而是采用局部缓存。这个将在第二部分有讲解。</p>\n<p>回到我们的model，</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">caches_page <span class=\"symbol\">:show</span></div></pre></td></tr></table></figure>\n\n<p>你猜，当我们访问某一篇具体的文章，比如”/blog/show/5“时，这个页面会被缓存在哪里？<br>答案是 这里：<em>/public/blog/show/5.html</em><br>下面的例子说明页面缓存的位置</p>\n<blockquote>\n<p><a href=\"http://localhost:3000/blog/list\" target=\"_blank\" rel=\"external\">http://localhost:3000/blog/list</a> =&gt; /public/blog/list.html<br><a href=\"http://localhost:3000/blog/edit/5\" target=\"_blank\" rel=\"external\">http://localhost:3000/blog/edit/5</a> =&gt; /public/edit/5.html<br><a href=\"http://localhost:3000/blog\" target=\"_blank\" rel=\"external\">http://localhost:3000/blog</a> =&gt; /public/blog.html<br><a href=\"http://localhost:3000/\" target=\"_blank\" rel=\"external\">http://localhost:3000/</a> =&gt; /public/index.html<br><a href=\"http://localhost:3000/blog/list?page=2\" target=\"_blank\" rel=\"external\">http://localhost:3000/blog/list?page=2</a> =&gt; /public/blog/list.html<br><strong>注意：第一行和最后一行的缓存文件是同一个，页面缓存是忽略掉url地址上的参数的。</strong></p>\n</blockquote>\n<h2 id=\"5、如何缓存我的分页\">5、如何缓存我的分页</h2>\n<p>为了缓存不同的页面，你需要不同的地址。（译者：我疯了，这个问题没想到，继续看吧）因为页面缓存的时候会忽略掉像/blog/list?page=2这样的参数，所以你需要使用/blog/list/2这样的地址形式，而原来我们使用的是id保存参数值，现在我们需要用page来保存参数值。<br>下面我们修改 <em>/config/routes.rb</em>文件</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">map.connect <span class=\"string\">'blog/list/:page'</span>,</div><div class=\"line\">    <span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">'blog'</span>,</div><div class=\"line\">    <span class=\"symbol\">:action</span> =&gt; <span class=\"string\">'list'</span>,</div><div class=\"line\">    <span class=\"symbol\">:requirements</span> =&gt; { <span class=\"symbol\">:page</span> =&gt; <span class=\"regexp\">/\\d+/</span>},</div><div class=\"line\">    <span class=\"symbol\">:page</span> =&gt; <span class=\"keyword\">nil</span></div></pre></td></tr></table></figure>\n\n<p>使用了新的routes定义，我们的连接也应该改成 </p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%= link_to <span class=\"string\">\"Next Page\"</span>, <span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">'blog'</span>, <span class=\"symbol\">:action</span> =&gt; <span class=\"string\">'list'</span>, <span class=\"symbol\">:page</span> =&gt; <span class=\"number\">2</span> %&gt;</div></pre></td></tr></table></figure>\n\n<p>最终的连接结果是”/blog/list/2”，当我们点这个连接的时候，后台会处理两件事情</p>\n<p>1、应用将2放入page这个参数中，而不是原来id这个参数<br>2、缓存将生成 /public/blog/list/2.html 这个页面</p>\n<blockquote>\n<p>所以，缓存分页，就要将页面参数变成页面的一部分，而不要使用地址参数的形式，他是会被忽略的。</p>\n</blockquote>\n<h2 id=\"6、清除缓存\">6、清除缓存</h2>\n<p>看完上面的内容后你可能想问，如果我添加完一篇新的文章到博客，该如何刷新/blog/list这个action呢？<br>来，看一下我们几分钟前创建的/blog/list.html 页面，它并不包含我们新创建的那个新文章。为了删除这个缓存，并生成一个新的缓存，我们需要让这个页面过期。为了是上面的两个页面过期，我们需要做：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This will remove /blog/list.html</span></div><div class=\"line\">expire_page(<span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">'blog'</span>, <span class=\"symbol\">:action</span> =&gt; <span class=\"string\">'list'</span>)</div></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># This will remove /blog/show/5.html</span></div><div class=\"line\">expire_page(<span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">'blog'</span>, <span class=\"symbol\">:action</span> =&gt; <span class=\"string\">'show'</span>, <span class=\"symbol\">:id</span> =&gt; <span class=\"number\">5</span>)</div></pre></td></tr></table></figure>\n\n<p>显然我们需要在每一个执行了添加，删除，修改的地方粘贴上面的代码，但是还有一个更好的方法来解决问题。<br>（译者：头一次翻译这么长的文章，上面写的大家能看明白吗？百度空间发表的这篇文章是首发，完成后会在几个地方转载，大家多提意见）</p>\n<h3 id=\"7、Sweepers，缓存自动清理\">7、Sweepers，缓存自动清理</h3>\n<p>sweepers是一段自动删除旧的缓存的代码。为了实现这个功能，sweepers需要跟踪你的models，当你的model执行了增删改后，sweepers就会执行上面的命令。<br>sweepers可以在你的controllers目录创建，但是我觉得他应该隔离开。你可以在/config/environment.rb.进行个设置：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"constant\">Rails::Initializer</span>.run <span class=\"keyword\">do</span> |config|</div><div class=\"line\">   <span class=\"comment\"># ...</span></div><div class=\"line\">   config.load_paths += %<span class=\"constant\">W</span>( <span class=\"comment\">#{RAILS_ROOT}/app/sweepers )</span></div><div class=\"line\">   <span class=\"comment\"># ...</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>ps：记得重启你的服务<br>这样，你就可以在/app/sweepers 这个目录创建你的sweepers了。/app/sweepers/blog_sweeper.rb<br>的代码可以这样来写：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogSweeper</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActionController::Caching</span></span>::<span class=\"title\">Sweeper</span></span></div><div class=\"line\">  observe <span class=\"constant\">Post</span> <span class=\"comment\"># This sweeper is going to keep an eye on the Post model</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\"># If our sweeper detects that a Post was created call this</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>after_create(post)</div><div class=\"line\">          expire_cache_for(post)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\"># If our sweeper detects that a Post was updated call this</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>after_update(post)</div><div class=\"line\">          expire_cache_for(post)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"comment\"># If our sweeper detects that a Post was deleted call this</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>after_destroy(post)</div><div class=\"line\">          expire_cache_for(post)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">          </div><div class=\"line\">  private</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>expire_cache_for(record)</div><div class=\"line\">    <span class=\"comment\"># Expire the list page now that we posted a new blog entry</span></div><div class=\"line\">    expire_page(<span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">'blog'</span>, <span class=\"symbol\">:action</span> =&gt; <span class=\"string\">'list'</span>)</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\"># Also expire the show page, incase we just edited a blog entry</span></div><div class=\"line\">    expire_page(<span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">'blog'</span>, <span class=\"symbol\">:action</span> =&gt; <span class=\"string\">'show'</span>, <span class=\"symbol\">:id</span> =&gt; record.id)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>提示：我们可以使用“after_save”替代“after_create”和“after_update”，你自己来试一下吧！<br>我们还需要告诉我们的controller什么时候调用了sweepers，所以在controller中需要加入：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ApplicationController</span></span></span></div><div class=\"line\">   caches_page <span class=\"symbol\">:list</span>, <span class=\"symbol\">:show</span></div><div class=\"line\">   cache_sweeper <span class=\"symbol\">:blog_sweeper</span>, <span class=\"symbol\">:only</span> =&gt; [<span class=\"symbol\">:create</span>, <span class=\"symbol\">:update</span>, <span class=\"symbol\">:destroy</span>]</div><div class=\"line\">   ...</div></pre></td></tr></table></figure>\n\n<p>好了。我们可以尝试着添加一个新文章，这样在<em>logs/development.log:</em>中你会发现 </p>\n<blockquote>\n<p>Expired page: /blog/list.html (0.00000)<br>Expired page: /blog/show/3.html (0.00000)<br>我们的sweepers已经工作了！<br><strong>译者：这是本文的第一个重要知识</strong></p>\n</blockquote>\n<h1 id=\"8、rails缓存与Apache/lighttpd的配合应用(deyeb关注的事情)\">8、rails缓存与Apache/lighttpd的配合应用(deyeb关注的事情)</h1>\n<p>当我们将rails应用部署到产品环境的时候，我们多数采用的是apache服务器作为rails服务的前端，将rails请求转发到rails服务器上（Mongrel 或 Lighttpd）。因为我们使用了缓存静态文件的方法，所以我们需要告诉apache服务器，服务请求的是否存在静态页面缓存，如果有，则直接读取静态文件，而不用请求rails服务器了。（deyeb的设计如果这么简单就好啦）<br>httpd.conf的配置</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;VirtualHost *:80&gt;</div><div class=\"line\">  ...</div><div class=\"line\">  # Configure mongrel_cluster</div><div class=\"line\">  &lt;Proxy balancer://blog_cluster&gt;</div><div class=\"line\">    BalancerMember http://127.0.0.1:8030</div><div class=\"line\">  &lt;/Proxy&gt;</div><div class=\"line\"></div><div class=\"line\">  RewriteEngine On</div><div class=\"line\">  # Rewrite index to check for static</div><div class=\"line\">  RewriteRule ^/$ /index.html [QSA]</div><div class=\"line\"></div><div class=\"line\">  # Rewrite to check for Rails cached page</div><div class=\"line\">  RewriteRule ^([^.]+)$ $1.html [QSA]</div><div class=\"line\"></div><div class=\"line\">  # Redirect all non-static requests to cluster</div><div class=\"line\">  RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f</div><div class=\"line\">  RewriteRule ^/(.*)$ balancer://blog_cluster%{REQUEST_URI} [P,QSA,L]</div><div class=\"line\">  ...</div><div class=\"line\">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure>\n\n<p>lighttpd 的配置写法</p>\n<figure class=\"highlight lighttpd\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">server.modules = ( <span class=\"string\">\"mod_rewrite\"</span>, <span class=\"keyword\">...</span> )</div><div class=\"line\">url.rewrite += ( <span class=\"string\">\"^/$\"</span> =&gt; <span class=\"string\">\"/index.html\"</span> )</div><div class=\"line\">url.rewrite += ( <span class=\"string\">\"^([^.]+)$\"</span> =&gt; <span class=\"string\">\"$1.html\"</span> )</div></pre></td></tr></table></figure>\n\n<p>代理服务器将会查看你放置在 /public 目录下的静态文件，但是你可能想将这个缓存位置改变一下，以保持独立性。那就继续看下面的介绍。</p>\n<h2 id=\"9、更改你的缓存放置位置\">9、更改你的缓存放置位置</h2>\n<p>首先需要在你的 <em>/config/environment.rb</em> 中添加下面的代码</p>\n<p>config.action_controller.page_cache_directory = RAILS_ROOT + “/public/cache/“<br>这是告诉rails服务你需要将缓存文件放置在/public/cache这个目录下，你还需要重写一下httpd.conf规则。</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Rewrite index to check for static</span></div><div class=\"line\"><span class=\"keyword\"><span class=\"common\">RewriteRule</span></span> ^/$ cache/index.html<span class=\"sqbracket\"> [QSA]</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Rewrite to check for Rails cached page</span></div><div class=\"line\"><span class=\"keyword\"><span class=\"common\">RewriteRule</span></span> ^([^.]+)$ cache/<span class=\"number\">$1</span>.html<span class=\"sqbracket\"> [QSA]</span></div></pre></td></tr></table></figure>\n\n<h2 id=\"10、清除你的局部或整体缓存\">10、清除你的局部或整体缓存</h2>\n<p>(原文写的太啰嗦)当你采用了缓存技术时，有时候可能在增删改一个model的时候，需要过期所有的页面缓存，比如当你的所有页面都包含一个最新文章列表的时候。<br>一个方法是删除你所有的缓存文件，首先可以像上面介绍的那样，移动你的缓存目录，然后按照下面的方法写一个sweepers</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BlogSweeper</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActionController::Caching</span></span>::<span class=\"title\">Sweeper</span></span></div><div class=\"line\">  observe <span class=\"constant\">Post</span></div><div class=\"line\"></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>after_save(record)</div><div class=\"line\">    <span class=\"keyword\">self</span>.<span class=\"keyword\">class</span><span class=\"symbol\">:</span><span class=\"symbol\">:sweep</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>after_destroy(record)</div><div class=\"line\">    <span class=\"keyword\">self</span>.<span class=\"keyword\">class</span><span class=\"symbol\">:</span><span class=\"symbol\">:sweep</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  </div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span><span class=\"keyword\">self</span>.sweep</div><div class=\"line\">    cache_dir = <span class=\"constant\">ActionController::Base</span>.page_cache_directory</div><div class=\"line\">    <span class=\"keyword\">unless</span> cache_dir == <span class=\"constant\">RAILS_ROOT</span>+<span class=\"string\">\"/public\"</span></div><div class=\"line\">      <span class=\"constant\">FileUtils</span>.rm_r(<span class=\"constant\">Dir</span>.glob(cache_dir+<span class=\"string\">\"/*\"</span>)) <span class=\"keyword\">rescue</span> <span class=\"constant\">Errno::ENOENT</span></div><div class=\"line\">      <span class=\"constant\">RAILS_DEFAULT_LOGGER</span>.info(<span class=\"string\">\"Cache directory '<span class=\"subst\">#{cache_dir}</span>' fully sweeped.\"</span>)</div><div class=\"line\">    <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>FileUtils.rm_r 将会删除你所有的缓存文件，当然你也可以逐步删除你的缓存，比如当你想删除/public/blog下面的缓存时，可以：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cache_dir = <span class=\"constant\">ActionController::Base</span>.page_cache_directory</div><div class=\"line\"><span class=\"constant\">FileUtils</span>.rm_r(<span class=\"constant\">Dir</span>.glob(cache_dir+<span class=\"string\">\"/blog/*\"</span>)) <span class=\"keyword\">rescue</span> <span class=\"constant\">Errno::ENOENT</span></div></pre></td></tr></table></figure>\n\n<p>如果你觉得File Utilities对你实在难于把握，你可以尝试一下 Charlie Bowman 的 broomstick plugin<br>只需一个简单的调用，就可以删除你每一个controller或action缓存。<br>（译者：有必要也会翻译一下上面的这篇文章《Modules, Mixins and Inheritance》，直译 为 组件，混入，和继承，但是这样的计算机编程属于还是用英文的好）</p>\n<h2 id=\"11、更高级的缓存？\">11、更高级的缓存？</h2>\n<p>页面缓存对于像deyeb这样的大型网站，是比较复杂的。（译者：要了朕的亲命了，不然也不会翻译写外文寻找光明了！）下面还有一些其他的方法<br>Rick Olson (aka Technoweenie)写了个 Referenced Page Caching Plugin ，可以使用数据库表进行页面缓存。<br>Max Dunn 写了篇非常好的文章，Advanced Page Caching ，教你如何根据用户的角色，使用cookies进行缓存应用的。<br>最后，貌似没有发现页面缓存xml文件的好方法，Mike Zornek的wrote about his problems 指出了一个处理方法。Manoel Lemos way to do it using action caching<br>我们将在下一章介绍action缓存。</p>\n<h2 id=\"12、如何测试缓存\">12、如何测试缓存</h2>\n<p>没有现成的方法，Luckily Damien Merenne 有一个 swank plugin ，看一下吧。</p>\n<h2 id=\"13、本章结束\">13、本章结束</h2>\n<p>页面缓存应该在你的应用中广泛的使用，毕竟它可以提供很快的相应速度。但是当你的项目始终需要进行用户身份验证和身份显示的时候，这样的处理就有局限了！</p>\n","source":"_posts/Ruby-on-Rails-缓存技术.md","raw":"title: Ruby on Rails 缓存技术\ndate: 2015-01-29 17:04:18\ntags: [rails,缓存]\n---\n\n当你网站访问量上升的时候，你可能为你的rails项目增加一些缓存应用。这个教程将告诉你关于rails缓存的方方面面，帮助你提高rails应用，而不必再为过度的cpu开销而烦心。\n\nrails缓存有几种方式，这篇教程将分几个部分向你分别介绍如何应用不同的缓存方案，以及一些高级的有针对性的缓存应用。\n<!--more-->\n\n###首先介绍最快速的缓存应用：Page Caching，页面缓存\n\n##1、为什么要进行缓存\n（如果你已经对缓存的必要性有所了解，可以跳过本段）\nruby是一种解释性语言，这意味着ruby代码在没有被执行前，是不会编译成机器能识别的机器码的。\n这个特点和php是一样的，但是java在这方面完全不同（java是先编译成机器码，后运行的）。\n所以，当有人访问你的ruby程序的时候，你的代码才被读取并执行，你可以想象一下，当每秒钟有100个人访问你的代码的时候，你的程序将会消耗掉很多的系统资源。\n那么改如何解决呢？\n（译者：本篇文章讨论的是Rails框架中的缓存机制，Ruby是开发Rails框架的一种语言，和java，c语言一样的。）\n\n\n##2、缓存\n缓存是web处理(web应用)中的一个重要的设计策略，它被放置在一个临时的位置。如果有人请求了一个同样的应用，我们就可以为他提供一个应用的缓存版本。\n提供一个缓存，不仅可以使我们的应用不用读取任何数据库资源，而且请求可以不必经过我们的rails应用服务。（译者：这句话很有意思，往后面看吧）\n在开始缓存设计之前，有一些rails配置需要设定\n\n##3、缓存配置\n在开始缓存应用前，你需要配置你的**/config/environments/development.rb**文件 \n```ruby\nonfig.action_controller.perform_caching = true\n```\n\n> 默认情况下，缓存在产品模式下会被启动，上面的设置将在开发环境下启动缓存。\n\n##4、Page Caching，页面缓存\n\n页面缓存是最快速的一种缓存应用。那么应该在什么时候使用他呢？\n1、对于所有用户都相同的页面\n2、公开的页面，没有用户认证的页面\n如果你的应用中有符合上述条件的，请继续阅读下面的部分。如果你的应用中没有，那么也请继续阅读，下面的内容更精彩(ps：我觉得全世界的广告都一样，不过郁闷的是deyeb目前没有一个页面符合上面的条件，除了404和500吧)\n\n假设我们正在设计一个blog系统，页面并不经常变化，那么我们的controller可能这样来写：\n\nruby```\nclass BlogController < ApplicationController\n  def list\n     Post.find(:all, :order => \"created_on desc\", :limit => 10)\n  end\n  ...\n```\n可以看到，List这个action是查询最近的10篇blog文章，对应的web页面上将会显示查询的结果。\n如果我们要对这个页面进行缓存的话，只需;\n\n```ruby\nclass BlogController < ApplicationController\n   caches_page :list  \n   def list\n     Post.find(:all, :order => \"created_on desc\", :limit => 10)\n   end\n  ...\n```\n\"caches_page\"将会在下次请求list这个action时，将页面内容存入一个html页面，放置在一个缓存目录里。\n\n当你在mongrel里第一次运行该代码，访问这个页面的时候，你会在 */logs/development.log* log日志中发现下面的代码：\n\n```logs\nProcessing BlogController#list (for 127.0.0.1 at 2007-02-23 00:58:56) [GET]\n Parameters: {\"action\"=>\"list\", \"controller\"=>\"blog\"}\nSELECT * FROM posts ORDER BY created_on LIMIT 10\nRendering blog/list\nCached page: /blog/list.html (0.00000)\nCompleted in 0.18700 (5 reqs/sec) | Rendering: 0.10900 (58%) | DB: 0.00000 (0%) | 200 OK [http://localhost/blog/list]\n```\n注意这一句：*Cached page: /blog/list.htm*，\n这说明，这个页面已经被加载，而且最终你看到的html页面已经被储存在 */public/blog/list.htm* 这个位置，如果你检查一下这个页面的话，你会发现上面没有一行ruby代码。\n\n以后，如果当有访问同样的url地址的时候，加载的将是这个html页面，而不适重新加载这个controller中的action（译者：这样说更清 楚）。想像的到，加载一个静态的页面可是比加载并处理一个解释性语言要快得多，几乎快上100倍！（ps：这是真对大访问量情况下的有效的解决办法，同时 也是普通网站的一个很好的设计架构。）\n\n但是只得注意或提醒的是，这样一个静态页面是没有执行任何ruby代码的。所以，当你的页面需要反应一些及时的用户信息，或者当前的信息，你就不能采用这种页面缓存，而是采用局部缓存。这个将在第二部分有讲解。\n\n回到我们的model，\n```ruby\ncaches_page :show\n```\n你猜，当我们访问某一篇具体的文章，比如\"/blog/show/5“时，这个页面会被缓存在哪里？\n答案是 这里：*/public/blog/show/5.html*\n下面的例子说明页面缓存的位置\n\n> http://localhost:3000/blog/list => /public/blog/list.html\n> http://localhost:3000/blog/edit/5 => /public/edit/5.html\n> http://localhost:3000/blog => /public/blog.html\n> http://localhost:3000/ => /public/index.html\n> http://localhost:3000/blog/list?page=2 => /public/blog/list.html\n> **注意：第一行和最后一行的缓存文件是同一个，页面缓存是忽略掉url地址上的参数的。**\n\n\n##5、如何缓存我的分页\n\n为了缓存不同的页面，你需要不同的地址。（译者：我疯了，这个问题没想到，继续看吧）因为页面缓存的时候会忽略掉像/blog/list?page=2这样的参数，所以你需要使用/blog/list/2这样的地址形式，而原来我们使用的是id保存参数值，现在我们需要用page来保存参数值。\n下面我们修改 */config/routes.rb*文件\n\n```ruby\nmap.connect 'blog/list/:page',\n    :controller => 'blog',\n    :action => 'list',\n    :requirements => { :page => /\\d+/},\n    :page => nil\n```\n使用了新的routes定义，我们的连接也应该改成 \n```ruby\n<%= link_to \"Next Page\", :controller => 'blog', :action => 'list', :page => 2 %>\n```\n最终的连接结果是\"/blog/list/2\"，当我们点这个连接的时候，后台会处理两件事情\n\n1、应用将2放入page这个参数中，而不是原来id这个参数\n2、缓存将生成 /public/blog/list/2.html 这个页面\n\n> 所以，缓存分页，就要将页面参数变成页面的一部分，而不要使用地址参数的形式，他是会被忽略的。\n\n##6、清除缓存\n看完上面的内容后你可能想问，如果我添加完一篇新的文章到博客，该如何刷新/blog/list这个action呢？\n来，看一下我们几分钟前创建的/blog/list.html 页面，它并不包含我们新创建的那个新文章。为了删除这个缓存，并生成一个新的缓存，我们需要让这个页面过期。为了是上面的两个页面过期，我们需要做：\n\n```ruby\n# This will remove /blog/list.html\nexpire_page(:controller => 'blog', :action => 'list')\n```\n```ruby\n# This will remove /blog/show/5.html\nexpire_page(:controller => 'blog', :action => 'show', :id => 5)\n```\n显然我们需要在每一个执行了添加，删除，修改的地方粘贴上面的代码，但是还有一个更好的方法来解决问题。\n（译者：头一次翻译这么长的文章，上面写的大家能看明白吗？百度空间发表的这篇文章是首发，完成后会在几个地方转载，大家多提意见）\n\n###7、Sweepers，缓存自动清理\nsweepers是一段自动删除旧的缓存的代码。为了实现这个功能，sweepers需要跟踪你的models，当你的model执行了增删改后，sweepers就会执行上面的命令。\nsweepers可以在你的controllers目录创建，但是我觉得他应该隔离开。你可以在/config/environment.rb.进行个设置：\n\n```ruby\nRails::Initializer.run do |config|\n   # ...\n   config.load_paths += %W( #{RAILS_ROOT}/app/sweepers )\n   # ...\nend\n```\n\nps：记得重启你的服务\n这样，你就可以在/app/sweepers 这个目录创建你的sweepers了。/app/sweepers/blog_sweeper.rb\n的代码可以这样来写：\n \n```ruby\nclass BlogSweeper < ActionController::Caching::Sweeper\n  observe Post # This sweeper is going to keep an eye on the Post model\n\n  # If our sweeper detects that a Post was created call this\n  def after_create(post)\n          expire_cache_for(post)\n  end\n  \n  # If our sweeper detects that a Post was updated call this\n  def after_update(post)\n          expire_cache_for(post)\n  end\n  \n  # If our sweeper detects that a Post was deleted call this\n  def after_destroy(post)\n          expire_cache_for(post)\n  end\n          \n  private\n  def expire_cache_for(record)\n    # Expire the list page now that we posted a new blog entry\n    expire_page(:controller => 'blog', :action => 'list')\n    \n    # Also expire the show page, incase we just edited a blog entry\n    expire_page(:controller => 'blog', :action => 'show', :id => record.id)\n  end\nend\n```\n\n提示：我们可以使用“after_save”替代“after_create”和“after_update”，你自己来试一下吧！\n我们还需要告诉我们的controller什么时候调用了sweepers，所以在controller中需要加入：\n```ruby\nclass BlogController < ApplicationController\n   caches_page :list, :show\n   cache_sweeper :blog_sweeper, :only => [:create, :update, :destroy]\n   ...\n```\n好了。我们可以尝试着添加一个新文章，这样在*logs/development.log:*中你会发现 \n\n> Expired page: /blog/list.html (0.00000)\n> Expired page: /blog/show/3.html (0.00000)\n> 我们的sweepers已经工作了！\n> **译者：这是本文的第一个重要知识**\n\n\n#8、rails缓存与Apache/lighttpd的配合应用(deyeb关注的事情)\n当我们将rails应用部署到产品环境的时候，我们多数采用的是apache服务器作为rails服务的前端，将rails请求转发到rails服务器上（Mongrel 或 Lighttpd）。因为我们使用了缓存静态文件的方法，所以我们需要告诉apache服务器，服务请求的是否存在静态页面缓存，如果有，则直接读取静态文件，而不用请求rails服务器了。（deyeb的设计如果这么简单就好啦）\nhttpd.conf的配置\n```apache\n<VirtualHost *:80>\n  ...\n  # Configure mongrel_cluster\n  <Proxy balancer://blog_cluster>\n    BalancerMember http://127.0.0.1:8030\n  </Proxy>\n\n  RewriteEngine On\n  # Rewrite index to check for static\n  RewriteRule ^/$ /index.html [QSA]\n\n  # Rewrite to check for Rails cached page\n  RewriteRule ^([^.]+)$ $1.html [QSA]\n\n  # Redirect all non-static requests to cluster\n  RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_FILENAME} !-f\n  RewriteRule ^/(.*)$ balancer://blog_cluster%{REQUEST_URI} [P,QSA,L]\n  ...\n</VirtualHost>\n```\nlighttpd 的配置写法\n```lighttpd\nserver.modules = ( \"mod_rewrite\", ... )\nurl.rewrite += ( \"^/$\" => \"/index.html\" )\nurl.rewrite += ( \"^([^.]+)$\" => \"$1.html\" )\n```\n代理服务器将会查看你放置在 /public 目录下的静态文件，但是你可能想将这个缓存位置改变一下，以保持独立性。那就继续看下面的介绍。\n\n\n##9、更改你的缓存放置位置\n首先需要在你的 */config/environment.rb* 中添加下面的代码\n\nconfig.action_controller.page_cache_directory = RAILS_ROOT + \"/public/cache/\"\n这是告诉rails服务你需要将缓存文件放置在/public/cache这个目录下，你还需要重写一下httpd.conf规则。\n```apache\n\n  # Rewrite index to check for static\n  RewriteRule ^/$ cache/index.html [QSA]\n\n  # Rewrite to check for Rails cached page\n  RewriteRule ^([^.]+)$ cache/$1.html [QSA]\n```\n##10、清除你的局部或整体缓存\n\n(原文写的太啰嗦)当你采用了缓存技术时，有时候可能在增删改一个model的时候，需要过期所有的页面缓存，比如当你的所有页面都包含一个最新文章列表的时候。\n一个方法是删除你所有的缓存文件，首先可以像上面介绍的那样，移动你的缓存目录，然后按照下面的方法写一个sweepers\n```ruby\nclass BlogSweeper < ActionController::Caching::Sweeper\n  observe Post\n\n  def after_save(record)\n    self.class::sweep\n  end\n  \n  def after_destroy(record)\n    self.class::sweep\n  end\n  \n  def self.sweep\n    cache_dir = ActionController::Base.page_cache_directory\n    unless cache_dir == RAILS_ROOT+\"/public\"\n      FileUtils.rm_r(Dir.glob(cache_dir+\"/*\")) rescue Errno::ENOENT\n      RAILS_DEFAULT_LOGGER.info(\"Cache directory '#{cache_dir}' fully sweeped.\")\n    end\n  end\nend\n```\nFileUtils.rm_r 将会删除你所有的缓存文件，当然你也可以逐步删除你的缓存，比如当你想删除/public/blog下面的缓存时，可以：\n\n```ruby\ncache_dir = ActionController::Base.page_cache_directory\nFileUtils.rm_r(Dir.glob(cache_dir+\"/blog/*\")) rescue Errno::ENOENT\n```\n如果你觉得File Utilities对你实在难于把握，你可以尝试一下 Charlie Bowman 的 broomstick plugin\n只需一个简单的调用，就可以删除你每一个controller或action缓存。\n（译者：有必要也会翻译一下上面的这篇文章《Modules, Mixins and Inheritance》，直译 为 组件，混入，和继承，但是这样的计算机编程属于还是用英文的好）\n\n##11、更高级的缓存？\n\n页面缓存对于像deyeb这样的大型网站，是比较复杂的。（译者：要了朕的亲命了，不然也不会翻译写外文寻找光明了！）下面还有一些其他的方法\nRick Olson (aka Technoweenie)写了个 Referenced Page Caching Plugin ，可以使用数据库表进行页面缓存。\nMax Dunn 写了篇非常好的文章，Advanced Page Caching ，教你如何根据用户的角色，使用cookies进行缓存应用的。\n最后，貌似没有发现页面缓存xml文件的好方法，Mike Zornek的wrote about his problems 指出了一个处理方法。Manoel Lemos way to do it using action caching\n我们将在下一章介绍action缓存。\n\n##12、如何测试缓存\n\n没有现成的方法，Luckily Damien Merenne 有一个 swank plugin ，看一下吧。\n\n##13、本章结束\n\n页面缓存应该在你的应用中广泛的使用，毕竟它可以提供很快的相应速度。但是当你的项目始终需要进行用户身份验证和身份显示的时候，这样的处理就有局限了！\n","slug":"Ruby-on-Rails-缓存技术","updated":1422522755000,"excerpt":"<p>当你网站访问量上升的时候，你可能为你的rails项目增加一些缓存应用。这个教程将告诉你关于rails缓存的方方面面，帮助你提高rails应用，而不必再为过度的cpu开销而烦心。</p>\n<p>rails缓存有几种方式，这篇教程将分几个部分向你分别介绍如何应用不同的缓存方案，以及一些高级的有针对性的缓存应用。<br>","_id":"ktypk0red7m31yar","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"Rails 4.1.6 使用Devise 和Simple Captcha 验证码","date":1421027152000,"tags":["y1jtckj4cxneiidn","fa3ig27fs9aen28r","x0dtvt0wo7hl4m39"],"content":"<h2 id=\"rails_simple_captcha_验证码实现\">rails simple_captcha 验证码实现</h2>\n<h3 id=\"用到的gem有\">用到的gem有</h3>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem <span class=\"string\">\"galetahub-simple_captcha\"</span>, :<span class=\"keyword\">require</span> =&gt; <span class=\"string\">\"simple_captcha\"</span></div><div class=\"line\">gem <span class=\"string\">\"mini_magick\"</span></div></pre></td></tr></table></figure>\n\n<p><a id=\"more\"></a><br>执行<strong>bundle</strong></p>\n<p>重写<strong>devise</strong>的<strong>controller</strong>方法我把<strong>devise</strong>的方法放到<em>/admin</em>里了</p>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">devise_for <span class=\"symbol\">:users</span>,</div><div class=\"line\">           <span class=\"symbol\">:path</span> =&gt; <span class=\"string\">\"/admin/users\"</span>,</div><div class=\"line\">           <span class=\"symbol\">:controllers</span> =&gt; { <span class=\"symbol\">:sessions</span> =&gt; <span class=\"string\">\"devise_hack/sessions\"</span>,<span class=\"symbol\">:registrations</span> =&gt; <span class=\"string\">\"devise_hack/registrations\"</span> },</div><div class=\"line\">           <span class=\"symbol\">:path_names</span>  =&gt; { <span class=\"symbol\">:sign_in</span>  =&gt; <span class=\"string\">'login'</span>, <span class=\"symbol\">:sign_out</span> =&gt; <span class=\"string\">'logout'</span>, <span class=\"symbol\">:sign_up</span> =&gt; <span class=\"string\">'sign_up'</span>}</div></pre></td></tr></table></figure>\n\n<h3 id=\"执行下面命令安装simple_captcha\">执行下面命令安装simple_captcha</h3>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">rails generate simple_captcha</div><div class=\"line\">rake <span class=\"keyword\">d</span><span class=\"variable\">b:migrate</span></div></pre></td></tr></table></figure>\n\n<p>生成<strong>_simple_captcha.html.erb</strong>文件，该文件为验证码的局部视图模板。修改局部视图<strong>/vews/devise/sessions/new.html.erb</strong>，添加一个切换验证码链接。</p>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;<span class=\"variable\">%=</span> show_simple_captcha <span class=\"variable\">%&gt;</span></div></pre></td></tr></table></figure>\n\n<h2 id=\"注册和登陆都需要验证码，需要重构两个controller的create方法\">注册和登陆都需要验证码，需要重构两个controller的create方法</h2>\n<p>在<strong>controllers/devise_hack/registrations_controller.rb</strong>中</p>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DeviseHack::RegistrationsController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">Devise::RegistrationsController</span></span></span></div><div class=\"line\">    <span class=\"keyword\">include</span> <span class=\"constant\">SimpleCaptcha::ControllerHelpers</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> </span>create</div><div class=\"line\">    <span class=\"keyword\">if</span> simple_captcha_valid?</div><div class=\"line\">      <span class=\"keyword\">super</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">      build_resource</div><div class=\"line\">      <span class=\"comment\">#clean_up_passwords(resource)</span></div><div class=\"line\">      params[<span class=\"symbol\">:user</span>][<span class=\"symbol\">:password</span>] = <span class=\"keyword\">nil</span></div><div class=\"line\">      flash.now[<span class=\"symbol\">:alert</span>] = <span class=\"string\">\"验证码错误!\"</span></div><div class=\"line\">      respond_with_navigational(resource) { render <span class=\"symbol\">:new</span> }</div><div class=\"line\">    <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>skip_before_filter :require_no_authentication, :only =&gt; [:new]<br>只有在登陆的时候调用此方法,如果没有会一直重定向到注册页面</p>\n</blockquote>\n<p>在<strong>controllers/devise_hack/sessions_controller.rb</strong>中</p>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DeviseHack::SessionsController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">Devise::SessionsController</span></span></span></div><div class=\"line\">  <span class=\"keyword\">include</span> <span class=\"constant\">SimpleCaptcha::ControllerHelpers</span></div><div class=\"line\">  skip_before_filter <span class=\"symbol\">:require_no_authentication</span>, <span class=\"symbol\">:only</span> =&gt; [<span class=\"symbol\">:new</span>]</div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>create</div><div class=\"line\">    <span class=\"keyword\">if</span> simple_captcha_valid?</div><div class=\"line\">      <span class=\"keyword\">super</span></div><div class=\"line\">    <span class=\"keyword\">else</span></div><div class=\"line\">      build_resource</div><div class=\"line\">      flash[<span class=\"symbol\">:error</span>] = <span class=\"string\">\"Captcha has wrong, try a again.\"</span></div><div class=\"line\">      redirect_to <span class=\"string\">'/admin/users/login'</span></div><div class=\"line\">      <span class=\"comment\">#respond_with_navigational(resource) { render :new }</span></div><div class=\"line\">    <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>build_resource(hash=<span class=\"keyword\">nil</span>)</div><div class=\"line\">    <span class=\"keyword\">self</span>.resource = resource_class.new_with_session(hash || {}, session)</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<h2 id=\"遇到的问题:\">遇到的问题:</h2>\n<p>ImageMagick: Error while running convert: convert: unable to read font</p>\n<blockquote>\n<p>安装 $ brew install ghostscript</p>\n</blockquote>\n<p>验证码不验证问题（具体记不清了。。）</p>\n<blockquote>\n<p>将render换成redirect_to</p>\n</blockquote>\n<h2 id=\"参考文章：\">参考文章：</h2>\n<p><a href=\"http://www.cnblogs.com/itmangelihai/p/3254608.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/itmangelihai/p/3254608.html</a><br><a href=\"https://github.com/plataformatec/devise/wiki/How-To%3a-Use-Recaptcha-with-Devise\" target=\"_blank\" rel=\"external\">https://github.com/plataformatec/devise/wiki/How-To%3a-Use-Recaptcha-with-Devise</a></p>\n","source":"_posts/Rails-4-1-6-使用Devise-和Simple-Captcha-验证码.md","raw":"title: Rails 4.1.6 使用Devise 和Simple Captcha 验证码\ndate: 2015-01-12 09:45:52\ntags: [rails,devise,simple captcha]\n---\n\n##rails simple_captcha 验证码实现\n\n###用到的gem有\n\n```rails\ngem \"galetahub-simple_captcha\", :require => \"simple_captcha\"\ngem \"mini_magick\"\n```\n<!--more-->\n执行**bundle**\n\n重写**devise**的**controller**方法我把**devise**的方法放到*/admin*里了\n\n```rails\ndevise_for :users,\n           :path => \"/admin/users\",\n           :controllers => { :sessions => \"devise_hack/sessions\",:registrations => \"devise_hack/registrations\" },\n           :path_names  => { :sign_in  => 'login', :sign_out => 'logout', :sign_up => 'sign_up'}\n```\n\n###执行下面命令安装simple_captcha\n\n```rails\nrails generate simple_captcha\nrake db:migrate\n```\n\n生成**_simple_captcha.html.erb**文件，该文件为验证码的局部视图模板。修改局部视图**/vews/devise/sessions/new.html.erb**，添加一个切换验证码链接。\n\n```rails\n<%= show_simple_captcha %>\n```\n\n##注册和登陆都需要验证码，需要重构两个controller的create方法\n\n在**controllers/devise_hack/registrations_controller.rb**中\n\n```rails\nclass DeviseHack::RegistrationsController < Devise::RegistrationsController\n    include SimpleCaptcha::ControllerHelpers\n    def create\n    if simple_captcha_valid?\n      super\n    else\n      build_resource\n      #clean_up_passwords(resource)\n      params[:user][:password] = nil\n      flash.now[:alert] = \"验证码错误!\"\n      respond_with_navigational(resource) { render :new }\n    end\n  end\nend\n```\n\n> skip_before_filter :require_no_authentication, :only => [:new]\n只有在登陆的时候调用此方法,如果没有会一直重定向到注册页面\n\n在**controllers/devise_hack/sessions_controller.rb**中\n\n```rails\nclass DeviseHack::SessionsController < Devise::SessionsController\n  include SimpleCaptcha::ControllerHelpers\n  skip_before_filter :require_no_authentication, :only => [:new]\n  def create\n    if simple_captcha_valid?\n      super\n    else\n      build_resource\n      flash[:error] = \"Captcha has wrong, try a again.\"\n      redirect_to '/admin/users/login'\n      #respond_with_navigational(resource) { render :new }\n    end\n  end\n  def build_resource(hash=nil)\n    self.resource = resource_class.new_with_session(hash || {}, session)\n  end\nend\n```\n\n##遇到的问题:\n\nImageMagick: Error while running convert: convert: unable to read font\n\n> 安装 $ brew install ghostscript\n\n验证码不验证问题（具体记不清了。。）\n\n> 将render换成redirect_to\n\n##参考文章：\n\n[http://www.cnblogs.com/itmangelihai/p/3254608.html](http://www.cnblogs.com/itmangelihai/p/3254608.html)\n[https://github.com/plataformatec/devise/wiki/How-To%3a-Use-Recaptcha-with-Devise](https://github.com/plataformatec/devise/wiki/How-To%3a-Use-Recaptcha-with-Devise)","slug":"Rails-4-1-6-使用Devise-和Simple-Captcha-验证码","updated":1421028004000,"excerpt":"<h2 id=\"rails_simple_captcha_验证码实现\">rails simple_captcha 验证码实现</h2>\n<h3 id=\"用到的gem有\">用到的gem有</h3>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem <span class=\"string\">\"galetahub-simple_captcha\"</span>, :<span class=\"keyword\">require</span> =&gt; <span class=\"string\">\"simple_captcha\"</span></div><div class=\"line\">gem <span class=\"string\">\"mini_magick\"</span></div></pre></td></tr></table></figure>\n\n<p>","_id":"fiocmcgss0oci270","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"rails 多语言支持","date":1421024502000,"tags":["y1jtckj4cxneiidn","iwgffux37it5mew5"],"content":"<p><a href=\"http://railscasts.com/episodes/138-i18n\" target=\"_blank\" rel=\"external\">http://railscasts.com/episodes/138-i18n</a><br><a href=\"http://rails-i18n.org/\" target=\"_blank\" rel=\"external\">http://rails-i18n.org/</a><br><a href=\"http://github.com/svenfuchs/rails-i18n/tree/master/rails%2Flocale\" target=\"_blank\" rel=\"external\">Locale Examples</a><br><a href=\"http://blog.segmentfault.com/xiongxin/1190000000489534\" target=\"_blank\" rel=\"external\">http://blog.segmentfault.com/xiongxin/1190000000489534</a></p>\n<h3 id=\"i18n-rb:\">i18n.rb:</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"constant\">I18n</span>.default_locale = <span class=\"string\">'zh-CN'</span></div><div class=\"line\"><span class=\"constant\">LANGUAGES</span> = {</div><div class=\"line\">    <span class=\"string\">'English'</span> =&gt; <span class=\"string\">'en'</span>,</div><div class=\"line\">    <span class=\"string\">'Chinese'</span> =&gt; <span class=\"string\">'zh-CN'</span></div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<h3 id=\"application-rb:\">application.rb:</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"constant\">I18n</span>.config.enforce_available_locales = <span class=\"keyword\">false</span></div><div class=\"line\">config.i18n.load_path += <span class=\"constant\">Dir</span>[<span class=\"constant\">Rails</span>.root.join(<span class=\"string\">'my'</span>, <span class=\"string\">'locales'</span>, <span class=\"string\">'*.{rb,yml}'</span>).to_s]</div><div class=\"line\">config.i18n.default_locale = <span class=\"symbol\">:<span class=\"string\">'zh-CN'</span></span></div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>kaminari 多语设置</p>\n</blockquote>\n<h3 id=\"zh-CN-yml:\">zh-CN.yml:</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">zh-<span class=\"constant\">CN</span><span class=\"symbol\">:</span></div><div class=\"line\">  <span class=\"symbol\">views:</span></div><div class=\"line\">      <span class=\"symbol\">pagination:</span></div><div class=\"line\">        <span class=\"symbol\">first:</span> <span class=\"string\">\"« 首页\"</span></div><div class=\"line\">        <span class=\"symbol\">last:</span> <span class=\"string\">\"末页 »\"</span></div><div class=\"line\">        <span class=\"symbol\">previous:</span> <span class=\"string\">\"« 上一页\"</span></div><div class=\"line\">        <span class=\"symbol\">next:</span> <span class=\"string\">\"下一页 »\"</span></div><div class=\"line\">        <span class=\"symbol\">truncate:</span> <span class=\"string\">\"...\"</span></div></pre></td></tr></table></figure>\n\n","source":"_posts/rails-多语言支持.md","raw":"title: rails 多语言支持\ndate: 2015-01-12 09:01:42\ntags: [rails,多语言]\n---\n[http://railscasts.com/episodes/138-i18n](http://railscasts.com/episodes/138-i18n)\n[http://rails-i18n.org/](http://rails-i18n.org/)\n[Locale Examples](http://github.com/svenfuchs/rails-i18n/tree/master/rails%2Flocale)\n[http://blog.segmentfault.com/xiongxin/1190000000489534](http://blog.segmentfault.com/xiongxin/1190000000489534)\n\n###i18n.rb:\n```ruby\nI18n.default_locale = 'zh-CN'\nLANGUAGES = {\n    'English' => 'en',\n    'Chinese' => 'zh-CN'\n}\n```\n\n###application.rb:\n```ruby\nI18n.config.enforce_available_locales = false\nconfig.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]\nconfig.i18n.default_locale = :'zh-CN'\n```\n\n>kaminari 多语设置\n\n###zh-CN.yml:\n```ruby\nzh-CN:\n  views:\n      pagination:\n        first: \"« 首页\"\n        last: \"末页 »\"\n        previous: \"« 上一页\"\n        next: \"下一页 »\"\n        truncate: \"...\"\n```","slug":"rails-多语言支持","updated":1421024838000,"excerpt":"","_id":"4m6n2b68bqgd0cx1","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"kaminari简要文档","date":1420986163000,"tags":["y1jtckj4cxneiidn","8a53wel3fr0lbarb","x6sh59eosqp0op97"],"content":"<h2 id=\"全局参数设置\">全局参数设置</h2>\n<p>执行以下命令，会在config/initializers下生成一个配置文件kaminari_config.rb</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rails g <span class=\"symbol\">kaminari:</span>config</div></pre></td></tr></table></figure>\n\n<p>这个文件控制着kaminari的全局设置，有以下参数可以定义<br><strong>default_per_page</strong> 默认值25<br><strong>page_method_name</strong> 分页方法的名称<br><strong>param_name</strong> 分页参数的参数名，默认为param<br><strong>window / outer_window / left / right</strong>这四个参数都与分页显示有关，设定了显示页码标签的方式和数量。</p>\n<h2 id=\"分页界面定制\">分页界面定制</h2>\n<p>执行一下命令可以获取默认模版文件。目录在app/views/kaminari/下</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rails g <span class=\"symbol\">kaminari:</span>views default</div></pre></td></tr></table></figure>\n\n<p>各个文件描述如下<br><strong>_paginator.html.erb</strong> 这是总的入口文件，可以通过修改它来调整显示的整体结构比如我不需要”首页”，”末页”这两个链接，那么我就在这个文件里面将对应的代码删除<br><strong>_page.html.erb</strong> 对应页码链接<br><strong>_first_page.html.erb / _last_page.html.erb</strong>对应”首页”和”末页”的链接<br><strong>_prev_page.html.erb / _next_page.html.erb</strong> 对应”上一页”和”下一页”的链接<br><strong>_gap.html.erb</strong> 空隙的显示，默认是中间的省略号(…)</p>\n<blockquote>\n<p>注意，不要修改文件名。</p>\n</blockquote>\n<p>theme功能<br>在<em>app/views/kaminari</em>目录下创建一个文件夹，例如test，把默认的模版文件拷贝进去，修改模版文件的内容，就形成了个性化的样式。<br>view页面按下方写法即可调用个性样式。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%= paginate <span class=\"variable\">@blogs</span>, <span class=\"symbol\">:theme=&gt;<span class=\"string\">'test'</span></span> %&gt;</div></pre></td></tr></table></figure>\n\n","source":"_posts/kaminari简要文档.md","raw":"title: kaminari简要文档\ndate: 2015-01-11 22:22:43\ntags: [rails,kaminari,分页]\n---\n##全局参数设置\n执行以下命令，会在config/initializers下生成一个配置文件kaminari_config.rb\n```ruby\nrails g kaminari:config\n```\n这个文件控制着kaminari的全局设置，有以下参数可以定义\n**default_per_page** 默认值25\n**page_method_name** 分页方法的名称\n**param_name** 分页参数的参数名，默认为param\n**window / outer_window / left / right**这四个参数都与分页显示有关，设定了显示页码标签的方式和数量。\n\n##分页界面定制\n执行一下命令可以获取默认模版文件。目录在app/views/kaminari/下\n```ruby\nrails g kaminari:views default\n```\n各个文件描述如下\n**_paginator.html.erb** 这是总的入口文件，可以通过修改它来调整显示的整体结构比如我不需要\"首页\"，\"末页\"这两个链接，那么我就在这个文件里面将对应的代码删除\n**_page.html.erb** 对应页码链接\n**_first_page.html.erb / _last_page.html.erb**对应\"首页\"和\"末页\"的链接\n**_prev_page.html.erb / _next_page.html.erb** 对应\"上一页\"和\"下一页\"的链接\n**_gap.html.erb** 空隙的显示，默认是中间的省略号(…)\n\n>注意，不要修改文件名。\n\ntheme功能\n在*app/views/kaminari*目录下创建一个文件夹，例如test，把默认的模版文件拷贝进去，修改模版文件的内容，就形成了个性化的样式。\nview页面按下方写法即可调用个性样式。\n```ruby\n<%= paginate @blogs, :theme=>'test' %>\n```\n","slug":"kaminari简要文档","updated":1421023556000,"excerpt":"","_id":"fl2qksjndbp345dk","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"rails 第二天","date":1421024747000,"tags":["y1jtckj4cxneiidn","0hvd08ptgekmzvyj","kycvlgnxqidkzkz5","exnoqgrwbxo8hil6"],"content":"<h2 id=\"调用淘宝IP的API，Helper：\">调用淘宝IP的API，Helper：</h2>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">module</span> <span class=\"title\">AdminsHelper</span></span></div><div class=\"line\">  <span class=\"keyword\">require</span> <span class=\"string\">'open-uri'</span></div><div class=\"line\">  <span class=\"keyword\">require</span> <span class=\"string\">'json'</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>hello_world(name)</div><div class=\"line\">    <span class=\"string\">\"hello <span class=\"subst\">#{name}</span>\"</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>get_location</div><div class=\"line\">    ip = request.remote_ip</div><div class=\"line\">    url = <span class=\"string\">\"http://ip.taobao.com/service/getIpInfo.php?ip=\"</span> + ip</div><div class=\"line\">    response = <span class=\"constant\">Net::HTTP</span>.get_response(<span class=\"constant\">URI</span>.parse(url)).body</div><div class=\"line\">    response = <span class=\"constant\">JSON</span>.parse(response)[<span class=\"string\">'data'</span>]</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>get_country</div><div class=\"line\">    response = get_location[<span class=\"string\">'country'</span>]</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p><a id=\"more\"></a></p>\n<h3 id=\"在Controller里调用Helper\">在Controller里调用Helper</h3>\n<p>在controller引入：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">include</span>(<span class=\"constant\">AdminsHelper</span>)</div></pre></td></tr></table></figure>\n\n<h3 id=\"Link_to加入html后缀，使用:format\">Link_to加入html后缀，使用:format</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%= link_to b.sbname,{<span class=\"symbol\">:controller</span> =&gt; <span class=\"string\">\"admins\"</span>,<span class=\"symbol\">:action</span> =&gt; <span class=\"string\">\"show\"</span>,<span class=\"symbol\">:format=&gt;</span><span class=\"symbol\">:html</span>,<span class=\"symbol\">:id=&gt;b</span>.id} %&gt;</div></pre></td></tr></table></figure>\n\n<h2 id=\"Form_表单提交_4-0加入了新的方法params-require()-permit()\">Form 表单提交 4.0加入了新的方法<strong><em>params.require().permit()</em></strong></h2>\n<h3 id=\"定义私有方法_adminparams\">定义私有方法 adminparams</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> </span>create</div><div class=\"line\">\t<span class=\"variable\">@admins</span> = params[<span class=\"symbol\">:admin</span>]</div><div class=\"line\">\t<span class=\"variable\">@admins</span>[<span class=\"symbol\">:sbpass</span>] = <span class=\"constant\">Digest::MD5</span>.hexdigest(<span class=\"variable\">@admins</span>[<span class=\"symbol\">:sbpass</span>])</div><div class=\"line\">\t<span class=\"variable\">@admins</span>[<span class=\"symbol\">:sblock</span>] = <span class=\"number\">0</span></div><div class=\"line\">\t<span class=\"variable\">@admins</span>[<span class=\"symbol\">:current_login_date</span>]= <span class=\"constant\">Time</span>.now.utc.to_i()</div><div class=\"line\">\t<span class=\"variable\">@admins</span>[<span class=\"symbol\">:last_login_date</span>] = <span class=\"string\">''</span></div><div class=\"line\">\t<span class=\"variable\">@admins</span>[<span class=\"symbol\">:last_login_ip</span>]= request.remote_ip</div><div class=\"line\">\t<span class=\"variable\">@admins</span>[<span class=\"symbol\">:last_login_area</span>] = get_location[<span class=\"string\">'country'</span>]</div><div class=\"line\">\t<span class=\"variable\">@admin</span> = <span class=\"constant\">Admin</span>.new(admin_params)</div><div class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"variable\">@admin</span>.save</div><div class=\"line\">\t\tredirect_to <span class=\"symbol\">action:</span> <span class=\"string\">'index'</span></div><div class=\"line\">\t<span class=\"keyword\">else</span></div><div class=\"line\">\t\trender <span class=\"string\">\"new\"</span></div><div class=\"line\">\t<span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> </span>show</div><div class=\"line\">\t<span class=\"variable\">@admins</span> = <span class=\"constant\">Admin</span>.find(params[<span class=\"symbol\">:id</span>])</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> </span>admin_params</div><div class=\"line\">\tparams.<span class=\"keyword\">require</span>(<span class=\"symbol\">:admin</span>).permit(</div><div class=\"line\">\t\t<span class=\"symbol\">:sbname</span>,<span class=\"symbol\">:sbpass</span>,<span class=\"symbol\">:sbemail</span>,<span class=\"symbol\">:sblock</span>,<span class=\"symbol\">:current_login_date</span>,<span class=\"symbol\">:last_login_date</span>,<span class=\"symbol\">:last_login_ip</span>,<span class=\"symbol\">:last_login_area</span></div><div class=\"line\">\t)</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n","source":"_posts/rails-第二天.md","raw":"title: rails 第二天\ndate: 2015-01-12 09:05:47\ntags: [rails,helper,link_to,form]\n---\n##调用淘宝IP的API，Helper：\n```ruby\nmodule AdminsHelper\n  require 'open-uri'\n  require 'json'\n  def hello_world(name)\n    \"hello #{name}\"\n  end\n  def get_location\n    ip = request.remote_ip\n    url = \"http://ip.taobao.com/service/getIpInfo.php?ip=\" + ip\n    response = Net::HTTP.get_response(URI.parse(url)).body\n    response = JSON.parse(response)['data']\n  end\n  def get_country\n    response = get_location['country']\n  end\nend\n```\n<!--more-->\n###在Controller里调用Helper\n在controller引入：\n```ruby\ninclude(AdminsHelper)\n```\n\n###Link_to加入html后缀，使用:format\n```ruby\n<%= link_to b.sbname,{:controller => \"admins\",:action => \"show\",:format=>:html,:id=>b.id} %>\n```\n\n##Form 表单提交 4.0加入了新的方法***params.require().permit()***\n###定义私有方法 adminparams\n```ruby\ndef create\n\t@admins = params[:admin]\n\t@admins[:sbpass] = Digest::MD5.hexdigest(@admins[:sbpass])\n\t@admins[:sblock] = 0\n\t@admins[:current_login_date]= Time.now.utc.to_i()\n\t@admins[:last_login_date] = ''\n\t@admins[:last_login_ip]= request.remote_ip\n\t@admins[:last_login_area] = get_location['country']\n\t@admin = Admin.new(admin_params)\n\tif @admin.save\n\t\tredirect_to action: 'index'\n\telse\n\t\trender \"new\"\n\tend\nend\ndef show\n\t@admins = Admin.find(params[:id])\nend\ndef admin_params\n\tparams.require(:admin).permit(\n\t\t:sbname,:sbpass,:sbemail,:sblock,:current_login_date,:last_login_date,:last_login_ip,:last_login_area\n\t)\nend\n```\n","slug":"rails-第二天","updated":1421025016000,"excerpt":"<h2 id=\"调用淘宝IP的API，Helper：\">调用淘宝IP的API，Helper：</h2>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">module</span> <span class=\"title\">AdminsHelper</span></span></div><div class=\"line\">  <span class=\"keyword\">require</span> <span class=\"string\">'open-uri'</span></div><div class=\"line\">  <span class=\"keyword\">require</span> <span class=\"string\">'json'</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>hello_world(name)</div><div class=\"line\">    <span class=\"string\">\"hello <span class=\"subst\">#{name}</span>\"</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>get_location</div><div class=\"line\">    ip = request.remote_ip</div><div class=\"line\">    url = <span class=\"string\">\"http://ip.taobao.com/service/getIpInfo.php?ip=\"</span> + ip</div><div class=\"line\">    response = <span class=\"constant\">Net::HTTP</span>.get_response(<span class=\"constant\">URI</span>.parse(url)).body</div><div class=\"line\">    response = <span class=\"constant\">JSON</span>.parse(response)[<span class=\"string\">'data'</span>]</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>get_country</div><div class=\"line\">    response = get_location[<span class=\"string\">'country'</span>]</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>","_id":"35j1detypjeibtmx","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"rails 第一天","date":1420985483000,"tags":["y1jtckj4cxneiidn","8a53wel3fr0lbarb"],"content":"<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-IMG_0242.jpg\" alt=\"野三坡\"></p>\n<h2 id=\"常用命令\">常用命令</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">rake db:schema:dump</div><div class=\"line\">rails g model 名称</div><div class=\"line\">rails g controller 名称</div></pre></td></tr></table></figure>\n\n<h2 id=\"常用gem:\">常用gem:</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem <span class=\"string\">'mysql2'</span></div><div class=\"line\">gem <span class=\"string\">'kaminari'</span> <span class=\"comment\">#分页</span></div><div class=\"line\">gem <span class=\"string\">'nokogiri'</span> <span class=\"comment\">#DOM分析</span></div></pre></td></tr></table></figure>\n\n<p><a id=\"more\"></a><br><a href=\"https://github.com/amatsuda/kaminari\" target=\"_blank\" rel=\"external\">kaminari</a><br><a href=\"http://akgitcom.github.io/2014/09/11/kaminari%E7%AE%80%E8%A6%81%E6%96%87%E6%A1%A3/\" target=\"_blank\" rel=\"external\">kaminari简要文档</a></p>\n<h2 id=\"使用方法：\">使用方法：</h2>\n<p>controller:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AdminsController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ApplicationController</span></span></span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">def</span> </span>index</div><div class=\"line\">\t\t<span class=\"variable\">@admins</span> = <span class=\"constant\">Admin</span>.order(<span class=\"string\">\"id DESC\"</span>).page(params[<span class=\"symbol\">:page</span>]).per(<span class=\"number\">1</span>)</div><div class=\"line\">\t<span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>views:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;% <span class=\"variable\">@admins</span>.each <span class=\"keyword\">do</span> |b|%&gt;</div><div class=\"line\">&lt;%=b.sbname %&gt;</div><div class=\"line\">&lt;% <span class=\"keyword\">end</span> %&gt;</div><div class=\"line\">&lt;%= paginate <span class=\"variable\">@admins</span> %&gt;</div></pre></td></tr></table></figure>\n\n<p>数据库表名后缀添加方法：<br>在config/application.rb添加</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">config.active_record.table_name_prefix = <span class=\"string\">'j_'</span></div></pre></td></tr></table></figure>\n\n","source":"_posts/rails-第一天.md","raw":"title: rails 第一天\ndate: 2015-01-11 22:11:23\ntags: [rails,kaminari]\n---\n\n![野三坡](http://7u2icj.com1.z0.glb.clouddn.com/github-IMG_0242.jpg)\n\n##常用命令\n```bash\nrake db:schema:dump\nrails g model 名称\nrails g controller 名称\n```\n\n##常用gem:\n```bash\ngem 'mysql2'\ngem 'kaminari' #分页\ngem 'nokogiri' #DOM分析\n```\n<!--more-->\n[kaminari](https://github.com/amatsuda/kaminari)\n[kaminari简要文档](http://akgitcom.github.io/2014/09/11/kaminari%E7%AE%80%E8%A6%81%E6%96%87%E6%A1%A3/)\n\n##使用方法：\ncontroller:\n```ruby\nclass AdminsController < ApplicationController\n\tdef index\n\t\t@admins = Admin.order(\"id DESC\").page(params[:page]).per(1)\n\tend\nend\n```\nviews:\n```ruby\n<% @admins.each do |b|%>\n<%=b.sbname %>\n<% end %>\n<%= paginate @admins %>\n```\n\n数据库表名后缀添加方法：\n在config/application.rb添加\n```ruby\nconfig.active_record.table_name_prefix = 'j_'\n```\n","slug":"rails-第一天","updated":1421027959000,"excerpt":"<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-IMG_0242.jpg\" alt=\"野三坡\"></p>\n<h2 id=\"常用命令\">常用命令</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">rake db:schema:dump</div><div class=\"line\">rails g model 名称</div><div class=\"line\">rails g controller 名称</div></pre></td></tr></table></figure>\n\n<h2 id=\"常用gem:\">常用gem:</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gem <span class=\"string\">'mysql2'</span></div><div class=\"line\">gem <span class=\"string\">'kaminari'</span> <span class=\"comment\">#分页</span></div><div class=\"line\">gem <span class=\"string\">'nokogiri'</span> <span class=\"comment\">#DOM分析</span></div></pre></td></tr></table></figure>\n\n<p>","_id":"q7gi3dgpd6jdk1tc","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"rails开发CMS遇到的问题","date":1421027013000,"tags":["y1jtckj4cxneiidn","tdmmr8qmq4rds40s"],"content":"<h3 id=\"关联排序并取出第一个IMAGE\">关联排序并取出第一个IMAGE</h3>\n<blockquote>\n<p>uploader用了carrierwave的七牛云,如果不用：<br>&lt;%= b.photos.order(sort: :asc).pluck(:image).pop || “blank.jpg” %&gt;<br>b.photos.order(sort: :asc) 你的<br>.pluck(:image)，取出image字段<br>.pop，取出第一个，如果为空，返回nil<br>|| blank，默认图片</p>\n</blockquote>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"vbscript\">&lt;% @products.<span class=\"keyword\">each</span> <span class=\"keyword\">do</span> |b|%&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"title\">li</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"title\">a</span> <span class=\"attribute\">href</span>=<span class=\"value\">\"/products/&lt;%=b.id%&gt;.html\"</span>&gt;</span></div><div class=\"line\"><span class=\"vbscript\">&lt;%= image_tag( b.photos.order(sort: :<span class=\"built_in\">asc</span>).map(&:image_url).pop) %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"title\">a</span>&gt;</span></div><div class=\"line\"><span class=\"vbscript\">&lt;%= link_to truncate(strip_tags(b.title), length: <span class=\"number\">60</span>, escape: <span class=\"literal\">false</span>),</span></div><div class=\"line\">                            {:controller =&gt; <span class=\"string\">\"products\"</span>,</div><div class=\"line\">                             :action =&gt; <span class=\"string\">\"show\"</span>,</div><div class=\"line\">                             :id =&gt; <span class=\"string\">\"#{b.id}\"</span>,</div><div class=\"line\">                             :format=&gt;<span class=\"string\">\"html\"</span></div><div class=\"line\">                            } %&gt;</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"title\">li</span>&gt;</span></div><div class=\"line\"><span class=\"vbscript\">&lt;% <span class=\"keyword\">end</span> %&gt;</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"截取字符串包括”…”加字符数量\">截取字符串包括”…”加字符数量</h3>\n<figure class=\"highlight rails\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"operator\"><span class=\"keyword\">truncate</span>(strip_tags(b.title), length: <span class=\"number\">60</span>, <span class=\"keyword\">escape</span>: <span class=\"literal\">false</span>)</span></div></pre></td></tr></table></figure>\n\n","source":"_posts/rails开发CMS遇到的问题.md","raw":"title: rails开发CMS遇到的问题\ndate: 2015-01-12 09:43:33\ntags: [rails,cms]\n---\n\n###关联排序并取出第一个IMAGE\n\n> uploader用了carrierwave的七牛云,如果不用：\n<%= b.photos.order(sort: :asc).pluck(:image).pop || “blank.jpg” %>\nb.photos.order(sort: :asc) 你的\n.pluck(:image)，取出image字段\n.pop，取出第一个，如果为空，返回nil\n|| blank，默认图片\n\n```rails\n<% @products.each do |b|%>\n<li>\n<a href=\"/products/<%=b.id%>.html\">\n<%= image_tag( b.photos.order(sort: :asc).map(&:image_url).pop) %>\n</a>\n<%= link_to truncate(strip_tags(b.title), length: 60, escape: false),\n                            {:controller => \"products\",\n                             :action => \"show\",\n                             :id => \"#{b.id}\",\n                             :format=>\"html\"\n                            } %>\n</li>\n<% end %>\n```\n\n###截取字符串包括”…”加字符数量\n```rails\ntruncate(strip_tags(b.title), length: 60, escape: false)\n```","slug":"rails开发CMS遇到的问题","updated":1421027121000,"excerpt":"","_id":"325uifs2fmcpu8tn","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"rails 第三天","date":1421025066000,"tags":["y1jtckj4cxneiidn","nv4vbi9jrisedka8","v6mt009k9l4sewu1"],"content":"<h2 id=\"多对多关联：\">多对多关联：</h2>\n<p>在Rails中多对多关联通过在关联表对应的类中声明has_and_belongs_to_many来实现。<br>在数据库中，多对多关联使用中间表来实现，表中包括关联表的主键，Active Record假定这个中间表的名字是由关联表的名字根据字母的顺序串联起来得到的。<br><a id=\"more\"></a><br>例如，关联表为categories和products，中间表的名字就是categories_products。<br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-Rails57_1.gif\" alt=\"关联表为categories和products\"></p>\n<blockquote>\n<p>注意我们的关联表没有id列，有两个原因:<br>首先，不需要一个唯一的标识来识别两个外键之间的连接，我们定义表的语句像下面这样：</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"operator\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> categories_products (</span></div><div class=\"line\">category_id <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">product_id <span class=\"built_in\">int</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\"><span class=\"keyword\">constraint</span> fk_cp_category <span class=\"keyword\">foreign</span> <span class=\"keyword\">key</span> (category_id) <span class=\"keyword\">references</span> categories(id),</div><div class=\"line\"><span class=\"keyword\">constraint</span> fk_cp_product <span class=\"keyword\">foreign</span> <span class=\"keyword\">key</span> (product_id) <span class=\"keyword\">references</span> products(id),</div><div class=\"line\"><span class=\"keyword\">primary</span> <span class=\"keyword\">key</span> (category_id, product_id)</div><div class=\"line\">);</div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>第二个原因在中间表中不包括一个<strong>id</strong>列，<strong>Active Record</strong>在访问某个行时会自动包含所有的列。如果包含了一个id列，那么这个<strong>id</strong>列就会复写掉在关联表中的<strong>id</strong>列。</p>\n</blockquote>\n<h2 id=\"he_has_and_belongs_to_many()声明:\">he has_and_belongs_to_many()声明:</h2>\n<blockquote>\n<p><strong>has_and_belongs_to_many</strong>在很多方面很像<strong>has_many</strong>，<strong>has_and_belongs_to_many</strong>创建了本质上是一个集合的属性，该属性支持和<strong>has_many</strong>相同的方法。<br>也许我们使用Rails来写一个社区站点，在这里用户可以阅读文章。这里有很多的用户和文章，而且任何一个用户都可以阅读多个文章，为了跟踪，我们希望知道谁读了哪些文章，每篇文章有谁阅读过，我们也希望知道用户最后一次在什么时间阅读了哪篇文章，我们会这样设计表：</p>\n</blockquote>\n<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-Rails57_2.gif\" alt=\"\"></p>\n<p>我们这样设置两个Model类互相关联：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Article</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActiveRecord::Base</span></span></span></div><div class=\"line\">\thas_and_belongs_to_many <span class=\"symbol\">:users</span></div><div class=\"line\"><span class=\"comment\"># ...</span></div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActiveRecord::Base</span></span></span></div><div class=\"line\">\thas_and_belongs_to_many <span class=\"symbol\">:articles</span></div><div class=\"line\"><span class=\"comment\"># ...</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>这样我们就可以列出所有阅读过文章123的用户和名为pragdave的用户阅读的所有文章：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># Who has read article 123?</span></div><div class=\"line\">article = <span class=\"constant\">Article</span>.find(<span class=\"number\">123</span>)</div><div class=\"line\">readers = article.users</div><div class=\"line\"><span class=\"comment\"># What has Dave read?</span></div><div class=\"line\">dave = <span class=\"constant\">User</span>.find_by_name(<span class=\"string\">\"pragdave\"</span>)</div><div class=\"line\">articles_that_dave_read = dave.articles</div></pre></td></tr></table></figure>\n\n<p>当我们的程序通知某个人阅读了某篇文章的时候，将user记录和article记录建立关联，我们调用下面的方法：</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActiveRecord::Base</span></span></span></div><div class=\"line\">\thas_and_belongs_to_many <span class=\"symbol\">:articles</span></div><div class=\"line\">\t<span class=\"function\"><span class=\"keyword\">def</span> </span>read_article(article)</div><div class=\"line\">\t\tarticles.push_with_attributes(article, <span class=\"symbol\">:read_at</span> =&gt; <span class=\"constant\">Time</span>.now)</div><div class=\"line\">\t<span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"comment\"># ...</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>方法push_with_attributes( )和&lt;&lt;方法的作用一样，都是给两个Model之间设置连接，而且还赋值给中间表记录什么人在什么时间阅读了文章。</p>\n<blockquote>\n<p>注：如果该方法难以理解，可以想象一下C#中使用反射给某个对象的字段赋值，我们需要提供对象，对象的字段名，字段对应的值来进行操作。作为一种的关联方法，<strong>hasand_belongs_to_many</strong>支持一系列声明来复写<strong>Active Record</strong>的默认设置：<strong>:class_name</strong>, <strong>:foreign_key</strong>和<strong>:conditions</strong>，和其他的has方法一样(<strong>:foreign_key</strong>设置中间表中的外键的名字)。进一步说，<strong>has_and_belongs_to_many</strong>支持复写中间表的名字，外键列的名字，<strong>find</strong>，<strong>insert</strong>，<strong>delete</strong>中使用的SQL，详细请参考Rdoc。</p>\n</blockquote>\n<p>原文出处:<a href=\"http://www.cnblogs.com/dahuzizyd/archive/2008/04/24/ruby_rails_57.html\" target=\"_blank\" rel=\"external\">Ruby on rails开发从头来（五十七）- ActiveRecord基础（多对多关联关系）</a><br>参考文章:<br><a href=\"http://blog.csdn.net/abbuggy/article/details/8274717\" target=\"_blank\" rel=\"external\">Ruby on Rails，一对多关联（One-to-Many）</a><br><a href=\"http://guides.ruby-china.org/association_basics.html\" target=\"_blank\" rel=\"external\">http://guides.ruby-china.org/association_basics.html</a><br><a href=\"https://gist.github.com/nightire/5124880\" target=\"_blank\" rel=\"external\">https://gist.github.com/nightire/5124880</a></p>\n","source":"_posts/rails-第三天.md","raw":"title: rails 第三天\ndate: 2015-01-12 09:11:06\ntags: [rails,关联查询,多对多]\n---\n##多对多关联：\n在Rails中多对多关联通过在关联表对应的类中声明has_and_belongs_to_many来实现。\n在数据库中，多对多关联使用中间表来实现，表中包括关联表的主键，Active Record假定这个中间表的名字是由关联表的名字根据字母的顺序串联起来得到的。\n<!--more-->\n例如，关联表为categories和products，中间表的名字就是categories_products。\n![关联表为categories和products](http://7u2icj.com1.z0.glb.clouddn.com/github-Rails57_1.gif)\n\n> 注意我们的关联表没有id列，有两个原因:\n> 首先，不需要一个唯一的标识来识别两个外键之间的连接，我们定义表的语句像下面这样：\n\n\n```sql\ncreate table categories_products (\ncategory_id int not null,\nproduct_id int not null,\nconstraint fk_cp_category foreign key (category_id) references categories(id),\nconstraint fk_cp_product foreign key (product_id) references products(id),\nprimary key (category_id, product_id)\n);\n```\n\n> 第二个原因在中间表中不包括一个**id**列，**Active Record**在访问某个行时会自动包含所有的列。如果包含了一个id列，那么这个**id**列就会复写掉在关联表中的**id**列。\n\n##he has_and_belongs_to_many()声明:\n> **has_and_belongs_to_many**在很多方面很像**has_many**，**has_and_belongs_to_many**创建了本质上是一个集合的属性，该属性支持和**has_many**相同的方法。\n> 也许我们使用Rails来写一个社区站点，在这里用户可以阅读文章。这里有很多的用户和文章，而且任何一个用户都可以阅读多个文章，为了跟踪，我们希望知道谁读了哪些文章，每篇文章有谁阅读过，我们也希望知道用户最后一次在什么时间阅读了哪篇文章，我们会这样设计表：\n\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-Rails57_2.gif)\n\n我们这样设置两个Model类互相关联：\n```ruby\nclass Article < ActiveRecord::Base\n\thas_and_belongs_to_many :users\n# ...\nend\n\nclass User < ActiveRecord::Base\n\thas_and_belongs_to_many :articles\n# ...\nend\n```\n这样我们就可以列出所有阅读过文章123的用户和名为pragdave的用户阅读的所有文章：\n```ruby\n# Who has read article 123?\narticle = Article.find(123)\nreaders = article.users\n# What has Dave read?\ndave = User.find_by_name(\"pragdave\")\narticles_that_dave_read = dave.articles\n```\n当我们的程序通知某个人阅读了某篇文章的时候，将user记录和article记录建立关联，我们调用下面的方法：\n\n```ruby\nclass User < ActiveRecord::Base\n\thas_and_belongs_to_many :articles\n\tdef read_article(article)\n\t\tarticles.push_with_attributes(article, :read_at => Time.now)\n\tend\n# ...\nend\n```\n\n方法push_with_attributes( )和<<方法的作用一样，都是给两个Model之间设置连接，而且还赋值给中间表记录什么人在什么时间阅读了文章。\n\n> 注：如果该方法难以理解，可以想象一下C#中使用反射给某个对象的字段赋值，我们需要提供对象，对象的字段名，字段对应的值来进行操作。作为一种的关联方法，**hasand_belongs_to_many**支持一系列声明来复写**Active Record**的默认设置：**:class_name**, **:foreign_key**和**:conditions**，和其他的has方法一样(**:foreign_key**设置中间表中的外键的名字)。进一步说，**has_and_belongs_to_many**支持复写中间表的名字，外键列的名字，**find**，**insert**，**delete**中使用的SQL，详细请参考Rdoc。\n\n原文出处:[Ruby on rails开发从头来（五十七）- ActiveRecord基础（多对多关联关系）](http://www.cnblogs.com/dahuzizyd/archive/2008/04/24/ruby_rails_57.html)\n参考文章:\n[Ruby on Rails，一对多关联（One-to-Many）](http://blog.csdn.net/abbuggy/article/details/8274717)\n[http://guides.ruby-china.org/association_basics.html](http://guides.ruby-china.org/association_basics.html)\n[https://gist.github.com/nightire/5124880](https://gist.github.com/nightire/5124880)","slug":"rails-第三天","updated":1421027966000,"excerpt":"<h2 id=\"多对多关联：\">多对多关联：</h2>\n<p>在Rails中多对多关联通过在关联表对应的类中声明has_and_belongs_to_many来实现。<br>在数据库中，多对多关联使用中间表来实现，表中包括关联表的主键，Active Record假定这个中间表的名字是由关联表的名字根据字母的顺序串联起来得到的。<br>","_id":"3b8k1tohz1yr8bdj","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"thinkphp 后台动态设置路由","date":1421026485000,"tags":["u7wijhfyxcxq0lgi","zz9ygliq4zjrijrv"],"content":"<h2 id=\"Thinkphp_后台动态设置配置文件\">Thinkphp 后台动态设置配置文件</h2>\n<blockquote>\n<p>单独加载routes.php路由文件。routes.php返回数组。</p>\n</blockquote>\n<p><a id=\"more\"></a></p>\n<h2 id=\"创建配置文件\">创建配置文件</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$Category</span> = D(<span class=\"string\">'Category'</span>);</div><div class=\"line\"><span class=\"variable\">$categorylist</span> = <span class=\"variable\">$Category</span><span class=\"variable\">-&gt;where</span>(<span class=\"string\">'sblock=0'</span>)<span class=\"variable\">-&gt;select</span>();</div><div class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$categorylist</span> <span class=\"keyword\">as</span> <span class=\"variable\">$row</span>)</div><div class=\"line\">{</div><div class=\"line\">    <span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"variable\">$row</span>[routename]]= <span class=\"keyword\">array</span>(<span class=\"string\">'Product/index'</span>,<span class=\"string\">'cateid='</span>.<span class=\"variable\">$row</span>[<span class=\"string\">'cid'</span>]);</div><div class=\"line\">}</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'ae/:aid\\d'</span>] = <span class=\"string\">'Article/View'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'sv/:sid\\d'</span>] = <span class=\"string\">'Singlepage/View'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'pt/:pid\\d'</span>] = <span class=\"string\">'Product/View'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'fq/:fid\\d'</span>] = <span class=\"string\">'Faq/View'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'dd/:did\\d'</span>] = <span class=\"string\">'Download/View'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'company'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Singlepage/View'</span>, <span class=\"string\">'sid=1'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'index'</span>] = <span class=\"string\">'Index/Index'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'qualificatio'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Singlepage/View'</span>, <span class=\"string\">'sid=2'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'message'</span>] = <span class=\"string\">'Guestbook/Index'</span>;</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'Factory'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Singlepage/View'</span>, <span class=\"string\">'sid=4'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'Contact'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Singlepage/View'</span>, <span class=\"string\">'sid=3'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'pc/:cateid\\d'</span>] = <span class=\"string\">'Product/Index'</span>; <span class=\"comment\">//规则路由</span></div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'pi/:cateid\\d/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Product/Index'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'pi/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Product/Index'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'ai/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Article/Index'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'fi/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Faq/Index'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'di/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Download/Index'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'s/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Product/Search'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'s'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Product/Search'</span>);</div><div class=\"line\">dump(F(<span class=\"string\">'routes'</span>,<span class=\"variable\">$arr</span>, <span class=\"string\">'./Home/Conf/'</span>)); <span class=\"comment\">//重点</span></div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果config.php有’URL_ROUTE_RULES’这个数组，会覆盖，暂时将所有路由都写到这里。。。</p>\n</blockquote>\n<h2 id=\"将中文转换为拼音\">将中文转换为拼音</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">empty</span>(<span class=\"variable\">$data</span>[<span class=\"string\">'routename'</span>])){</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'routename'</span>] = <span class=\"variable\">$data</span>[<span class=\"string\">'routename'</span>];</div><div class=\"line\">}<span class=\"keyword\">else</span>{</div><div class=\"line\">    import(<span class=\"string\">\"ORG.Util.ChinesePinyin\"</span>);</div><div class=\"line\">    <span class=\"variable\">$pinyin</span> = <span class=\"keyword\">new</span> ChinesePinyin();</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'routename'</span>] = <span class=\"variable\">$pinyin</span><span class=\"variable\">-&gt;TransformWithoutTone</span>(<span class=\"variable\">$data</span>[<span class=\"string\">'title'</span>],<span class=\"string\">''</span>);</div><div class=\"line\">}</div></pre></td></tr></table></figure>\n\n<h2 id=\"config-php_配置文件，在‘URL_ROUTE_RULES’_下面加入代码:\">config.php 配置文件，在‘URL_ROUTE_RULES’ 下面加入代码:</h2>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"string\">'LOAD_EXT_CONFIG'</span>=&gt;<span class=\"string\">'routes'</span></div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>载入APP_PATH/conf/目录下的routes.php文件</p>\n</blockquote>\n","source":"_posts/thinkphp-后台动态设置路由.md","raw":"title: thinkphp 后台动态设置路由\ndate: 2015-01-12 09:34:45\ntags: [thinkphp,动态路由]\n---\n##Thinkphp 后台动态设置配置文件\n\n> 单独加载routes.php路由文件。routes.php返回数组。\n\n<!--more-->\n##创建配置文件\n\n```php\n$Category = D('Category');\n$categorylist = $Category->where('sblock=0')->select();\nforeach ($categorylist as $row)\n{\n    $arr['URL_ROUTE_RULES'][$row[routename]]= array('Product/index','cateid='.$row['cid']);\n}\n$arr['URL_ROUTE_RULES']['ae/:aid\\d'] = 'Article/View';\n$arr['URL_ROUTE_RULES']['sv/:sid\\d'] = 'Singlepage/View';\n$arr['URL_ROUTE_RULES']['pt/:pid\\d'] = 'Product/View';\n$arr['URL_ROUTE_RULES']['fq/:fid\\d'] = 'Faq/View';\n$arr['URL_ROUTE_RULES']['dd/:did\\d'] = 'Download/View';\n$arr['URL_ROUTE_RULES']['company'] = array('Singlepage/View', 'sid=1');\n$arr['URL_ROUTE_RULES']['index'] = 'Index/Index';\n$arr['URL_ROUTE_RULES']['qualificatio'] = array('Singlepage/View', 'sid=2');\n$arr['URL_ROUTE_RULES']['message'] = 'Guestbook/Index';\n$arr['URL_ROUTE_RULES']['Factory'] = array('Singlepage/View', 'sid=4');\n$arr['URL_ROUTE_RULES']['Contact'] = array('Singlepage/View', 'sid=3');\n$arr['URL_ROUTE_RULES']['pc/:cateid\\d'] = 'Product/Index'; //规则路由\n$arr['URL_ROUTE_RULES']['pi/:cateid\\d/:p\\d'] = array('Product/Index');\n$arr['URL_ROUTE_RULES']['pi/:p\\d'] = array('Product/Index');\n$arr['URL_ROUTE_RULES']['ai/:p\\d'] = array('Article/Index');\n$arr['URL_ROUTE_RULES']['fi/:p\\d'] = array('Faq/Index');\n$arr['URL_ROUTE_RULES']['di/:p\\d'] = array('Download/Index');\n$arr['URL_ROUTE_RULES']['s/:p\\d'] = array('Product/Search');\n$arr['URL_ROUTE_RULES']['s'] = array('Product/Search');\ndump(F('routes',$arr, './Home/Conf/')); //重点\n```\n\n> 如果config.php有’URL_ROUTE_RULES’这个数组，会覆盖，暂时将所有路由都写到这里。。。\n\n##将中文转换为拼音\n\n```php\nif(!empty($data['routename'])){\n    $data['routename'] = $data['routename'];\n}else{\n    import(\"ORG.Util.ChinesePinyin\");\n    $pinyin = new ChinesePinyin();\n    $data['routename'] = $pinyin->TransformWithoutTone($data['title'],'');\n}\n```\n\n##config.php 配置文件，在‘URL_ROUTE_RULES’ 下面加入代码:\n\n```php\n'LOAD_EXT_CONFIG'=>'routes'\n```\n\n> 载入APP_PATH/conf/目录下的routes.php文件\n\n","slug":"thinkphp-后台动态设置路由","updated":1421028011000,"excerpt":"<h2 id=\"Thinkphp_后台动态设置配置文件\">Thinkphp 后台动态设置配置文件</h2>\n<blockquote>\n<p>单独加载routes.php路由文件。routes.php返回数组。</p>\n</blockquote>\n<p>","_id":"pp6w6cejkjuetpih","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"thinkphp ip 黑名单&白名单","date":1420985381000,"tags":["mjpyz1aolgh4wowd"],"content":"<p>获取搜素引擎蜘蛛访问情况，入库统计。<br><a id=\"more\"></a></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is_bot</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'robotspage'</span>] = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'REQUEST_URI'</span>] ? <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'REQUEST_URI'</span>] : <span class=\"string\">''</span>;</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'oldurl'</span>] = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_REFERER'</span>] ? <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_REFERER'</span>] : <span class=\"string\">'直接访问'</span>;</div><div class=\"line\">    import(<span class=\"string\">'ORG.Net.IpLocation'</span>); <span class=\"comment\">// 导入IpLocation类</span></div><div class=\"line\">    <span class=\"variable\">$Ip</span> = <span class=\"keyword\">new</span> IpLocation(<span class=\"string\">'UTFWry.dat'</span>); <span class=\"comment\">// 实例化类 参数表示IP地址库文件</span></div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'robotsip'</span>] = get_client_ip();</div><div class=\"line\">    <span class=\"variable\">$useragent</span> = addslashes(strtolower(<span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_USER_AGENT'</span>]));</div><div class=\"line\">    <span class=\"keyword\">if</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'googlebot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Google'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'mediapartners-google'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Google Adsense'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'baiduspider'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Baidu'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sogou spider'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Sogou'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sogou web'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Sogou web'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sosospider'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'SOSO'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'yahoo'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Yahoo'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'msn'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'MSN'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'msnbot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'msnbot'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sohu'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Sohu'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'yodaoBot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Yodao'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'twiceler'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Twiceler'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'ia_archiver'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Alexa_'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'iaarchiver'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'Alexa'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'slurp'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'雅虎'</span>;</div><div class=\"line\">    } <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'bot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">    <span class=\"variable\">$bot</span> = <span class=\"string\">'未知'</span>.<span class=\"variable\">$useragent</span>;</div><div class=\"line\">    }</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'robotsname'</span>] = <span class=\"variable\">$bot</span>;</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'robotsarea'</span>] = serialize(<span class=\"variable\">$Ip</span><span class=\"variable\">-&gt;getlocation</span>(<span class=\"variable\">$data</span>[<span class=\"string\">'robotsip'</span>]));</div><div class=\"line\">    <span class=\"variable\">$data</span>[<span class=\"string\">'create_time'</span>] = time();</div><div class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$bot</span>)) <span class=\"comment\">//如果是蜘蛛就存到数据库</span></div><div class=\"line\">    {</div><div class=\"line\">        <span class=\"comment\">//$Jrobot-&gt;create();非表单无隐藏域,无法使用create()方法</span></div><div class=\"line\">        <span class=\"variable\">$Jrobot</span> = D(<span class=\"string\">\"Robot\"</span>);</div><div class=\"line\">        <span class=\"variable\">$lastInsId</span> = <span class=\"variable\">$Jrobot</span><span class=\"variable\">-&gt;add</span>(<span class=\"variable\">$data</span>);</div><div class=\"line\">    }</div></pre></td></tr></table></figure>\n\n","source":"_posts/thinkphp-ip-黑名单-白名单.md","raw":"title: thinkphp ip 黑名单&白名单\ndate: 2015-01-11 22:09:41\ntags: php\n---\n获取搜素引擎蜘蛛访问情况，入库统计。\n<!--more-->\n```php\npublic function is_bot()\n{\n    $data['robotspage'] = $_SERVER['REQUEST_URI'] ? $_SERVER['REQUEST_URI'] : '';\n    $data['oldurl'] = $_SERVER['HTTP_REFERER'] ? $_SERVER['HTTP_REFERER'] : '直接访问';\n    import('ORG.Net.IpLocation'); // 导入IpLocation类\n    $Ip = new IpLocation('UTFWry.dat'); // 实例化类 参数表示IP地址库文件\n    $data['robotsip'] = get_client_ip();\n    $useragent = addslashes(strtolower($_SERVER['HTTP_USER_AGENT']));\n    if (strpos($useragent, 'googlebot') !== false) {\n    $bot = 'Google';\n    } elseif (strpos($useragent, 'mediapartners-google') !== false) {\n    $bot = 'Google Adsense';\n    } elseif (strpos($useragent, 'baiduspider') !== false) {\n    $bot = 'Baidu';\n    } elseif (strpos($useragent, 'sogou spider') !== false) {\n    $bot = 'Sogou';\n    } elseif (strpos($useragent, 'sogou web') !== false) {\n    $bot = 'Sogou web';\n    } elseif (strpos($useragent, 'sosospider') !== false) {\n    $bot = 'SOSO';\n    } elseif (strpos($useragent, 'yahoo') !== false) {\n    $bot = 'Yahoo';\n    } elseif (strpos($useragent, 'msn') !== false) {\n    $bot = 'MSN';\n    } elseif (strpos($useragent, 'msnbot') !== false) {\n    $bot = 'msnbot';\n    } elseif (strpos($useragent, 'sohu') !== false) {\n    $bot = 'Sohu';\n    } elseif (strpos($useragent, 'yodaoBot') !== false) {\n    $bot = 'Yodao';\n    } elseif (strpos($useragent, 'twiceler') !== false) {\n    $bot = 'Twiceler';\n    } elseif (strpos($useragent, 'ia_archiver') !== false) {\n    $bot = 'Alexa_';\n    } elseif (strpos($useragent, 'iaarchiver') !== false) {\n    $bot = 'Alexa';\n    } elseif (strpos($useragent, 'slurp') !== false) {\n    $bot = '雅虎';\n    } elseif (strpos($useragent, 'bot') !== false) {\n    $bot = '未知'.$useragent;\n    }\n    $data['robotsname'] = $bot;\n    $data['robotsarea'] = serialize($Ip->getlocation($data['robotsip']));\n    $data['create_time'] = time();\n    if (isset($bot)) //如果是蜘蛛就存到数据库\n    {\n        //$Jrobot->create();非表单无隐藏域,无法使用create()方法\n        $Jrobot = D(\"Robot\");\n        $lastInsId = $Jrobot->add($data);\n    }\n```","slug":"thinkphp-ip-黑名单-白名单","updated":1421028016000,"excerpt":"<p>获取搜素引擎蜘蛛访问情况，入库统计。<br>","_id":"xw5mg22qta2hj65x","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"rails 第四天","date":1421026659000,"tags":["y1jtckj4cxneiidn","zz9ygliq4zjrijrv","b9wmxarbtiecsyrv"],"content":"<h2 id=\"在rails_4-1-5_里动态设置路由\">在rails 4.1.5 里动态设置路由</h2>\n<p>需要动态获取数据路由相关数据来动态设置路由，有同学指出用路由分析库 <a href=\"https://github.com/rails/journey\" target=\"_blank\" rel=\"external\">点我</a>,看上去太复杂了，自己理解为模块设置路由，每次保存前重启应该就可以。<br><a id=\"more\"></a></p>\n<blockquote>\n<p>routename 为路由名称</p>\n</blockquote>\n<h3 id=\"table:\">table:</h3>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">create_table \"singlepages\", primary_key: \"sid\", force: true <span class=\"operator\"><span class=\"keyword\">do</span> |t|</span></div><div class=\"line\">    t.<span class=\"keyword\">string</span>   <span class=\"string\">\"title\"</span>,          <span class=\"keyword\">limit</span>: <span class=\"number\">200</span>,        <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.<span class=\"built_in\">text</span>     <span class=\"string\">\"description\"</span>,                       <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.<span class=\"built_in\">text</span>     <span class=\"string\">\"content\"</span>,        <span class=\"keyword\">limit</span>: <span class=\"number\">2147483647</span>, <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.<span class=\"keyword\">string</span>   <span class=\"string\">\"keywords\"</span>,       <span class=\"keyword\">limit</span>: <span class=\"number\">200</span>,        <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.<span class=\"built_in\">integer</span>  <span class=\"string\">\"sort\"</span>,                              <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.datetime <span class=\"string\">\"created_at\"</span>,                        <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.datetime <span class=\"string\">\"updated_at\"</span>,                        <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\">    t.<span class=\"keyword\">string</span>   <span class=\"string\">\"routename\"</span>,      <span class=\"keyword\">limit</span>: <span class=\"number\">250</span>,        <span class=\"literal\">null</span>: <span class=\"literal\">false</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"routes-rb\">routes.rb</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">resources <span class=\"symbol\">:singlepages</span></div><div class=\"line\">get <span class=\"string\">'/company'</span>, <span class=\"symbol\">to:</span> <span class=\"string\">'singlepages#show'</span>, <span class=\"symbol\">sid:</span> <span class=\"number\">1</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"singelpage_controller-rb\">singelpage_controller.rb</h3>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SinglepagesController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ApplicationController</span></span></span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>index</div><div class=\"line\">    <span class=\"variable\">@singlepages</span> = <span class=\"constant\">Singlepage</span>.order(<span class=\"string\">\"sid DESC\"</span>).page(params[<span class=\"symbol\">:page</span>]).per(<span class=\"number\">5</span>)</div><div class=\"line\">    <span class=\"variable\">@title</span> = <span class=\"string\">'singlepage manage'</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>show</div><div class=\"line\">    <span class=\"variable\">@singlepage</span> = <span class=\"constant\">Singlepage</span>.find_by_sid(params[<span class=\"symbol\">:sid</span>])</div><div class=\"line\">    redirect_to not_found_path <span class=\"keyword\">unless</span> <span class=\"variable\">@singlepage</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"model/singlepage-rb\">model/singlepage.rb</h3>\n<blockquote>\n<p>每次保存前重启路由器</p>\n</blockquote>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Singlepage</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActiveRecord::Base</span></span></span></div><div class=\"line\">  after_save <span class=\"symbol\">:reload_routes</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span>reload_routes</div><div class=\"line\">    <span class=\"constant\">DynamicRouter</span>.reload</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"model/dynamic_router-rb\">model/dynamic_router.rb</h3>\n<blockquote>\n<p>动态路由,包括加载和重启</p>\n</blockquote>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DynamicRouter</span></span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span><span class=\"keyword\">self</span>.load</div><div class=\"line\">    <span class=\"constant\">ComingSoon</span>.application.routes.draw <span class=\"keyword\">do</span></div><div class=\"line\">      <span class=\"constant\">Singlepage</span>.all.each <span class=\"keyword\">do</span> |pg|</div><div class=\"line\">        puts <span class=\"string\">\"Routing <span class=\"subst\">#{pg.name}</span>\"</span></div><div class=\"line\">        get <span class=\"string\">\"/<span class=\"subst\">#{pg.name}</span>\"</span>, <span class=\"symbol\">:to</span> =&gt; <span class=\"string\">\"pages#show\"</span>, <span class=\"symbol\">defaults:</span> { <span class=\"symbol\">id:</span> pg.id }</div><div class=\"line\">      <span class=\"keyword\">end</span></div><div class=\"line\">    <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">def</span> </span><span class=\"keyword\">self</span>.reload</div><div class=\"line\">    <span class=\"constant\">ComingSoon</span>.application.routes_reloader.reload!</div><div class=\"line\">  <span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<h3 id=\"config/routes-rb\">config/routes.rb</h3>\n<blockquote>\n<p>在路由配置文件里加载动态路由模块</p>\n</blockquote>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"constant\">Rails</span>.application.routes.draw <span class=\"keyword\">do</span></div><div class=\"line\">  root <span class=\"string\">'home#index'</span></div><div class=\"line\">  get <span class=\"string\">'not_found'</span> =&gt; <span class=\"string\">'singlepages#not_found'</span></div><div class=\"line\">  <span class=\"constant\">DynamicRouter</span>.load</div><div class=\"line\"><span class=\"keyword\">end</span></div></pre></td></tr></table></figure>\n\n<p>OK。</p>\n<p>文章来源:<a href=\"http://codeconnoisseur.org/ramblings/creating-dynamic-routes-at-runtime-in-rails-4\" target=\"_blank\" rel=\"external\">Creating Dynamic Routes at runtime in Rails 4</a></p>\n","source":"_posts/rails-第四天.md","raw":"title: rails 第四天\ndate: 2015-01-12 09:37:39\ntags: [rails,动态路由,DynamicRouter]\n---\n##在rails 4.1.5 里动态设置路由\n\n需要动态获取数据路由相关数据来动态设置路由，有同学指出用路由分析库 [点我](https://github.com/rails/journey),看上去太复杂了，自己理解为模块设置路由，每次保存前重启应该就可以。\n<!--more-->\n\n> routename 为路由名称\n\n###table:\n\n```sql\ncreate_table \"singlepages\", primary_key: \"sid\", force: true do |t|\n    t.string   \"title\",          limit: 200,        null: false\n    t.text     \"description\",                       null: false\n    t.text     \"content\",        limit: 2147483647, null: false\n    t.string   \"keywords\",       limit: 200,        null: false\n    t.integer  \"sort\",                              null: false\n    t.datetime \"created_at\",                        null: false\n    t.datetime \"updated_at\",                        null: false\n    t.string   \"routename\",      limit: 250,        null: false\nend\n```\n\n###routes.rb\n\n```ruby\nresources :singlepages\nget '/company', to: 'singlepages#show', sid: 1\n\n```\n\n###singelpage_controller.rb\n\n```ruby\nclass SinglepagesController < ApplicationController\n  def index\n    @singlepages = Singlepage.order(\"sid DESC\").page(params[:page]).per(5)\n    @title = 'singlepage manage'\n  end\n  def show\n    @singlepage = Singlepage.find_by_sid(params[:sid])\n    redirect_to not_found_path unless @singlepage\n  end\nend\n```\n\n###model/singlepage.rb\n\n> 每次保存前重启路由器\n\n```ruby\nclass Singlepage < ActiveRecord::Base\n  after_save :reload_routes\n  def reload_routes\n    DynamicRouter.reload\n  end\nend\n```\n\n###model/dynamic_router.rb\n\n> 动态路由,包括加载和重启\n\n```ruby\nclass DynamicRouter\n  def self.load\n    ComingSoon.application.routes.draw do\n      Singlepage.all.each do |pg|\n        puts \"Routing #{pg.name}\"\n        get \"/#{pg.name}\", :to => \"pages#show\", defaults: { id: pg.id }\n      end\n    end\n  end\n  def self.reload\n    ComingSoon.application.routes_reloader.reload!\n  end\nend\n```\n\n###config/routes.rb\n\n> 在路由配置文件里加载动态路由模块\n\n```ruby\nRails.application.routes.draw do\n  root 'home#index'\n  get 'not_found' => 'singlepages#not_found'\n  DynamicRouter.load\nend\n```\n\nOK。\n\n文章来源:[Creating Dynamic Routes at runtime in Rails 4](http://codeconnoisseur.org/ramblings/creating-dynamic-routes-at-runtime-in-rails-4)","slug":"rails-第四天","updated":1421027977000,"excerpt":"<h2 id=\"在rails_4-1-5_里动态设置路由\">在rails 4.1.5 里动态设置路由</h2>\n<p>需要动态获取数据路由相关数据来动态设置路由，有同学指出用路由分析库 <a href=\"https://github.com/rails/journey\" target=\"_blank\" rel=\"external\">点我</a>,看上去太复杂了，自己理解为模块设置路由，每次保存前重启应该就可以。<br>","_id":"2nw9qqe5jnr26hbl","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"thinkphp 路由分页搜索","date":1421128214000,"tags":["u7wijhfyxcxq0lgi","ho8t4tyyspnh0owx","x6sh59eosqp0op97","gq8hivxiyodgfmkz"],"content":"<p>thinkphp的条件搜索分页后需要指定路由,<code>search</code>是路由的名字,可以换成任意字符,需要在route.php修改,这里是指定的参数</p>\n<ul>\n<li>i_f_searchtxt #搜索字符</li>\n<li>sc #select分类</li>\n<li><strong>hash</strong> #自带参数,必选</li>\n</ul>\n<p>设置<strong>$p-&gt;url</strong>参数,直接拼接字符串:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$p</span><span class=\"variable\">-&gt;url</span> = <span class=\"string\">\"search/i_f_searchtxt/\"</span>.<span class=\"variable\">$_GET</span>[<span class=\"string\">\"i_f_searchtxt\"</span>].<span class=\"string\">\"/sc/\"</span>.<span class=\"variable\">$_GET</span>[<span class=\"string\">\"sc\"</span>].<span class=\"string\">\"/__hash__/\"</span>.<span class=\"variable\">$_GET</span>[<span class=\"string\">\"__hash__\"</span>].<span class=\"string\">'/p/'</span>;</div></pre></td></tr></table></figure>\n\n<p><strong>config/route.php:</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'search/:i_f_searchtxt/:sc/:p\\d'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Index/Search'</span>);</div><div class=\"line\"><span class=\"variable\">$arr</span>[<span class=\"string\">'URL_ROUTE_RULES'</span>][<span class=\"string\">'search'</span>] = <span class=\"keyword\">array</span>(<span class=\"string\">'Index/Search'</span>);</div></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这里的route.php是<a href=\"http://localhost:4000/2015/01/12/thinkphp-%E5%90%8E%E5%8F%B0%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1/\" target=\"_blank\" rel=\"external\">thinkphp后台动态设置路由</a>文章里使用的方法自动生成的.</p>\n<p><strong>$_GET</strong>方法还需要过滤,或者直接用thinkphp提供的<code>I</code>方法</p>\n</blockquote>\n","source":"_posts/thinkphp-路由分页搜索.md","raw":"title: thinkphp 路由分页搜索\ndate: 2015-01-13 13:50:14\ntags: [thinkphp,路由,分页,搜索]\n---\nthinkphp的条件搜索分页后需要指定路由,`search`是路由的名字,可以换成任意字符,需要在route.php修改,这里是指定的参数\n\n- i_f_searchtxt #搜索字符\n- sc #select分类\n- __hash__ #自带参数,必选\n\n设置**$p->url**参数,直接拼接字符串:\n\n```php\n$p->url = \"search/i_f_searchtxt/\".$_GET[\"i_f_searchtxt\"].\"/sc/\".$_GET[\"sc\"].\"/__hash__/\".$_GET[\"__hash__\"].'/p/';\n```\n**config/route.php:**\n```php\n$arr['URL_ROUTE_RULES']['search/:i_f_searchtxt/:sc/:p\\d'] = array('Index/Search');\n$arr['URL_ROUTE_RULES']['search'] = array('Index/Search');\n```\n> 这里的route.php是[thinkphp后台动态设置路由](http://localhost:4000/2015/01/12/thinkphp-%E5%90%8E%E5%8F%B0%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1/)文章里使用的方法自动生成的.\n\n> **$_GET**方法还需要过滤,或者直接用thinkphp提供的`I`方法","slug":"thinkphp-路由分页搜索","updated":1421129417000,"excerpt":"","_id":"yjm60pibl4rvsf62","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"thinkphp 获取搜索引擎蜘蛛","date":1420985381000,"tags":["mjpyz1aolgh4wowd"],"content":"<h3 id=\"Function_is_bot():\">Function is_bot():</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is_bot</span><span class=\"params\">()</span></span></div><div class=\"line\">{</div><div class=\"line\">\t<span class=\"variable\">$data</span>[<span class=\"string\">'robotspage'</span>] = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'REQUEST_URI'</span>] ? <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'REQUEST_URI'</span>] : <span class=\"string\">''</span>;</div><div class=\"line\">\t<span class=\"variable\">$data</span>[<span class=\"string\">'oldurl'</span>] = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_REFERER'</span>] ? <span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_REFERER'</span>] : <span class=\"string\">'直接访问'</span>;</div><div class=\"line\">\timport(<span class=\"string\">'ORG.Net.IpLocation'</span>); <span class=\"comment\">// 导入IpLocation类</span></div><div class=\"line\">\t<span class=\"variable\">$Ip</span> = <span class=\"keyword\">new</span> IpLocation(<span class=\"string\">'UTFWry.dat'</span>); <span class=\"comment\">// 实例化类 参数表示IP地址库文件</span></div><div class=\"line\">\t<span class=\"variable\">$data</span>[<span class=\"string\">'robotsip'</span>] = get_client_ip();</div><div class=\"line\">\t<span class=\"variable\">$useragent</span> = addslashes(strtolower(<span class=\"variable\">$_SERVER</span>[<span class=\"string\">'HTTP_USER_AGENT'</span>]));</div><div class=\"line\">\t<span class=\"keyword\">if</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'googlebot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Google'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'mediapartners-google'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Google Adsense'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'baiduspider'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Baidu'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sogou spider'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Sogou'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sogou web'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Sogou web'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sosospider'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'SOSO'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'yahoo'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Yahoo'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'msn'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'MSN'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'msnbot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'msnbot'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'sohu'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Sohu'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'yodaoBot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Yodao'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'twiceler'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Twiceler'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'ia_archiver'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Alexa_'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'iaarchiver'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'Alexa'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'slurp'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'雅虎'</span>;</div><div class=\"line\">\t} <span class=\"keyword\">elseif</span> (strpos(<span class=\"variable\">$useragent</span>, <span class=\"string\">'bot'</span>) !== <span class=\"keyword\">false</span>) {</div><div class=\"line\">\t<span class=\"variable\">$bot</span> = <span class=\"string\">'未知'</span>.<span class=\"variable\">$useragent</span>;</div><div class=\"line\">\t}</div><div class=\"line\">\t<span class=\"variable\">$data</span>[<span class=\"string\">'robotsname'</span>] = <span class=\"variable\">$bot</span>;</div><div class=\"line\">\t<span class=\"variable\">$data</span>[<span class=\"string\">'robotsarea'</span>] = serialize(<span class=\"variable\">$Ip</span><span class=\"variable\">-&gt;getlocation</span>(<span class=\"variable\">$data</span>[<span class=\"string\">'robotsip'</span>]));</div><div class=\"line\">\t<span class=\"variable\">$data</span>[<span class=\"string\">'create_time'</span>] = time();</div><div class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$bot</span>)) <span class=\"comment\">//如果是蜘蛛就存到数据库</span></div><div class=\"line\">\t{</div><div class=\"line\">\t\t<span class=\"comment\">//$Jrobot-&gt;create();非表单无隐藏域,无法使用create()方法</span></div><div class=\"line\">\t\t<span class=\"variable\">$Jrobot</span> = D(<span class=\"string\">\"Robot\"</span>);</div><div class=\"line\">\t\t<span class=\"variable\">$lastInsId</span> = <span class=\"variable\">$Jrobot</span><span class=\"variable\">-&gt;add</span>(<span class=\"variable\">$data</span>);</div><div class=\"line\">\t}</div></pre></td></tr></table></figure>\n\n","source":"_posts/thinkphp-获取搜索引擎蜘蛛.md","raw":"title: thinkphp 获取搜索引擎蜘蛛\ndate: 2015-01-11 22:09:41\ntags: php\n---\n\n###Function is_bot():\n```php\npublic function is_bot()\n{\n\t$data['robotspage'] = $_SERVER['REQUEST_URI'] ? $_SERVER['REQUEST_URI'] : '';\n\t$data['oldurl'] = $_SERVER['HTTP_REFERER'] ? $_SERVER['HTTP_REFERER'] : '直接访问';\n\timport('ORG.Net.IpLocation'); // 导入IpLocation类\n\t$Ip = new IpLocation('UTFWry.dat'); // 实例化类 参数表示IP地址库文件\n\t$data['robotsip'] = get_client_ip();\n\t$useragent = addslashes(strtolower($_SERVER['HTTP_USER_AGENT']));\n\tif (strpos($useragent, 'googlebot') !== false) {\n\t$bot = 'Google';\n\t} elseif (strpos($useragent, 'mediapartners-google') !== false) {\n\t$bot = 'Google Adsense';\n\t} elseif (strpos($useragent, 'baiduspider') !== false) {\n\t$bot = 'Baidu';\n\t} elseif (strpos($useragent, 'sogou spider') !== false) {\n\t$bot = 'Sogou';\n\t} elseif (strpos($useragent, 'sogou web') !== false) {\n\t$bot = 'Sogou web';\n\t} elseif (strpos($useragent, 'sosospider') !== false) {\n\t$bot = 'SOSO';\n\t} elseif (strpos($useragent, 'yahoo') !== false) {\n\t$bot = 'Yahoo';\n\t} elseif (strpos($useragent, 'msn') !== false) {\n\t$bot = 'MSN';\n\t} elseif (strpos($useragent, 'msnbot') !== false) {\n\t$bot = 'msnbot';\n\t} elseif (strpos($useragent, 'sohu') !== false) {\n\t$bot = 'Sohu';\n\t} elseif (strpos($useragent, 'yodaoBot') !== false) {\n\t$bot = 'Yodao';\n\t} elseif (strpos($useragent, 'twiceler') !== false) {\n\t$bot = 'Twiceler';\n\t} elseif (strpos($useragent, 'ia_archiver') !== false) {\n\t$bot = 'Alexa_';\n\t} elseif (strpos($useragent, 'iaarchiver') !== false) {\n\t$bot = 'Alexa';\n\t} elseif (strpos($useragent, 'slurp') !== false) {\n\t$bot = '雅虎';\n\t} elseif (strpos($useragent, 'bot') !== false) {\n\t$bot = '未知'.$useragent;\n\t}\n\t$data['robotsname'] = $bot;\n\t$data['robotsarea'] = serialize($Ip->getlocation($data['robotsip']));\n\t$data['create_time'] = time();\n\tif (isset($bot)) //如果是蜘蛛就存到数据库\n\t{\n\t\t//$Jrobot->create();非表单无隐藏域,无法使用create()方法\n\t\t$Jrobot = D(\"Robot\");\n\t\t$lastInsId = $Jrobot->add($data);\n\t}\n```\n\n","slug":"thinkphp-获取搜索引擎蜘蛛","updated":1421024397000,"excerpt":"","_id":"l58792rvl4no9gaw","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"使用chmod如何给文件夹递归授予权限","date":1421211157000,"tags":["g86yqjjjye8dhy1e","ch3hupupbf3or59n","rvuoj0jqsko5ocgz","fljt402i1i8cdtzk"],"content":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">find /path -type f -exec chmod <span class=\"number\">644</span> {} \\; 修改文件权限</div><div class=\"line\">find /path -type d -exec chmod <span class=\"number\">755</span> {} \\;修改文件夹权限</div></pre></td></tr></table></figure>\n\n<ul>\n<li><code>/path</code> , -type 根据类型和路径遍历文件以及子文件夹</li>\n<li><code>-exec</code> 每遍历一步就执行一次此参数后的命令</li>\n<li><code>{}</code> 代表前面所遍历到的文件或文件夹</li>\n<li><code>\\;</code> 代表-exec命令的结束符号，-exec命令的固定格式</li>\n</ul>\n","source":"_posts/使用chmod如何给文件夹递归授予权限.md","raw":"title: 使用chmod如何给文件夹递归授予权限\ndate: 2015-01-14 12:52:37\ntags: [linux,chmod,递归,权限]\n---\n```bash\nfind /path -type f -exec chmod 644 {} \\; 修改文件权限\nfind /path -type d -exec chmod 755 {} \\;修改文件夹权限\n```\n\n- `/path` , -type 根据类型和路径遍历文件以及子文件夹\n- `-exec` 每遍历一步就执行一次此参数后的命令\n- `{}` 代表前面所遍历到的文件或文件夹\n- `\\;` 代表-exec命令的结束符号，-exec命令的固定格式","slug":"使用chmod如何给文件夹递归授予权限","updated":1421211243000,"excerpt":"","_id":"x3r71i62fkfpdpvh","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"如何让顾客的体验从不完美到完美","date":1421033432000,"tags":["du5sbbdjdwj5ti1i"],"content":"<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-shouyu.jpg\" alt=\"加拿大开全球首家手语餐馆 顾客体验手语点餐\"></p>\n<ul>\n<li>原文首发于联商网，发表时题为《卖场如何有效提升顾客体验：从“五觉”下手》</li>\n</ul>\n<p>商家希望做到的，是给顾客一个良好的购物体验，让他们体会到用心与诚意，期待他们再次光临。但体验是什么呢？百度百科上说，用户体验主要是一种纯主观的用户在使用一个产品（服务）过程中建立起来的心理感受。归根结底，体验就是感受。<a id=\"more\"></a></p>\n<p>感受又是什么呢？同样来自百度词条，感受是指感官侦测到外境的能量变化后，在个体内产生的生化产应。也就是说，感受来自于感官的侦测。</p>\n<p>那消费者是通过什么侦测到卖场的氛围变化呢？他们的判断来自感觉，感觉是听觉、视觉、嗅觉、触觉、味觉的综合感受，它们不断向消费者反馈侦测到的信息，这些信息又决定了消费者的体验过程。</p>\n<h2 id=\"听觉\">听觉</h2>\n<p>这是零售经营者最容易忽略的。我们经常听到，店堂的音乐与气氛不搭调，就像大身穿了一件小衣服，怎么都觉得不美观。店堂应该播放哪种音乐，应该在哪个时间段播放何种音乐，需要有一个契合点。要想找到这个契合点，前提是研究目标顾客的欣赏水平，不求适合所有顾客的需求，但一定要让大部分顾客喜欢，还要体现店家的品味。</p>\n<p>除了整体音乐，也有卖场做了局部播放的尝试。如在生鲜产品区，播放水流动的声音和大海海浪的滚动声，加上现场的商品展示和布置，营造一个如身在海边的氛围，激发顾客的购买愿望。</p>\n<p>能营造听觉感受的，不只有音乐，还有现场工作人员的声音：欢迎声、感谢声、叫卖声、唱收唱付声……，这些声音此起伏起，让消费者感受到的是现场员工的活力。但并不是声音越多越好、越大越好。有一家百货店曾采取“盯人战术”，一进入通道，就是高高低低的欢迎声，服务员站在通道边缘热情地让顾客试穿、试用。进入到品牌专区，服务人员紧跟在顾客后面，不停地问：需要什么，要不要试试。据观察，许多顾客听到如此密集的声音大都逃也似地离开，离开时轻舒一口气。高密度的问候声令顾客毫无喘息的机会，顿失安全感。</p>\n<h2 id=\"视觉\">视觉</h2>\n<p>视觉带给消费者的冲击力最大，也最能让消费者产生直观的感受。视觉体验的范围非常广泛，几乎包括店堂运营的方方面面。现撷取几个方面共享：</p>\n<h3 id=\"一是陈列。\">一是陈列。</h3>\n<blockquote>\n<p><em>陈列的原则是让顾客轻松找到想要的商品。在陈列时必须考虑消费者的购买习惯，这也是品类管理的精华所在。</em></p>\n</blockquote>\n<p>在一家陌生的卖场，顾客能轻松找到所需商品，那一定是按消费者的需求原则陈列的。据麦肯锡的一项调查显示，消费者把“能轻松找到所需商品”列为第二重要性，仅次于价格。可见，陈列一定要照顾到消费者的购物习惯，要站在顾客角度布局商品。</p>\n<p>陈列除了考虑购物便利，还要兼顾美观原则。许多超市把陈列做成了美学教案，不仅颜色搭配合理，还富创造力，让消费者在购物之余享受了一场视觉盛宴。优衣库在这方面尤其做得好，他们把同一款式各种颜色的衣服，依照色卡的顺序渐次摆放，简单而美观，非常有吸引力。</p>\n<p>除以上两点外，陈列还要会“<strong>讲故事</strong>”。一件商品陈列出来要让顾客产生联想，联想到理想的生活方式。我曾经买过几个本子，当时本子打开陈列在一张小书桌上，旁边还放着一张POP，上面写到：每天为自己留下点记忆。我立即想到了写字的梦想，所以毫不犹豫地买了几本，虽然至今上面没写几个字。</p>\n<p>见过一个卖西瓜的案例。正是盛夏，西瓜大量上市，一家超市的西瓜比外面贵几毛钱，旁边的指示牌写明：某地西瓜丰收来不及收获大多烂在了地里，超市派员直接到产地采购，价格稍贵是为了稍稍弥补农民的损失，并标出了进货价，表明超市只赚取了基本费用。看到这个牌子，许多顾客都不只买了一个西瓜。</p>\n<p>还有一讲故事的例子。全聚德为烤鸭建立了“身份证”，从建店到现在，一共出炉一亿多只，每只都有一个编号。食客点了鸭子，会同时拿到一个身份证，上面有正在食用的烤鸭号码，看到这样的卡片，顾客不光觉得吃到了鸭子，还一同品尝了历史的厚重感。</p>\n<h3 id=\"二是价格的标注。\">二是价格的标注。</h3>\n<blockquote>\n<p>价格标注原则是清晰、明确。</p>\n</blockquote>\n<p>就是这样简单的原则，也有商家做得不够好。在售卖现场，顾客要么只看到商品，找不到相应的价签；要么有价签无商品；要么就是商品和价格错位，这些人为设置的障碍都让顾客在瞬间产生不佳的印象和体验，也容易引发投拆。</p>\n<h3 id=\"三是员工的技能和笑容。\">三是员工的技能和笑容。</h3>\n<blockquote>\n<p>员工是链接商家和顾客的桥梁，也是商家的代言人，员工的一举一动都会影响店铺在顾客心目中的形象。</p>\n</blockquote>\n<p>无印良品的员工服务一直让人称道，不管在任何地方，只要需要帮助，总有员工热情地提供服务，在卖场见到的都是员工平和的笑容。顾客在这样的店铺购物，脚步不急不慢，神情泰然自若，也更有“逛”的感觉。</p>\n<h2 id=\"嗅觉\">嗅觉</h2>\n<blockquote>\n<p>店铺里需要味道吗？答案当然是肯定的。</p>\n</blockquote>\n<p>在经营化妆品的楼层，整个楼面都香喷喷的，顾客被香氛围绕，能瞬间放松心情。超市里的香气更是必不可少。记得多年前听过一位日本同行讲过，为了营造良好的现场味道，他们特制了一种机器，把烘焙的香气散发出来，顾客被味道吸引，进而产生购买的欲望。</p>\n<p>除了面包的香气，还有热气腾腾的刚出炉的包子味、油炸丸子的香味、现场制作豆浆的豆子味，这些味道混合在一起，迅速占领了顾客的嗅觉，徜徉其间，购买物的想法也蠢蠢欲动。</p>\n<h2 id=\"触觉\">触觉</h2>\n<blockquote>\n<p>当顾客拿取一个商品，上面沾满了灰尘，原本愉快的心情瞬间和灰尘一样灰色。这样的触觉体验是顾客不肯再光顾的理由。</p>\n</blockquote>\n<p>一家服装店，衣服是叠起平放在一起的，想看看式样，就必须逐一打开，不一会儿，展台上堆满了凌乱的衣服，服务人员跟着收拾。看到这种情况，顾客只得看看就走了，不敢再“动手”触摸，“只看不动”，许多销售机会就悄悄溜走了。</p>\n<p>超市同样如此，货架层板之间的间距设计不合理，拿一瓶水，要左倾右倾才能拿出来，顾客也就不耐烦起来。</p>\n<p>所以，对顾客来说，最佳的触觉就是货架洁净、购物篮整洁、商品易于拿取；对商家来说，就是想尽办法，让顾客触摸商品的过程更顺畅、更愉悦。</p>\n<h2 id=\"味觉\">味觉</h2>\n<blockquote>\n<p>许多商家注意到，做试吃的品种，销售额大都会提升。试吃是一种与顾客互动的促销活动，也会增加购买机率。为什么试吃会有如此好的效果呢，因为它能带给顾客味觉的体验，体验过后，能激发购买欲望。</p>\n</blockquote>\n<p>在宜家，顾客逛累了可以去食品售卖区喝杯饮料、吃份简餐，满足了味觉的需求后，再继续购物之旅。其经营的现场磨制咖啡，可免费续杯，许多人把喝咖啡当作去宜家的一个理由。可见，味觉的满足，也是吸引顾客再次体验的原因。</p>\n<p>顾客在商家的体验是全方位、360度的，良好的体验可以延长顾客的停留时间，增加购买机会。每一个商家都应把打造一个超过顾客预期的体验过程为最终目标，让顾客更愿意光临、更愿意停留。如果商家不能判定顾客是否满意他的购物之旅，那就自己扮成顾客，完成一次体验，换个角度，就会发现许多问题。</p>\n<h1 id=\"总结\">总结</h1>\n<blockquote>\n<p>好的体验是让顾客感受到完美。对商家来说，从不完美到完美有一段很长的路要走，这个过程不是纸上谈兵般轻松容易，需要付出更多的努力与实践。但不管怎样，都要迈出第一步，那就从现在开始行动，离完美也就近了一些。</p>\n</blockquote>\n","source":"_posts/如何让顾客的体验从不完美到完美.md","raw":"title: 如何让顾客的体验从不完美到完美\ndate: 2015-01-12 11:30:32\ntags: [客户体验]\n---\n![加拿大开全球首家手语餐馆 顾客体验手语点餐](http://7u2icj.com1.z0.glb.clouddn.com/github-shouyu.jpg)\n\n- 原文首发于联商网，发表时题为《卖场如何有效提升顾客体验：从“五觉”下手》\n\n商家希望做到的，是给顾客一个良好的购物体验，让他们体会到用心与诚意，期待他们再次光临。但体验是什么呢？百度百科上说，用户体验主要是一种纯主观的用户在使用一个产品（服务）过程中建立起来的心理感受。归根结底，体验就是感受。<!--more-->\n\n感受又是什么呢？同样来自百度词条，感受是指感官侦测到外境的能量变化后，在个体内产生的生化产应。也就是说，感受来自于感官的侦测。\n\n那消费者是通过什么侦测到卖场的氛围变化呢？他们的判断来自感觉，感觉是听觉、视觉、嗅觉、触觉、味觉的综合感受，它们不断向消费者反馈侦测到的信息，这些信息又决定了消费者的体验过程。\n\n##听觉\n\n这是零售经营者最容易忽略的。我们经常听到，店堂的音乐与气氛不搭调，就像大身穿了一件小衣服，怎么都觉得不美观。店堂应该播放哪种音乐，应该在哪个时间段播放何种音乐，需要有一个契合点。要想找到这个契合点，前提是研究目标顾客的欣赏水平，不求适合所有顾客的需求，但一定要让大部分顾客喜欢，还要体现店家的品味。\n\n除了整体音乐，也有卖场做了局部播放的尝试。如在生鲜产品区，播放水流动的声音和大海海浪的滚动声，加上现场的商品展示和布置，营造一个如身在海边的氛围，激发顾客的购买愿望。\n\n能营造听觉感受的，不只有音乐，还有现场工作人员的声音：欢迎声、感谢声、叫卖声、唱收唱付声……，这些声音此起伏起，让消费者感受到的是现场员工的活力。但并不是声音越多越好、越大越好。有一家百货店曾采取“盯人战术”，一进入通道，就是高高低低的欢迎声，服务员站在通道边缘热情地让顾客试穿、试用。进入到品牌专区，服务人员紧跟在顾客后面，不停地问：需要什么，要不要试试。据观察，许多顾客听到如此密集的声音大都逃也似地离开，离开时轻舒一口气。高密度的问候声令顾客毫无喘息的机会，顿失安全感。\n\n##视觉\n\n视觉带给消费者的冲击力最大，也最能让消费者产生直观的感受。视觉体验的范围非常广泛，几乎包括店堂运营的方方面面。现撷取几个方面共享：\n\n###一是陈列。\n> *陈列的原则是让顾客轻松找到想要的商品。在陈列时必须考虑消费者的购买习惯，这也是品类管理的精华所在。*\n\n在一家陌生的卖场，顾客能轻松找到所需商品，那一定是按消费者的需求原则陈列的。据麦肯锡的一项调查显示，消费者把“能轻松找到所需商品”列为第二重要性，仅次于价格。可见，陈列一定要照顾到消费者的购物习惯，要站在顾客角度布局商品。\n\n陈列除了考虑购物便利，还要兼顾美观原则。许多超市把陈列做成了美学教案，不仅颜色搭配合理，还富创造力，让消费者在购物之余享受了一场视觉盛宴。优衣库在这方面尤其做得好，他们把同一款式各种颜色的衣服，依照色卡的顺序渐次摆放，简单而美观，非常有吸引力。\n\n除以上两点外，陈列还要会“**讲故事**”。一件商品陈列出来要让顾客产生联想，联想到理想的生活方式。我曾经买过几个本子，当时本子打开陈列在一张小书桌上，旁边还放着一张POP，上面写到：每天为自己留下点记忆。我立即想到了写字的梦想，所以毫不犹豫地买了几本，虽然至今上面没写几个字。\n\n见过一个卖西瓜的案例。正是盛夏，西瓜大量上市，一家超市的西瓜比外面贵几毛钱，旁边的指示牌写明：某地西瓜丰收来不及收获大多烂在了地里，超市派员直接到产地采购，价格稍贵是为了稍稍弥补农民的损失，并标出了进货价，表明超市只赚取了基本费用。看到这个牌子，许多顾客都不只买了一个西瓜。\n\n还有一讲故事的例子。全聚德为烤鸭建立了“身份证”，从建店到现在，一共出炉一亿多只，每只都有一个编号。食客点了鸭子，会同时拿到一个身份证，上面有正在食用的烤鸭号码，看到这样的卡片，顾客不光觉得吃到了鸭子，还一同品尝了历史的厚重感。\n\n###二是价格的标注。\n> 价格标注原则是清晰、明确。\n\n就是这样简单的原则，也有商家做得不够好。在售卖现场，顾客要么只看到商品，找不到相应的价签；要么有价签无商品；要么就是商品和价格错位，这些人为设置的障碍都让顾客在瞬间产生不佳的印象和体验，也容易引发投拆。\n\n###三是员工的技能和笑容。\n> 员工是链接商家和顾客的桥梁，也是商家的代言人，员工的一举一动都会影响店铺在顾客心目中的形象。\n\n无印良品的员工服务一直让人称道，不管在任何地方，只要需要帮助，总有员工热情地提供服务，在卖场见到的都是员工平和的笑容。顾客在这样的店铺购物，脚步不急不慢，神情泰然自若，也更有“逛”的感觉。\n\n##嗅觉\n\n> 店铺里需要味道吗？答案当然是肯定的。\n\n在经营化妆品的楼层，整个楼面都香喷喷的，顾客被香氛围绕，能瞬间放松心情。超市里的香气更是必不可少。记得多年前听过一位日本同行讲过，为了营造良好的现场味道，他们特制了一种机器，把烘焙的香气散发出来，顾客被味道吸引，进而产生购买的欲望。\n\n除了面包的香气，还有热气腾腾的刚出炉的包子味、油炸丸子的香味、现场制作豆浆的豆子味，这些味道混合在一起，迅速占领了顾客的嗅觉，徜徉其间，购买物的想法也蠢蠢欲动。\n\n##触觉\n\n> 当顾客拿取一个商品，上面沾满了灰尘，原本愉快的心情瞬间和灰尘一样灰色。这样的触觉体验是顾客不肯再光顾的理由。\n\n一家服装店，衣服是叠起平放在一起的，想看看式样，就必须逐一打开，不一会儿，展台上堆满了凌乱的衣服，服务人员跟着收拾。看到这种情况，顾客只得看看就走了，不敢再“动手”触摸，“只看不动”，许多销售机会就悄悄溜走了。\n\n超市同样如此，货架层板之间的间距设计不合理，拿一瓶水，要左倾右倾才能拿出来，顾客也就不耐烦起来。\n\n所以，对顾客来说，最佳的触觉就是货架洁净、购物篮整洁、商品易于拿取；对商家来说，就是想尽办法，让顾客触摸商品的过程更顺畅、更愉悦。\n\n##味觉\n\n> 许多商家注意到，做试吃的品种，销售额大都会提升。试吃是一种与顾客互动的促销活动，也会增加购买机率。为什么试吃会有如此好的效果呢，因为它能带给顾客味觉的体验，体验过后，能激发购买欲望。\n\n在宜家，顾客逛累了可以去食品售卖区喝杯饮料、吃份简餐，满足了味觉的需求后，再继续购物之旅。其经营的现场磨制咖啡，可免费续杯，许多人把喝咖啡当作去宜家的一个理由。可见，味觉的满足，也是吸引顾客再次体验的原因。\n\n顾客在商家的体验是全方位、360度的，良好的体验可以延长顾客的停留时间，增加购买机会。每一个商家都应把打造一个超过顾客预期的体验过程为最终目标，让顾客更愿意光临、更愿意停留。如果商家不能判定顾客是否满意他的购物之旅，那就自己扮成顾客，完成一次体验，换个角度，就会发现许多问题。\n#总结\n> 好的体验是让顾客感受到完美。对商家来说，从不完美到完美有一段很长的路要走，这个过程不是纸上谈兵般轻松容易，需要付出更多的努力与实践。但不管怎样，都要迈出第一步，那就从现在开始行动，离完美也就近了一些。","slug":"如何让顾客的体验从不完美到完美","updated":1421037165000,"excerpt":"<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-shouyu.jpg\" alt=\"加拿大开全球首家手语餐馆 顾客体验手语点餐\"></p>\n<ul>\n<li>原文首发于联商网，发表时题为《卖场如何有效提升顾客体验：从“五觉”下手》</li>\n</ul>\n<p>商家希望做到的，是给顾客一个良好的购物体验，让他们体会到用心与诚意，期待他们再次光临。但体验是什么呢？百度百科上说，用户体验主要是一种纯主观的用户在使用一个产品（服务）过程中建立起来的心理感受。归根结底，体验就是感受。","_id":"ycaatkqts5w5qcef","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"几个好用的css动画库","date":1421629920000,"tags":["siht99l54uqqsjsy","tqlf3hf77ztaltlx"],"content":"<p>Animate.css <a href=\"https://daneden.github.io/animate.css/\" target=\"_blank\" rel=\"external\">https://daneden.github.io/animate.css/</a> by Daniel Eden<br>Magic.css <a href=\"http://minimamente.com/example/magic_animations/\" target=\"_blank\" rel=\"external\">http://minimamente.com/example/magic_animations/</a> by Christian Pucci<br>Effeckt.css <a href=\"https://h5bp.github.io/Effeckt.css/\" target=\"_blank\" rel=\"external\">https://h5bp.github.io/Effeckt.css/</a> by H5BP<br>Animatable <a href=\"http://leaverou.github.io/animatable/\" target=\"_blank\" rel=\"external\">http://leaverou.github.io/animatable/</a> by Lea Verou<br>Page Transitions <a href=\"http://tympanus.net/Development/PageTransitions/\" target=\"_blank\" rel=\"external\">http://tympanus.net/Development/PageTransitions/</a> by Tympanus.net<br>Morf.js <a href=\"http://www.joelambert.co.uk/morf/\" target=\"_blank\" rel=\"external\">http://www.joelambert.co.uk/morf/</a> by Joe Lambert</p>\n","source":"_posts/几个好用的css动画库.md","raw":"title: 几个好用的css动画库\ndate: 2015-01-19 09:12:00\ntags: [css,动画库]\n---\n\nAnimate.css [https://daneden.github.io/animate.css/](https://daneden.github.io/animate.css/) by Daniel Eden\nMagic.css [http://minimamente.com/example/magic_animations/](http://minimamente.com/example/magic_animations/) by Christian Pucci\nEffeckt.css [https://h5bp.github.io/Effeckt.css/](https://h5bp.github.io/Effeckt.css/) by H5BP\nAnimatable [http://leaverou.github.io/animatable/](http://leaverou.github.io/animatable/) by Lea Verou\nPage Transitions [http://tympanus.net/Development/PageTransitions/](http://tympanus.net/Development/PageTransitions/) by Tympanus.net\nMorf.js [http://www.joelambert.co.uk/morf/](http://www.joelambert.co.uk/morf/) by Joe Lambert\n","slug":"几个好用的css动画库","updated":1421630058000,"excerpt":"","_id":"vsub0fg697x7djhu","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"涨姿势！为什么有的颜色看起来非常高档？","date":1421290842000,"tags":["0acy3ur9aiep3txb","ssazo01t7x8cstf9","1wyqh7wptxsfl8sc"],"content":"<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-what-make-color-great-1.jpg\" alt=\"涨姿势！为什么有的颜色看起来非常高档？\"></p>\n<p><a href=\"http://weibo.com/enoxone\" target=\"_blank\" rel=\"external\">@-eno-one-</a> ：高档色的色彩纯度、明度、饱和度低，是表象。但不是使得它们看起来显得高档的根本原因。</p>\n<h2 id=\"正确的答案是：\">正确的答案是：</h2>\n<blockquote>\n<p>之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。<br>而降低色彩饱和度，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。</p>\n</blockquote>\n<p><a id=\"more\"></a><br>我先从色彩对我们情绪影响的由来开始说起。</p>\n<p>每种色彩都会给人不同的心理感受。比如我们常说的，紫金搭配显贵气，紫色代表神秘，蓝色代表迷离空旷，红色代表热情与危险，绿色代表生命等等。</p>\n<p>见下图示例：<br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-4212332703454fe645b3c32b4464363f_b.jpg\" alt=\"a1\"><br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-d80d0652f1fe2d32b19b0cff405807c4_b.jpg\" alt=\"a2\"></p>\n<p>这些色彩的心理感受，并不是人类后期赋予或者毫无根据杜撰出来的。我们现代人的行为、思维等等，其实都是因进化演变而形成的一种自然生理机制。</p>\n<p>为什么蓝色会给人没有食欲？因为自然界中就没有天然存在的蓝色食物。为什么红色橙色会给人危险的感觉？因为自然界中，很多有毒的生物表体的颜色就是如此，</p>\n<p>因此在人类长期的进化演变过程中，对于过分鲜艳的颜色，便有了独特的警觉性。还有更多的色彩心理，其实，都是因人类进化而逐渐被我们确定认知的。所以，就不再一一举例了。</p>\n<p>见下图示例：<br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-edf4a836edc1fd15fa379e2ca7805f32_b.jpg\" alt=\"\"><br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-4591ff4de9071822c1f0d1b2b13b8090_b.jpg\" alt=\"\"><br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-5e2011705f19f06625871ad642ed0488_b.jpg\" alt=\"\"></p>\n<blockquote>\n<p>结论：色彩饱和度较高的颜色，也就是我们通常所说的鲜艳的颜色，本身就会对我们观看者的情绪造成影响。</p>\n</blockquote>\n<h1 id=\"接下来，再说一下，色相对于情绪的影响。\">接下来，再说一下，色相对于情绪的影响。</h1>\n<h2 id=\"色相：\">色相：</h2>\n<p>色相是色彩的首要特征，是区别各种不同色彩的最准确的标准。事实上任何黑白灰以外的颜色都有色相的属性，而色相也就是由原色、间色和复色来构成的。色相，色彩可呈现出来的质的面貌。自然界中各个不同的色相是无限丰富的，如紫红、银灰、橙黄等。色相即各类色彩的相貌称谓。</p>\n<p>下图的男士，身着三款不同颜色，但是色相明确的衬衣。<br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-c548205aa7d33fb8799f95a8473a18df_b.jpg\" alt=\"\"><br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-a9f68e13d4d79bb3bd3746165b05809d_b.jpg\" alt=\"\"><br><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-c74229beda6760ececade3a10c012452_b.jpg\" alt=\"\"></p>\n<p>以上三个颜色，我们大多数人都可以第一时间马上将它们说出来。比如黄色、绿色和蓝色。</p>\n<p>而每种颜色，所让我们感受或联系到的情绪都会有不同，例如黄色会显得激烈，荧光的绿色会使人惊觉，较亮的蓝色让我们觉得干净。这些不同的感受，都是色彩带给我们的情绪影响。</p>\n<p>接下来，我们再来做一组实验。</p>\n<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-c74229beda6760ececade3a10c012452_b.jpg\" alt=\"\"></p>\n<p>我们先来看看上图中的衬衣，到底是蓝色还是绿色？是否发现，当物体的色相不那么明确之后，色彩对于我们情绪的影响也就随之减弱。</p>\n<p>接下来，我们再来一次实验</p>\n<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-d8e0215b89c3b507f7d0846cd988e147_b.jpg\" alt=\"\"></p>\n<p>还是选择最开始图例中的绿色来进行比较。左边衣服的绿色，色彩饱合度较高，而右边的则降低饱和度。看看那一个颜色会显得略微高档。其实，降低色彩饱和度，也是削弱色彩对人情绪影响的一个手段。</p>\n<h1 id=\"总结：\">总结：</h1>\n<ul>\n<li>之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。</li>\n<li>而降低色彩饱和度，或者不明确色相的颜色，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。</li>\n<li>黑白照片看起来比彩色照片高档，大部分奢侈品牌选择黑白，其实都是在降低色彩本身对于人情绪的影响，而使人感觉高档。</li>\n</ul>\n","source":"_posts/涨姿势！为什么有的颜色看起来非常高档？.md","raw":"title: 涨姿势！为什么有的颜色看起来非常高档？\ndate: 2015-01-15 11:00:42\ntags: [设计,颜色,涨姿势]\n---\n\n![涨姿势！为什么有的颜色看起来非常高档？](http://7u2icj.com1.z0.glb.clouddn.com/github-what-make-color-great-1.jpg)\n\n[@-eno-one-](http://weibo.com/enoxone) ：高档色的色彩纯度、明度、饱和度低，是表象。但不是使得它们看起来显得高档的根本原因。\n\n##正确的答案是：\n\n> 之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。\n而降低色彩饱和度，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。\n\n<!--more-->\n我先从色彩对我们情绪影响的由来开始说起。\n\n每种色彩都会给人不同的心理感受。比如我们常说的，紫金搭配显贵气，紫色代表神秘，蓝色代表迷离空旷，红色代表热情与危险，绿色代表生命等等。\n\n见下图示例：\n![a1](http://7u2icj.com1.z0.glb.clouddn.com/github-4212332703454fe645b3c32b4464363f_b.jpg)\n![a2](http://7u2icj.com1.z0.glb.clouddn.com/github-d80d0652f1fe2d32b19b0cff405807c4_b.jpg)\n\n这些色彩的心理感受，并不是人类后期赋予或者毫无根据杜撰出来的。我们现代人的行为、思维等等，其实都是因进化演变而形成的一种自然生理机制。\n\n为什么蓝色会给人没有食欲？因为自然界中就没有天然存在的蓝色食物。为什么红色橙色会给人危险的感觉？因为自然界中，很多有毒的生物表体的颜色就是如此，\n\n因此在人类长期的进化演变过程中，对于过分鲜艳的颜色，便有了独特的警觉性。还有更多的色彩心理，其实，都是因人类进化而逐渐被我们确定认知的。所以，就不再一一举例了。\n\n见下图示例：\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-edf4a836edc1fd15fa379e2ca7805f32_b.jpg)\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-4591ff4de9071822c1f0d1b2b13b8090_b.jpg)\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-5e2011705f19f06625871ad642ed0488_b.jpg)\n\n> 结论：色彩饱和度较高的颜色，也就是我们通常所说的鲜艳的颜色，本身就会对我们观看者的情绪造成影响。\n\n#接下来，再说一下，色相对于情绪的影响。\n\n##色相：\n\n色相是色彩的首要特征，是区别各种不同色彩的最准确的标准。事实上任何黑白灰以外的颜色都有色相的属性，而色相也就是由原色、间色和复色来构成的。色相，色彩可呈现出来的质的面貌。自然界中各个不同的色相是无限丰富的，如紫红、银灰、橙黄等。色相即各类色彩的相貌称谓。\n\n下图的男士，身着三款不同颜色，但是色相明确的衬衣。\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-c548205aa7d33fb8799f95a8473a18df_b.jpg)\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-a9f68e13d4d79bb3bd3746165b05809d_b.jpg)\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-c74229beda6760ececade3a10c012452_b.jpg)\n\n以上三个颜色，我们大多数人都可以第一时间马上将它们说出来。比如黄色、绿色和蓝色。\n\n而每种颜色，所让我们感受或联系到的情绪都会有不同，例如黄色会显得激烈，荧光的绿色会使人惊觉，较亮的蓝色让我们觉得干净。这些不同的感受，都是色彩带给我们的情绪影响。\n\n接下来，我们再来做一组实验。\n\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-c74229beda6760ececade3a10c012452_b.jpg)\n\n我们先来看看上图中的衬衣，到底是蓝色还是绿色？是否发现，当物体的色相不那么明确之后，色彩对于我们情绪的影响也就随之减弱。\n\n接下来，我们再来一次实验\n\n![](http://7u2icj.com1.z0.glb.clouddn.com/github-d8e0215b89c3b507f7d0846cd988e147_b.jpg)\n\n还是选择最开始图例中的绿色来进行比较。左边衣服的绿色，色彩饱合度较高，而右边的则降低饱和度。看看那一个颜色会显得略微高档。其实，降低色彩饱和度，也是削弱色彩对人情绪影响的一个手段。\n\n#总结：\n\n- 之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。\n- 而降低色彩饱和度，或者不明确色相的颜色，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。\n- 黑白照片看起来比彩色照片高档，大部分奢侈品牌选择黑白，其实都是在降低色彩本身对于人情绪的影响，而使人感觉高档。\n","slug":"涨姿势！为什么有的颜色看起来非常高档？","updated":1421292328000,"excerpt":"<p><img src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-what-make-color-great-1.jpg\" alt=\"涨姿势！为什么有的颜色看起来非常高档？\"></p>\n<p><a href=\"http://weibo.com/enoxone\" target=\"_blank\" rel=\"external\">@-eno-one-</a> ：高档色的色彩纯度、明度、饱和度低，是表象。但不是使得它们看起来显得高档的根本原因。</p>\n<h2 id=\"正确的答案是：\">正确的答案是：</h2>\n<blockquote>\n<p>之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。<br>而降低色彩饱和度，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。</p>\n</blockquote>\n<p>","_id":"r2uvplu5r7wnfcde","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"如何设计你的2015年度计划","date":1421035969000,"tags":["aw7rvs12sry5lvpg","vk4lndxpx89k7npo"],"content":"<p>新的一年总有新的愿景与目标，也就是<code>「年度计划」</code>（New Year Resolution）。两个多月前，<a href=\"http://www.facebook.com\" target=\"_blank\" rel=\"external\">脸书</a>的创办人<a href=\"http://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%8B%C2%B7%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC\" target=\"_blank\" rel=\"external\">扎克伯格（Mark Zuckerberg）</a>到北京参访，在清华大学用中文做了超过30分钟的演讲与问答，令大家印象深刻。不只国内媒体，许多美国主流媒体都用「惊悚」来形容他的中文能力。<a id=\"more\"></a></p>\n<p>我记得约4年前，Mark 邀请李开复到硅谷脸书总部演讲，印象中他只能简单用中文介绍几句；多年后，他的中文已进步神速。</p>\n<p>最近几年，Mark 每年都有个人的年度计划。去年，他每天写一张「感谢卡」，让自己随时保有感恩的心。前年，他规定每天必须认识一位新朋友，扩展生活领域。2012年，长期投入管理工作的他，立下回归写程序的计划，让自己不忘初衷。</p>\n<p>2010年，Mark的年度计划就是学好中文。这次他在清华的演讲，虽然肯定是经过公关的精心包装，但他不只用中文回答所有问题，还能用中文讲笑话，让全场哄堂大笑，实在不容易。Mark本身的努力与坚持，值得鼓励与效法。因此，如果能够好好规划年度计划，对人生会有意想不到的影响。我也做过不少新年计划，在这里可以分享一些诀窍：</p>\n<h2 id=\"1_讨你女朋友的欢心\">1 讨你女朋友的欢心</h2>\n<p>人的习惯就是，当没有人要求你越多，你越无法做到。而越是有人要求你去完成，你就越有可能做好这件事情。当然，你的意图并不一定是做好这件事情本身或什么成就感，而是为了面子和被对方夸赞的虚荣心。Mark 为了讨他女友的欢心，学会了这世界最难学的语言，成为了最年轻的世界富翁。所以，为了你女人的笑容和你们的美好未来，去努力拼搏吧。但需要注意的是，如果你女人对你的期待只是能凑活过就成和平淡的生活什么的，那可能也不需要你有什么宏伟的计划去讨好她了。因为你们只看到了现在的现实，或者对未来的梦境你们没有自信，那么自开始你就可能会全盘放弃。什么，你还没有女朋友！？</p>\n<h2 id=\"2_自虐\">2 自虐</h2>\n<p>利用自虐行为，你就能想起更多的计划和去实现他们。比如感情受挫，大难不死和死到临头，之后你会因为大量的悲伤绝望这种感情所充斥脑海，从而自暴自弃，做出任性的事情来。这很好，让你的情绪去驱动你做你想做的事情，虽然有一定的危险性，但这是最有效的引发你自身奇迹的手段，不是么？;-) 可以多去挑战下打架，碰瓷，蹦极，跳伞，去西藏，偷盗，抢劫等…不一定非要去体验的很完全，但去监狱待几天也绝对让你的人生焕然一新。</p>\n<h2 id=\"3_只有一个计划：挣钱\">3 只有一个计划：挣钱</h2>\n<p>可能你有很多想法，有很多理念，很多想做的事，可却苦于自己得生活原因，家庭原因，自身原因，你没办法主动去实现。没关系，因为只要有钱，这些事情你都可以轻而易举的做到，所以所有的计划你都可以归结为一个计划，挣钱。对于那些虚无缥缈的计划，挣钱却是很现实的一件事。挣钱，挣更多的钱。在这个经济社会中，有了钱，你就能得到一切，所以你没有任何理由去拒绝或懒得去执行这个计划。</p>\n<p>学好英文是个典型的例子，从挣钱的角度来说，学好英文就可以挣那些不懂英文的人的钱，也可以挣懂英文的人的钱。想挣更多的钱么，学好英文你就能够挣更多人的钱。学好英文你一年就能收入100W so easy，你学不学？你觉得这不可能，为什么那么多学英文的没挣钱，那是因为他们没好好学啊，或没学以致用，工作上用不到英文。有那么好的技能，挣不到更多的钱，十分可惜。</p>\n<p>以Mark为例，学中文对老美来说，是一大挑战。如果换个角度看， Mark 学好了中文，就可以来中国和政府搞好关系让脸书进入中国，吸收3亿市场份额，继续保持最大的社交平台，年收入增加100亿，学不学！？那么学了十几年英文的中国人，是不是更应该学好英文去挣外国人的钱呢！嘿，你先把中国人的钱挣了吧。</p>\n<p>我不鼓励年轻人去看新闻和开拓视野什么的，别好像跟你有多大关系似的，地铁从2块到5块就算到10块你也得坐，习大大点赞也不是因为你蛮拼的，这些只会让你产生情绪，混淆你的计划，别人去西藏了再不走就老了，别人年薪多少万了再不跳就晚了，别人孩子几岁了再不结婚就没人要了，以上这些都是因为对比了新闻和其他人的视野之后所产生的恐惧心理和不安全感！记住，他人的生活跟你没有毛线关系！！而你的计划只有一个，挣钱，用你自己的方式，在更短的时间内挣更多的钱！！等你有钱了以后想干嘛干嘛！！</p>\n<p>另外，我分享一个挣钱的年度计划。</p>\n<blockquote>\n<p>多年前，李开复从中国调回美国微软总部，为了拓展社交圈，他计划多认识新朋友，虽不像Mark一天认识一位，但他规定自己每周和一个新朋友吃饭，或喝茶。去哪儿找那么多人吃饭啊？他教了一个秘密：每次和新朋友吃饭，谈话中留意有没有什么他的朋友是你希望认识的，吃晚饭前务必请他再介绍一位朋友给你，增加你的社交圈。计划运作几年之后，李开复回国创业，开始游说社交圈里的各种朋友进行金钱或人情投资，于是血汗工厂就此建立，用来继续吸收土豪朋友们和市场的资金。太机智了有木有，到干不下去了之后，自己的钱也搞差不多了，随便大病退休，再安排一下让自己成为慈善人物，乳腺癌爱心大使？什么的，人生圆满。</p>\n</blockquote>\n<p>为什么要拓展社交圈？要挣钱！！人生有很多机运，不是靠着最要好朋友的“强”关系，而是维系你的上百个“弱”关系; 如果能够掌握更多人脉，也可以带来更多挣钱的机会！如何认识新朋友？可以请朋友引介关于新技术、产品管理、投资领域中的佼佼者，这样既能认识新朋友，也能增广新知识，拓展新视野，从他们手里套到更多的钱！</p>\n<h1 id=\"4_总结\">4 总结</h1>\n<blockquote>\n<p>人总是有惰性，喜欢窝在自己的舒适圈，要想成长，就必须改变。当你订下年度计划，执行一阵子后，你会发现，任何新目标都需要很努力才能实现，可“努力”二字永远无法变成你生活中的一部分，你有情绪，你静不下心来。想要改变，就先从控制自己的情绪开始。无法控制自己的情绪也很正常，正常的人嘛，可正常的人都不做年度计划的，都心随自然。只有那些野心勃勃欲望强烈的怪物们才会做年度计划。他们深爱着自己和这个世界，跑的快，跳的高，看的多，走的远。他们居安思危，屯粮捕猎，正常人便是他们的猎物。</p>\n</blockquote>\n<p>正常人很蠢，很懒，很善良，很美味。</p>\n<p>你2015年计划吃多少正常人？</p>\n<h2 id=\"传送门:\">传送门:</h2>\n<ul>\n<li><a href=\"http://www.jianshu.com/p/caf33f648acb\" target=\"_blank\" rel=\"external\">如何设计你的2015年度计划</a></li>\n</ul>\n","source":"_posts/如何设计你的2015年度计划.md","raw":"title: 如何设计你的2015年度计划\ndate: 2015-01-12 12:12:49\ntags: [2015,年度计划]\n---\n\n新的一年总有新的愿景与目标，也就是`「年度计划」`（New Year Resolution）。两个多月前，[脸书](http://www.facebook.com)的创办人[扎克伯格（Mark Zuckerberg）](http://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%8B%C2%B7%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC)到北京参访，在清华大学用中文做了超过30分钟的演讲与问答，令大家印象深刻。不只国内媒体，许多美国主流媒体都用「惊悚」来形容他的中文能力。<!--more-->\n\n\n我记得约4年前，Mark 邀请李开复到硅谷脸书总部演讲，印象中他只能简单用中文介绍几句；多年后，他的中文已进步神速。\n\n最近几年，Mark 每年都有个人的年度计划。去年，他每天写一张「感谢卡」，让自己随时保有感恩的心。前年，他规定每天必须认识一位新朋友，扩展生活领域。2012年，长期投入管理工作的他，立下回归写程序的计划，让自己不忘初衷。\n\n2010年，Mark的年度计划就是学好中文。这次他在清华的演讲，虽然肯定是经过公关的精心包装，但他不只用中文回答所有问题，还能用中文讲笑话，让全场哄堂大笑，实在不容易。Mark本身的努力与坚持，值得鼓励与效法。因此，如果能够好好规划年度计划，对人生会有意想不到的影响。我也做过不少新年计划，在这里可以分享一些诀窍：\n\n##1 讨你女朋友的欢心\n\n人的习惯就是，当没有人要求你越多，你越无法做到。而越是有人要求你去完成，你就越有可能做好这件事情。当然，你的意图并不一定是做好这件事情本身或什么成就感，而是为了面子和被对方夸赞的虚荣心。Mark 为了讨他女友的欢心，学会了这世界最难学的语言，成为了最年轻的世界富翁。所以，为了你女人的笑容和你们的美好未来，去努力拼搏吧。但需要注意的是，如果你女人对你的期待只是能凑活过就成和平淡的生活什么的，那可能也不需要你有什么宏伟的计划去讨好她了。因为你们只看到了现在的现实，或者对未来的梦境你们没有自信，那么自开始你就可能会全盘放弃。什么，你还没有女朋友！？\n\n##2 自虐\n\n利用自虐行为，你就能想起更多的计划和去实现他们。比如感情受挫，大难不死和死到临头，之后你会因为大量的悲伤绝望这种感情所充斥脑海，从而自暴自弃，做出任性的事情来。这很好，让你的情绪去驱动你做你想做的事情，虽然有一定的危险性，但这是最有效的引发你自身奇迹的手段，不是么？;-) 可以多去挑战下打架，碰瓷，蹦极，跳伞，去西藏，偷盗，抢劫等…不一定非要去体验的很完全，但去监狱待几天也绝对让你的人生焕然一新。\n\n##3 只有一个计划：挣钱\n\n可能你有很多想法，有很多理念，很多想做的事，可却苦于自己得生活原因，家庭原因，自身原因，你没办法主动去实现。没关系，因为只要有钱，这些事情你都可以轻而易举的做到，所以所有的计划你都可以归结为一个计划，挣钱。对于那些虚无缥缈的计划，挣钱却是很现实的一件事。挣钱，挣更多的钱。在这个经济社会中，有了钱，你就能得到一切，所以你没有任何理由去拒绝或懒得去执行这个计划。\n\n学好英文是个典型的例子，从挣钱的角度来说，学好英文就可以挣那些不懂英文的人的钱，也可以挣懂英文的人的钱。想挣更多的钱么，学好英文你就能够挣更多人的钱。学好英文你一年就能收入100W so easy，你学不学？你觉得这不可能，为什么那么多学英文的没挣钱，那是因为他们没好好学啊，或没学以致用，工作上用不到英文。有那么好的技能，挣不到更多的钱，十分可惜。\n\n以Mark为例，学中文对老美来说，是一大挑战。如果换个角度看， Mark 学好了中文，就可以来中国和政府搞好关系让脸书进入中国，吸收3亿市场份额，继续保持最大的社交平台，年收入增加100亿，学不学！？那么学了十几年英文的中国人，是不是更应该学好英文去挣外国人的钱呢！嘿，你先把中国人的钱挣了吧。\n\n我不鼓励年轻人去看新闻和开拓视野什么的，别好像跟你有多大关系似的，地铁从2块到5块就算到10块你也得坐，习大大点赞也不是因为你蛮拼的，这些只会让你产生情绪，混淆你的计划，别人去西藏了再不走就老了，别人年薪多少万了再不跳就晚了，别人孩子几岁了再不结婚就没人要了，以上这些都是因为对比了新闻和其他人的视野之后所产生的恐惧心理和不安全感！记住，他人的生活跟你没有毛线关系！！而你的计划只有一个，挣钱，用你自己的方式，在更短的时间内挣更多的钱！！等你有钱了以后想干嘛干嘛！！\n\n另外，我分享一个挣钱的年度计划。\n> 多年前，李开复从中国调回美国微软总部，为了拓展社交圈，他计划多认识新朋友，虽不像Mark一天认识一位，但他规定自己每周和一个新朋友吃饭，或喝茶。去哪儿找那么多人吃饭啊？他教了一个秘密：每次和新朋友吃饭，谈话中留意有没有什么他的朋友是你希望认识的，吃晚饭前务必请他再介绍一位朋友给你，增加你的社交圈。计划运作几年之后，李开复回国创业，开始游说社交圈里的各种朋友进行金钱或人情投资，于是血汗工厂就此建立，用来继续吸收土豪朋友们和市场的资金。太机智了有木有，到干不下去了之后，自己的钱也搞差不多了，随便大病退休，再安排一下让自己成为慈善人物，乳腺癌爱心大使？什么的，人生圆满。\n\n为什么要拓展社交圈？要挣钱！！人生有很多机运，不是靠着最要好朋友的“强”关系，而是维系你的上百个“弱”关系; 如果能够掌握更多人脉，也可以带来更多挣钱的机会！如何认识新朋友？可以请朋友引介关于新技术、产品管理、投资领域中的佼佼者，这样既能认识新朋友，也能增广新知识，拓展新视野，从他们手里套到更多的钱！\n\n#4 总结\n\n> 人总是有惰性，喜欢窝在自己的舒适圈，要想成长，就必须改变。当你订下年度计划，执行一阵子后，你会发现，任何新目标都需要很努力才能实现，可“努力”二字永远无法变成你生活中的一部分，你有情绪，你静不下心来。想要改变，就先从控制自己的情绪开始。无法控制自己的情绪也很正常，正常的人嘛，可正常的人都不做年度计划的，都心随自然。只有那些野心勃勃欲望强烈的怪物们才会做年度计划。他们深爱着自己和这个世界，跑的快，跳的高，看的多，走的远。他们居安思危，屯粮捕猎，正常人便是他们的猎物。\n\n正常人很蠢，很懒，很善良，很美味。\n\n你2015年计划吃多少正常人？\n\n##传送门:\n- [如何设计你的2015年度计划](http://www.jianshu.com/p/caf33f648acb)","slug":"如何设计你的2015年度计划","updated":1421112336000,"excerpt":"<p>新的一年总有新的愿景与目标，也就是<code>「年度计划」</code>（New Year Resolution）。两个多月前，<a href=\"http://www.facebook.com\" target=\"_blank\" rel=\"external\">脸书</a>的创办人<a href=\"http://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%8B%C2%B7%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC\" target=\"_blank\" rel=\"external\">扎克伯格（Mark Zuckerberg）</a>到北京参访，在清华大学用中文做了超过30分钟的演讲与问答，令大家印象深刻。不只国内媒体，许多美国主流媒体都用「惊悚」来形容他的中文能力。","_id":"jfq9ev5pxme3x0jw","categories":[],"comments":true,"layout":"post","photos":[],"link":""},{"title":"客户体验的三个层面","date":1421110959000,"tags":["du5sbbdjdwj5ti1i"],"content":"<blockquote>\n<p>之于绝大多数企业，客户体验是客户回头率的单一决定因素——也是决胜竞争对手的决定因素。尤其是在言必称互联网模式的时代，客户体验显得至关重要，即使是那些垄断行业，比如快递（中国邮政）和银行，如果在客户体验方面失败也会面临危机。可以说，未来，客户体验会是一切的核心——它决定了企业如何运营自身的业务，员工在同客户和彼此之间互动时的行为方式，以及企业所提供的价值。<br><a id=\"more\"></a></p>\n</blockquote>\n<p><img alt=\"客户体验金字塔-银行\" src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-ucd.jpg?imageView2/2/w/600/q/85\" width=\"60%\"></p>\n<p>在我看来，客户体验可分为三个不同的层级：<code>满足需求</code>，<code>容易性</code>以及<code>愉悦程度</code>，这三个层级呈<strong>金字塔“模型”</strong>，需求满足在最底层。每当消费者同一个产品、一项服务、一个人甚至是一个自动操作系统进行互动时，他们的关注点在于，这项互动过程能为完成他们的既定目标带来多大的帮助，他们要在这个互动中付出多大的努力，以及期间他们能获得的愉悦程度。</p>\n<p>满足需求，作为客户难舍难分金字塔最基础的部分，原因在于，<strong>满足是基石</strong>。假如某办公用品公司的库存中没有打印纸或碳粉；假如某快递公司总是不能把包裹送达正确的目的地。那么这些都是致命的失误，会让一个公司走向灭亡，绝不是一个热情的客服人员能够挽回的局面。一旦出现了这样的情况，你的游戏就落幕了。</p>\n<p>当一家公司满足了消费者最基本的需求之后，如果还想要占得一席之地，那么就必须要考虑到客户体验金字塔的上一个层级——<strong>容易性</strong>。我们可以看到很多例子证明了容易性会为企业带来强大的竞争力——甚至可以说为整个行业带来竞争力。过去，在网络上上传视频是可以实现的，但很少有人会上传视频，直到YouTube，尤其是国内的优酷诞生后，让视频的上传变得简单起来。包括数码音乐播放器起初也并不流行，因为很难把音乐拷进去，直到苹果推出了iTunes和iPod。</p>\n<p><em>当然容易性仅仅在客户确实没有其他选择时才是可有可无的</em>。比如我们熟知的福特T型车，这款车型真的谈不上“易用”。要发动它，需要两个人合作：一人坐在驾驶位，另一人要站在车前转动曲柄。那个转曲柄的人也要冒一定的风险。有时发动机会产生一个强大的“回力”，使得曲柄向相反的方向转动，这一设计缺陷弄伤了很多人的手腕。但是在那个年代，福特T型车获得了巨大的成功，因为这款车在当时对大众而言是唯一的选择。所以，它让福特通过客户体验金字塔最基础的层级就赢得了市场上的一席之地。今天，福特绝对不会再推出这样一款需要曲柄驱动，并且在驱动过程中还有可能会弄伤你手腕的汽车了。面对无数强有力又低价的竞品，福特必须付出更大的努力来提升汽车的容易性。</p>\n<p>需求满足，让购买、产品使用或获得客户服务变得更便捷、更容易，这些在客户体验方面的重要性不言而喻。在这二者都满足客户的基础上，企业应该将<strong>“愉悦性”</strong>作为客户体验的一个重要部分，过去，将“愉悦性”作为客户体验的一个重要部分并未得到所有人的认可。有的人认为，只有少数行业，比如媒体或零售业才应该去关注工作过程中的愉悦性，而至于制造业或航空业，这一点也许并不重要。</p>\n<p>但是，我们不要忘了，近几年来细分领域里表现突出的公司在“愉悦性”方面都比较突出，比如海底捞一直强调要“给客户一个惊喜”，关于海底捞“惊喜”的故事数不胜数；同时，德胜则一直强调“不走捷径”，“按部就班”为客户造房子，还包括京东、亚马逊、小米都致力于用不同的方式给消费者创造惊喜。</p>\n<blockquote>\n<p>在拉斯维加斯有一个酒店，客人离开酒店的时候，门童会塞上两瓶冰镇矿泉水，免费给客人在路上喝的。这两瓶水给客人的感觉是无微不至的关怀，也是预料之外的贴心服务。这就是超出预期的体验，才是真正的客户体验。<br>超出预期的才叫做用户体验。</p>\n<p>当年汉庭为每个房间配备了五个枕头，适合不同的人睡眠，是国内经济型酒店中第一个这么做的。按理说，这样算不上什么革命性创新，但确实，顾客打开衣柜的时候会感到惊喜，这完全超出了他们的预期。</p>\n</blockquote>\n<ul>\n<li>怎样让用户很爽，从头到脚，这就是娱乐业精神。</li>\n<li>免费的商业模式</li>\n<li>颠覆性的创新</li>\n</ul>\n<h2 id=\"传送门:\">传送门:</h2>\n<ul>\n<li><a href=\"http://www.jianshu.com/p/1f8a93ed4dd1?search_token=fe3711aaca50477d79f254361625bbadb3d2dbe434e00b5cc775898f1bd5fd0a\" target=\"_blank\" rel=\"external\">客户体验的三个层面</a></li>\n<li><a href=\"http://www.jianshu.com/p/7a3764a366c3?search_token=326cd425de58f12994fc6677354349d7d4e338ede9d9884329549a4bcfc2b4b4\" target=\"_blank\" rel=\"external\">互联网思维-体验为王</a></li>\n</ul>\n","source":"_posts/客户体验的三个层面.md","raw":"title: 客户体验的三个层面\ndate: 2015-01-13 09:02:39\ntags: [客户体验]\n---\n\n> 之于绝大多数企业，客户体验是客户回头率的单一决定因素——也是决胜竞争对手的决定因素。尤其是在言必称互联网模式的时代，客户体验显得至关重要，即使是那些垄断行业，比如快递（中国邮政）和银行，如果在客户体验方面失败也会面临危机。可以说，未来，客户体验会是一切的核心——它决定了企业如何运营自身的业务，员工在同客户和彼此之间互动时的行为方式，以及企业所提供的价值。\n<!--more-->\n\n<img alt=\"客户体验金字塔-银行\" src=\"http://7u2icj.com1.z0.glb.clouddn.com/github-ucd.jpg?imageView2/2/w/600/q/85\" width=\"60%\" alt=\"\">\n\n在我看来，客户体验可分为三个不同的层级：`满足需求`，`容易性`以及`愉悦程度`，这三个层级呈**金字塔“模型”**，需求满足在最底层。每当消费者同一个产品、一项服务、一个人甚至是一个自动操作系统进行互动时，他们的关注点在于，这项互动过程能为完成他们的既定目标带来多大的帮助，他们要在这个互动中付出多大的努力，以及期间他们能获得的愉悦程度。\n\n满足需求，作为客户难舍难分金字塔最基础的部分，原因在于，**满足是基石**。假如某办公用品公司的库存中没有打印纸或碳粉；假如某快递公司总是不能把包裹送达正确的目的地。那么这些都是致命的失误，会让一个公司走向灭亡，绝不是一个热情的客服人员能够挽回的局面。一旦出现了这样的情况，你的游戏就落幕了。\n\n当一家公司满足了消费者最基本的需求之后，如果还想要占得一席之地，那么就必须要考虑到客户体验金字塔的上一个层级——**容易性**。我们可以看到很多例子证明了容易性会为企业带来强大的竞争力——甚至可以说为整个行业带来竞争力。过去，在网络上上传视频是可以实现的，但很少有人会上传视频，直到YouTube，尤其是国内的优酷诞生后，让视频的上传变得简单起来。包括数码音乐播放器起初也并不流行，因为很难把音乐拷进去，直到苹果推出了iTunes和iPod。\n\n*当然容易性仅仅在客户确实没有其他选择时才是可有可无的*。比如我们熟知的福特T型车，这款车型真的谈不上“易用”。要发动它，需要两个人合作：一人坐在驾驶位，另一人要站在车前转动曲柄。那个转曲柄的人也要冒一定的风险。有时发动机会产生一个强大的“回力”，使得曲柄向相反的方向转动，这一设计缺陷弄伤了很多人的手腕。但是在那个年代，福特T型车获得了巨大的成功，因为这款车在当时对大众而言是唯一的选择。所以，它让福特通过客户体验金字塔最基础的层级就赢得了市场上的一席之地。今天，福特绝对不会再推出这样一款需要曲柄驱动，并且在驱动过程中还有可能会弄伤你手腕的汽车了。面对无数强有力又低价的竞品，福特必须付出更大的努力来提升汽车的容易性。\n\n需求满足，让购买、产品使用或获得客户服务变得更便捷、更容易，这些在客户体验方面的重要性不言而喻。在这二者都满足客户的基础上，企业应该将**“愉悦性”**作为客户体验的一个重要部分，过去，将“愉悦性”作为客户体验的一个重要部分并未得到所有人的认可。有的人认为，只有少数行业，比如媒体或零售业才应该去关注工作过程中的愉悦性，而至于制造业或航空业，这一点也许并不重要。\n\n但是，我们不要忘了，近几年来细分领域里表现突出的公司在“愉悦性”方面都比较突出，比如海底捞一直强调要“给客户一个惊喜”，关于海底捞“惊喜”的故事数不胜数；同时，德胜则一直强调“不走捷径”，“按部就班”为客户造房子，还包括京东、亚马逊、小米都致力于用不同的方式给消费者创造惊喜。\n\n> 在拉斯维加斯有一个酒店，客人离开酒店的时候，门童会塞上两瓶冰镇矿泉水，免费给客人在路上喝的。这两瓶水给客人的感觉是无微不至的关怀，也是预料之外的贴心服务。这就是超出预期的体验，才是真正的客户体验。\n超出预期的才叫做用户体验。\n\n> 当年汉庭为每个房间配备了五个枕头，适合不同的人睡眠，是国内经济型酒店中第一个这么做的。按理说，这样算不上什么革命性创新，但确实，顾客打开衣柜的时候会感到惊喜，这完全超出了他们的预期。\n\n- 怎样让用户很爽，从头到脚，这就是娱乐业精神。\n- 免费的商业模式\n- 颠覆性的创新\n\n##传送门:\n- [客户体验的三个层面](http://www.jianshu.com/p/1f8a93ed4dd1?search_token=fe3711aaca50477d79f254361625bbadb3d2dbe434e00b5cc775898f1bd5fd0a)\n- [互联网思维-体验为王](http://www.jianshu.com/p/7a3764a366c3?search_token=326cd425de58f12994fc6677354349d7d4e338ede9d9884329549a4bcfc2b4b4)\n","slug":"客户体验的三个层面","updated":1421114175000,"excerpt":"<blockquote>\n<p>之于绝大多数企业，客户体验是客户回头率的单一决定因素——也是决胜竞争对手的决定因素。尤其是在言必称互联网模式的时代，客户体验显得至关重要，即使是那些垄断行业，比如快递（中国邮政）和银行，如果在客户体验方面失败也会面临危机。可以说，未来，客户体验会是一切的核心——它决定了企业如何运营自身的业务，员工在同客户和彼此之间互动时的行为方式，以及企业所提供的价值。<br>","_id":"ltvddo0txx6k45uw","categories":[],"comments":true,"layout":"post","photos":[],"link":""}],"Tag":[{"name":"rails","_id":"y1jtckj4cxneiidn","posts":["ktypk0red7m31yar","fiocmcgss0oci270","4m6n2b68bqgd0cx1","fl2qksjndbp345dk","35j1detypjeibtmx","q7gi3dgpd6jdk1tc","325uifs2fmcpu8tn","3b8k1tohz1yr8bdj","2nw9qqe5jnr26hbl"]},{"name":"缓存","_id":"sodkjjrk95resnvm","posts":["ktypk0red7m31yar"]},{"name":"devise","_id":"fa3ig27fs9aen28r","posts":["fiocmcgss0oci270"]},{"name":"simple captcha","_id":"x0dtvt0wo7hl4m39","posts":["fiocmcgss0oci270"]},{"name":"多语言","_id":"iwgffux37it5mew5","posts":["4m6n2b68bqgd0cx1"]},{"name":"kaminari","_id":"8a53wel3fr0lbarb","posts":["fl2qksjndbp345dk","q7gi3dgpd6jdk1tc"]},{"name":"分页","_id":"x6sh59eosqp0op97","posts":["fl2qksjndbp345dk","yjm60pibl4rvsf62"]},{"name":"helper","_id":"0hvd08ptgekmzvyj","posts":["35j1detypjeibtmx"]},{"name":"link_to","_id":"kycvlgnxqidkzkz5","posts":["35j1detypjeibtmx"]},{"name":"form","_id":"exnoqgrwbxo8hil6","posts":["35j1detypjeibtmx"]},{"name":"cms","_id":"tdmmr8qmq4rds40s","posts":["325uifs2fmcpu8tn"]},{"name":"关联查询","_id":"nv4vbi9jrisedka8","posts":["3b8k1tohz1yr8bdj"]},{"name":"多对多","_id":"v6mt009k9l4sewu1","posts":["3b8k1tohz1yr8bdj"]},{"name":"thinkphp","_id":"u7wijhfyxcxq0lgi","posts":["pp6w6cejkjuetpih","yjm60pibl4rvsf62"]},{"name":"动态路由","_id":"zz9ygliq4zjrijrv","posts":["pp6w6cejkjuetpih","2nw9qqe5jnr26hbl"]},{"name":"php","_id":"mjpyz1aolgh4wowd","posts":["xw5mg22qta2hj65x","l58792rvl4no9gaw"]},{"name":"DynamicRouter","_id":"b9wmxarbtiecsyrv","posts":["2nw9qqe5jnr26hbl"]},{"name":"路由","_id":"ho8t4tyyspnh0owx","posts":["yjm60pibl4rvsf62"]},{"name":"搜索","_id":"gq8hivxiyodgfmkz","posts":["yjm60pibl4rvsf62"]},{"name":"linux","_id":"g86yqjjjye8dhy1e","posts":["x3r71i62fkfpdpvh"]},{"name":"chmod","_id":"ch3hupupbf3or59n","posts":["x3r71i62fkfpdpvh"]},{"name":"递归","_id":"rvuoj0jqsko5ocgz","posts":["x3r71i62fkfpdpvh"]},{"name":"权限","_id":"fljt402i1i8cdtzk","posts":["x3r71i62fkfpdpvh"]},{"name":"客户体验","_id":"du5sbbdjdwj5ti1i","posts":["ycaatkqts5w5qcef","ltvddo0txx6k45uw"]},{"name":"css","_id":"siht99l54uqqsjsy","posts":["vsub0fg697x7djhu"]},{"name":"动画库","_id":"tqlf3hf77ztaltlx","posts":["vsub0fg697x7djhu"]},{"name":"设计","_id":"0acy3ur9aiep3txb","posts":["r2uvplu5r7wnfcde"]},{"name":"颜色","_id":"ssazo01t7x8cstf9","posts":["r2uvplu5r7wnfcde"]},{"name":"涨姿势","_id":"1wyqh7wptxsfl8sc","posts":["r2uvplu5r7wnfcde"]},{"name":"2015","_id":"aw7rvs12sry5lvpg","posts":["jfq9ev5pxme3x0jw"]},{"name":"年度计划","_id":"vk4lndxpx89k7npo","posts":["jfq9ev5pxme3x0jw"]}]}