<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[五月碧云天]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://akgitcom.github.io/"/>
  <updated>2015-01-15T04:49:15.964Z</updated>
  <id>http://akgitcom.github.io/</id>
  
  <author>
    <name><![CDATA[五月碧云天]]></name>
    
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[涨姿势！为什么有的颜色看起来非常高档？]]></title>
    <link href="http://akgitcom.github.io/2015/01/15/%E6%B6%A8%E5%A7%BF%E5%8A%BF%EF%BC%81%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E7%9A%84%E9%A2%9C%E8%89%B2%E7%9C%8B%E8%B5%B7%E6%9D%A5%E9%9D%9E%E5%B8%B8%E9%AB%98%E6%A1%A3%EF%BC%9F/"/>
    <id>http://akgitcom.github.io/2015/01/15/涨姿势！为什么有的颜色看起来非常高档？/</id>
    <published>2015-01-15T03:00:42.000Z</published>
    <updated>2015-01-15T03:25:28.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-what-make-color-great-1.jpg" alt="涨姿势！为什么有的颜色看起来非常高档？"></p>
<p><a href="http://weibo.com/enoxone" target="_blank" rel="external">@-eno-one-</a> ：高档色的色彩纯度、明度、饱和度低，是表象。但不是使得它们看起来显得高档的根本原因。</p>
<h2 id="正确的答案是：">正确的答案是：</h2>
<blockquote>
<p>之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。<br>而降低色彩饱和度，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。</p>
</blockquote>
<p><a id="more"></a><br>我先从色彩对我们情绪影响的由来开始说起。</p>
<p>每种色彩都会给人不同的心理感受。比如我们常说的，紫金搭配显贵气，紫色代表神秘，蓝色代表迷离空旷，红色代表热情与危险，绿色代表生命等等。</p>
<p>见下图示例：<br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-4212332703454fe645b3c32b4464363f_b.jpg" alt="a1"><br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-d80d0652f1fe2d32b19b0cff405807c4_b.jpg" alt="a2"></p>
<p>这些色彩的心理感受，并不是人类后期赋予或者毫无根据杜撰出来的。我们现代人的行为、思维等等，其实都是因进化演变而形成的一种自然生理机制。</p>
<p>为什么蓝色会给人没有食欲？因为自然界中就没有天然存在的蓝色食物。为什么红色橙色会给人危险的感觉？因为自然界中，很多有毒的生物表体的颜色就是如此，</p>
<p>因此在人类长期的进化演变过程中，对于过分鲜艳的颜色，便有了独特的警觉性。还有更多的色彩心理，其实，都是因人类进化而逐渐被我们确定认知的。所以，就不再一一举例了。</p>
<p>见下图示例：<br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-edf4a836edc1fd15fa379e2ca7805f32_b.jpg" alt=""><br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-4591ff4de9071822c1f0d1b2b13b8090_b.jpg" alt=""><br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-5e2011705f19f06625871ad642ed0488_b.jpg" alt=""></p>
<blockquote>
<p>结论：色彩饱和度较高的颜色，也就是我们通常所说的鲜艳的颜色，本身就会对我们观看者的情绪造成影响。</p>
</blockquote>
<h1 id="接下来，再说一下，色相对于情绪的影响。">接下来，再说一下，色相对于情绪的影响。</h1>
<h2 id="色相：">色相：</h2>
<p>色相是色彩的首要特征，是区别各种不同色彩的最准确的标准。事实上任何黑白灰以外的颜色都有色相的属性，而色相也就是由原色、间色和复色来构成的。色相，色彩可呈现出来的质的面貌。自然界中各个不同的色相是无限丰富的，如紫红、银灰、橙黄等。色相即各类色彩的相貌称谓。</p>
<p>下图的男士，身着三款不同颜色，但是色相明确的衬衣。<br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-c548205aa7d33fb8799f95a8473a18df_b.jpg" alt=""><br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-a9f68e13d4d79bb3bd3746165b05809d_b.jpg" alt=""><br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-c74229beda6760ececade3a10c012452_b.jpg" alt=""></p>
<p>以上三个颜色，我们大多数人都可以第一时间马上将它们说出来。比如黄色、绿色和蓝色。</p>
<p>而每种颜色，所让我们感受或联系到的情绪都会有不同，例如黄色会显得激烈，荧光的绿色会使人惊觉，较亮的蓝色让我们觉得干净。这些不同的感受，都是色彩带给我们的情绪影响。</p>
<p>接下来，我们再来做一组实验。</p>
<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-c74229beda6760ececade3a10c012452_b.jpg" alt=""></p>
<p>我们先来看看上图中的衬衣，到底是蓝色还是绿色？是否发现，当物体的色相不那么明确之后，色彩对于我们情绪的影响也就随之减弱。</p>
<p>接下来，我们再来一次实验</p>
<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-d8e0215b89c3b507f7d0846cd988e147_b.jpg" alt=""></p>
<p>还是选择最开始图例中的绿色来进行比较。左边衣服的绿色，色彩饱合度较高，而右边的则降低饱和度。看看那一个颜色会显得略微高档。其实，降低色彩饱和度，也是削弱色彩对人情绪影响的一个手段。</p>
<h1 id="总结：">总结：</h1>
<ul>
<li>之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。</li>
<li>而降低色彩饱和度，或者不明确色相的颜色，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。</li>
<li>黑白照片看起来比彩色照片高档，大部分奢侈品牌选择黑白，其实都是在降低色彩本身对于人情绪的影响，而使人感觉高档。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-what-make-color-great-1.jpg" alt="涨姿势！为什么有的颜色看起来非常高档？"></p>
<p><a href="http://weibo.com/enoxone" target="_blank" rel="external">@-eno-one-</a> ：高档色的色彩纯度、明度、饱和度低，是表象。但不是使得它们看起来显得高档的根本原因。</p>
<h2 id="正确的答案是：">正确的答案是：</h2>
<blockquote>
<p>之所以一些颜色看起来会显得高档，其实是因为该颜色传提出的情绪很少。<br>而降低色彩饱和度，其实就是在降低和削减色彩对人情绪的影响。所以会看起来略显高档。</p>
</blockquote>
<p>]]>
    
    </summary>
    
      <category term="设计" scheme="http://akgitcom.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="颜色" scheme="http://akgitcom.github.io/tags/%E9%A2%9C%E8%89%B2/"/>
    
      <category term="涨姿势" scheme="http://akgitcom.github.io/tags/%E6%B6%A8%E5%A7%BF%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用chmod如何给文件夹递归授予权限]]></title>
    <link href="http://akgitcom.github.io/2015/01/14/%E4%BD%BF%E7%94%A8chmod%E5%A6%82%E4%BD%95%E7%BB%99%E6%96%87%E4%BB%B6%E5%A4%B9%E9%80%92%E5%BD%92%E6%8E%88%E4%BA%88%E6%9D%83%E9%99%90/"/>
    <id>http://akgitcom.github.io/2015/01/14/使用chmod如何给文件夹递归授予权限/</id>
    <published>2015-01-14T04:52:37.000Z</published>
    <updated>2015-01-14T04:54:03.000Z</updated>
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">find /path -type f -exec chmod <span class="number">644</span> {} \; 修改文件权限</div><div class="line">find /path -type d -exec chmod <span class="number">755</span> {} \;修改文件夹权限</div></pre></td></tr></table></figure>

<ul>
<li><code>/path</code> , -type 根据类型和路径遍历文件以及子文件夹</li>
<li><code>-exec</code> 每遍历一步就执行一次此参数后的命令</li>
<li><code>{}</code> 代表前面所遍历到的文件或文件夹</li>
<li><code>\;</code> 代表-exec命令的结束符号，-exec命令的固定格式</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="co]]>
    </summary>
    
      <category term="linux" scheme="http://akgitcom.github.io/tags/linux/"/>
    
      <category term="chmod" scheme="http://akgitcom.github.io/tags/chmod/"/>
    
      <category term="递归" scheme="http://akgitcom.github.io/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="权限" scheme="http://akgitcom.github.io/tags/%E6%9D%83%E9%99%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[thinkphp 路由分页搜索]]></title>
    <link href="http://akgitcom.github.io/2015/01/13/thinkphp-%E8%B7%AF%E7%94%B1%E5%88%86%E9%A1%B5%E6%90%9C%E7%B4%A2/"/>
    <id>http://akgitcom.github.io/2015/01/13/thinkphp-路由分页搜索/</id>
    <published>2015-01-13T05:50:14.000Z</published>
    <updated>2015-01-13T06:10:17.000Z</updated>
    <content type="html"><![CDATA[<p>thinkphp的条件搜索分页后需要指定路由,<code>search</code>是路由的名字,可以换成任意字符,需要在route.php修改,这里是指定的参数</p>
<ul>
<li>i_f_searchtxt #搜索字符</li>
<li>sc #select分类</li>
<li><strong>hash</strong> #自带参数,必选</li>
</ul>
<p>设置<strong>$p-&gt;url</strong>参数,直接拼接字符串:</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$p</span><span class="variable">-&gt;url</span> = <span class="string">"search/i_f_searchtxt/"</span>.<span class="variable">$_GET</span>[<span class="string">"i_f_searchtxt"</span>].<span class="string">"/sc/"</span>.<span class="variable">$_GET</span>[<span class="string">"sc"</span>].<span class="string">"/__hash__/"</span>.<span class="variable">$_GET</span>[<span class="string">"__hash__"</span>].<span class="string">'/p/'</span>;</div></pre></td></tr></table></figure>

<p><strong>config/route.php:</strong></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'search/:i_f_searchtxt/:sc/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Index/Search'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'search'</span>] = <span class="keyword">array</span>(<span class="string">'Index/Search'</span>);</div></pre></td></tr></table></figure>

<blockquote>
<p>这里的route.php是<a href="http://localhost:4000/2015/01/12/thinkphp-%E5%90%8E%E5%8F%B0%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1/" target="_blank" rel="external">thinkphp后台动态设置路由</a>文章里使用的方法自动生成的.</p>
<p><strong>$_GET</strong>方法还需要过滤,或者直接用thinkphp提供的<code>I</code>方法</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>thinkphp的条件搜索分页后需要指定路由,<code>search</code>是路由的名字,可以换成任意字符,需要在route.php修改,这里是指定的参数</p>
<ul>
<li>i_f_searchtxt #搜索字符</li>
<li>sc #select分类<]]>
    </summary>
    
      <category term="thinkphp" scheme="http://akgitcom.github.io/tags/thinkphp/"/>
    
      <category term="路由" scheme="http://akgitcom.github.io/tags/%E8%B7%AF%E7%94%B1/"/>
    
      <category term="分页" scheme="http://akgitcom.github.io/tags/%E5%88%86%E9%A1%B5/"/>
    
      <category term="搜索" scheme="http://akgitcom.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[客户体验的三个层面]]></title>
    <link href="http://akgitcom.github.io/2015/01/13/%E5%AE%A2%E6%88%B7%E4%BD%93%E9%AA%8C%E7%9A%84%E4%B8%89%E4%B8%AA%E5%B1%82%E9%9D%A2/"/>
    <id>http://akgitcom.github.io/2015/01/13/客户体验的三个层面/</id>
    <published>2015-01-13T01:02:39.000Z</published>
    <updated>2015-01-13T01:56:15.000Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>之于绝大多数企业，客户体验是客户回头率的单一决定因素——也是决胜竞争对手的决定因素。尤其是在言必称互联网模式的时代，客户体验显得至关重要，即使是那些垄断行业，比如快递（中国邮政）和银行，如果在客户体验方面失败也会面临危机。可以说，未来，客户体验会是一切的核心——它决定了企业如何运营自身的业务，员工在同客户和彼此之间互动时的行为方式，以及企业所提供的价值。<br><a id="more"></a></p>
</blockquote>
<p><img alt="客户体验金字塔-银行" src="http://7u2icj.com1.z0.glb.clouddn.com/github-ucd.jpg?imageView2/2/w/600/q/85" width="60%"></p>
<p>在我看来，客户体验可分为三个不同的层级：<code>满足需求</code>，<code>容易性</code>以及<code>愉悦程度</code>，这三个层级呈<strong>金字塔“模型”</strong>，需求满足在最底层。每当消费者同一个产品、一项服务、一个人甚至是一个自动操作系统进行互动时，他们的关注点在于，这项互动过程能为完成他们的既定目标带来多大的帮助，他们要在这个互动中付出多大的努力，以及期间他们能获得的愉悦程度。</p>
<p>满足需求，作为客户难舍难分金字塔最基础的部分，原因在于，<strong>满足是基石</strong>。假如某办公用品公司的库存中没有打印纸或碳粉；假如某快递公司总是不能把包裹送达正确的目的地。那么这些都是致命的失误，会让一个公司走向灭亡，绝不是一个热情的客服人员能够挽回的局面。一旦出现了这样的情况，你的游戏就落幕了。</p>
<p>当一家公司满足了消费者最基本的需求之后，如果还想要占得一席之地，那么就必须要考虑到客户体验金字塔的上一个层级——<strong>容易性</strong>。我们可以看到很多例子证明了容易性会为企业带来强大的竞争力——甚至可以说为整个行业带来竞争力。过去，在网络上上传视频是可以实现的，但很少有人会上传视频，直到YouTube，尤其是国内的优酷诞生后，让视频的上传变得简单起来。包括数码音乐播放器起初也并不流行，因为很难把音乐拷进去，直到苹果推出了iTunes和iPod。</p>
<p><em>当然容易性仅仅在客户确实没有其他选择时才是可有可无的</em>。比如我们熟知的福特T型车，这款车型真的谈不上“易用”。要发动它，需要两个人合作：一人坐在驾驶位，另一人要站在车前转动曲柄。那个转曲柄的人也要冒一定的风险。有时发动机会产生一个强大的“回力”，使得曲柄向相反的方向转动，这一设计缺陷弄伤了很多人的手腕。但是在那个年代，福特T型车获得了巨大的成功，因为这款车在当时对大众而言是唯一的选择。所以，它让福特通过客户体验金字塔最基础的层级就赢得了市场上的一席之地。今天，福特绝对不会再推出这样一款需要曲柄驱动，并且在驱动过程中还有可能会弄伤你手腕的汽车了。面对无数强有力又低价的竞品，福特必须付出更大的努力来提升汽车的容易性。</p>
<p>需求满足，让购买、产品使用或获得客户服务变得更便捷、更容易，这些在客户体验方面的重要性不言而喻。在这二者都满足客户的基础上，企业应该将<strong>“愉悦性”</strong>作为客户体验的一个重要部分，过去，将“愉悦性”作为客户体验的一个重要部分并未得到所有人的认可。有的人认为，只有少数行业，比如媒体或零售业才应该去关注工作过程中的愉悦性，而至于制造业或航空业，这一点也许并不重要。</p>
<p>但是，我们不要忘了，近几年来细分领域里表现突出的公司在“愉悦性”方面都比较突出，比如海底捞一直强调要“给客户一个惊喜”，关于海底捞“惊喜”的故事数不胜数；同时，德胜则一直强调“不走捷径”，“按部就班”为客户造房子，还包括京东、亚马逊、小米都致力于用不同的方式给消费者创造惊喜。</p>
<blockquote>
<p>在拉斯维加斯有一个酒店，客人离开酒店的时候，门童会塞上两瓶冰镇矿泉水，免费给客人在路上喝的。这两瓶水给客人的感觉是无微不至的关怀，也是预料之外的贴心服务。这就是超出预期的体验，才是真正的客户体验。<br>超出预期的才叫做用户体验。</p>
<p>当年汉庭为每个房间配备了五个枕头，适合不同的人睡眠，是国内经济型酒店中第一个这么做的。按理说，这样算不上什么革命性创新，但确实，顾客打开衣柜的时候会感到惊喜，这完全超出了他们的预期。</p>
</blockquote>
<ul>
<li>怎样让用户很爽，从头到脚，这就是娱乐业精神。</li>
<li>免费的商业模式</li>
<li>颠覆性的创新</li>
</ul>
<h2 id="传送门:">传送门:</h2>
<ul>
<li><a href="http://www.jianshu.com/p/1f8a93ed4dd1?search_token=fe3711aaca50477d79f254361625bbadb3d2dbe434e00b5cc775898f1bd5fd0a" target="_blank" rel="external">客户体验的三个层面</a></li>
<li><a href="http://www.jianshu.com/p/7a3764a366c3?search_token=326cd425de58f12994fc6677354349d7d4e338ede9d9884329549a4bcfc2b4b4" target="_blank" rel="external">互联网思维-体验为王</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>之于绝大多数企业，客户体验是客户回头率的单一决定因素——也是决胜竞争对手的决定因素。尤其是在言必称互联网模式的时代，客户体验显得至关重要，即使是那些垄断行业，比如快递（中国邮政）和银行，如果在客户体验方面失败也会面临危机。可以说，未来，客户体验会是一切的核心——它决定了企业如何运营自身的业务，员工在同客户和彼此之间互动时的行为方式，以及企业所提供的价值。<br>]]>
    
    </summary>
    
      <category term="客户体验" scheme="http://akgitcom.github.io/tags/%E5%AE%A2%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何设计你的2015年度计划]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/%E5%A6%82%E4%BD%95%E8%AE%BE%E8%AE%A1%E4%BD%A0%E7%9A%842015%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/"/>
    <id>http://akgitcom.github.io/2015/01/12/如何设计你的2015年度计划/</id>
    <published>2015-01-12T04:12:49.000Z</published>
    <updated>2015-01-13T01:25:36.000Z</updated>
    <content type="html"><![CDATA[<p>新的一年总有新的愿景与目标，也就是<code>「年度计划」</code>（New Year Resolution）。两个多月前，<a href="http://www.facebook.com" target="_blank" rel="external">脸书</a>的创办人<a href="http://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%8B%C2%B7%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC" target="_blank" rel="external">扎克伯格（Mark Zuckerberg）</a>到北京参访，在清华大学用中文做了超过30分钟的演讲与问答，令大家印象深刻。不只国内媒体，许多美国主流媒体都用「惊悚」来形容他的中文能力。<a id="more"></a></p>
<p>我记得约4年前，Mark 邀请李开复到硅谷脸书总部演讲，印象中他只能简单用中文介绍几句；多年后，他的中文已进步神速。</p>
<p>最近几年，Mark 每年都有个人的年度计划。去年，他每天写一张「感谢卡」，让自己随时保有感恩的心。前年，他规定每天必须认识一位新朋友，扩展生活领域。2012年，长期投入管理工作的他，立下回归写程序的计划，让自己不忘初衷。</p>
<p>2010年，Mark的年度计划就是学好中文。这次他在清华的演讲，虽然肯定是经过公关的精心包装，但他不只用中文回答所有问题，还能用中文讲笑话，让全场哄堂大笑，实在不容易。Mark本身的努力与坚持，值得鼓励与效法。因此，如果能够好好规划年度计划，对人生会有意想不到的影响。我也做过不少新年计划，在这里可以分享一些诀窍：</p>
<h2 id="1_讨你女朋友的欢心">1 讨你女朋友的欢心</h2>
<p>人的习惯就是，当没有人要求你越多，你越无法做到。而越是有人要求你去完成，你就越有可能做好这件事情。当然，你的意图并不一定是做好这件事情本身或什么成就感，而是为了面子和被对方夸赞的虚荣心。Mark 为了讨他女友的欢心，学会了这世界最难学的语言，成为了最年轻的世界富翁。所以，为了你女人的笑容和你们的美好未来，去努力拼搏吧。但需要注意的是，如果你女人对你的期待只是能凑活过就成和平淡的生活什么的，那可能也不需要你有什么宏伟的计划去讨好她了。因为你们只看到了现在的现实，或者对未来的梦境你们没有自信，那么自开始你就可能会全盘放弃。什么，你还没有女朋友！？</p>
<h2 id="2_自虐">2 自虐</h2>
<p>利用自虐行为，你就能想起更多的计划和去实现他们。比如感情受挫，大难不死和死到临头，之后你会因为大量的悲伤绝望这种感情所充斥脑海，从而自暴自弃，做出任性的事情来。这很好，让你的情绪去驱动你做你想做的事情，虽然有一定的危险性，但这是最有效的引发你自身奇迹的手段，不是么？;-) 可以多去挑战下打架，碰瓷，蹦极，跳伞，去西藏，偷盗，抢劫等…不一定非要去体验的很完全，但去监狱待几天也绝对让你的人生焕然一新。</p>
<h2 id="3_只有一个计划：挣钱">3 只有一个计划：挣钱</h2>
<p>可能你有很多想法，有很多理念，很多想做的事，可却苦于自己得生活原因，家庭原因，自身原因，你没办法主动去实现。没关系，因为只要有钱，这些事情你都可以轻而易举的做到，所以所有的计划你都可以归结为一个计划，挣钱。对于那些虚无缥缈的计划，挣钱却是很现实的一件事。挣钱，挣更多的钱。在这个经济社会中，有了钱，你就能得到一切，所以你没有任何理由去拒绝或懒得去执行这个计划。</p>
<p>学好英文是个典型的例子，从挣钱的角度来说，学好英文就可以挣那些不懂英文的人的钱，也可以挣懂英文的人的钱。想挣更多的钱么，学好英文你就能够挣更多人的钱。学好英文你一年就能收入100W so easy，你学不学？你觉得这不可能，为什么那么多学英文的没挣钱，那是因为他们没好好学啊，或没学以致用，工作上用不到英文。有那么好的技能，挣不到更多的钱，十分可惜。</p>
<p>以Mark为例，学中文对老美来说，是一大挑战。如果换个角度看， Mark 学好了中文，就可以来中国和政府搞好关系让脸书进入中国，吸收3亿市场份额，继续保持最大的社交平台，年收入增加100亿，学不学！？那么学了十几年英文的中国人，是不是更应该学好英文去挣外国人的钱呢！嘿，你先把中国人的钱挣了吧。</p>
<p>我不鼓励年轻人去看新闻和开拓视野什么的，别好像跟你有多大关系似的，地铁从2块到5块就算到10块你也得坐，习大大点赞也不是因为你蛮拼的，这些只会让你产生情绪，混淆你的计划，别人去西藏了再不走就老了，别人年薪多少万了再不跳就晚了，别人孩子几岁了再不结婚就没人要了，以上这些都是因为对比了新闻和其他人的视野之后所产生的恐惧心理和不安全感！记住，他人的生活跟你没有毛线关系！！而你的计划只有一个，挣钱，用你自己的方式，在更短的时间内挣更多的钱！！等你有钱了以后想干嘛干嘛！！</p>
<p>另外，我分享一个挣钱的年度计划。</p>
<blockquote>
<p>多年前，李开复从中国调回美国微软总部，为了拓展社交圈，他计划多认识新朋友，虽不像Mark一天认识一位，但他规定自己每周和一个新朋友吃饭，或喝茶。去哪儿找那么多人吃饭啊？他教了一个秘密：每次和新朋友吃饭，谈话中留意有没有什么他的朋友是你希望认识的，吃晚饭前务必请他再介绍一位朋友给你，增加你的社交圈。计划运作几年之后，李开复回国创业，开始游说社交圈里的各种朋友进行金钱或人情投资，于是血汗工厂就此建立，用来继续吸收土豪朋友们和市场的资金。太机智了有木有，到干不下去了之后，自己的钱也搞差不多了，随便大病退休，再安排一下让自己成为慈善人物，乳腺癌爱心大使？什么的，人生圆满。</p>
</blockquote>
<p>为什么要拓展社交圈？要挣钱！！人生有很多机运，不是靠着最要好朋友的“强”关系，而是维系你的上百个“弱”关系; 如果能够掌握更多人脉，也可以带来更多挣钱的机会！如何认识新朋友？可以请朋友引介关于新技术、产品管理、投资领域中的佼佼者，这样既能认识新朋友，也能增广新知识，拓展新视野，从他们手里套到更多的钱！</p>
<h1 id="4_总结">4 总结</h1>
<blockquote>
<p>人总是有惰性，喜欢窝在自己的舒适圈，要想成长，就必须改变。当你订下年度计划，执行一阵子后，你会发现，任何新目标都需要很努力才能实现，可“努力”二字永远无法变成你生活中的一部分，你有情绪，你静不下心来。想要改变，就先从控制自己的情绪开始。无法控制自己的情绪也很正常，正常的人嘛，可正常的人都不做年度计划的，都心随自然。只有那些野心勃勃欲望强烈的怪物们才会做年度计划。他们深爱着自己和这个世界，跑的快，跳的高，看的多，走的远。他们居安思危，屯粮捕猎，正常人便是他们的猎物。</p>
</blockquote>
<p>正常人很蠢，很懒，很善良，很美味。</p>
<p>你2015年计划吃多少正常人？</p>
<h2 id="传送门:">传送门:</h2>
<ul>
<li><a href="http://www.jianshu.com/p/caf33f648acb" target="_blank" rel="external">如何设计你的2015年度计划</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>新的一年总有新的愿景与目标，也就是<code>「年度计划」</code>（New Year Resolution）。两个多月前，<a href="http://www.facebook.com" target="_blank" rel="external">脸书</a>的创办人<a href="http://zh.wikipedia.org/wiki/%E9%A9%AC%E5%85%8B%C2%B7%E6%89%8E%E5%85%8B%E4%BC%AF%E6%A0%BC" target="_blank" rel="external">扎克伯格（Mark Zuckerberg）</a>到北京参访，在清华大学用中文做了超过30分钟的演讲与问答，令大家印象深刻。不只国内媒体，许多美国主流媒体都用「惊悚」来形容他的中文能力。]]>
    
    </summary>
    
      <category term="2015" scheme="http://akgitcom.github.io/tags/2015/"/>
    
      <category term="年度计划" scheme="http://akgitcom.github.io/tags/%E5%B9%B4%E5%BA%A6%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何让顾客的体验从不完美到完美]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/%E5%A6%82%E4%BD%95%E8%AE%A9%E9%A1%BE%E5%AE%A2%E7%9A%84%E4%BD%93%E9%AA%8C%E4%BB%8E%E4%B8%8D%E5%AE%8C%E7%BE%8E%E5%88%B0%E5%AE%8C%E7%BE%8E/"/>
    <id>http://akgitcom.github.io/2015/01/12/如何让顾客的体验从不完美到完美/</id>
    <published>2015-01-12T03:30:32.000Z</published>
    <updated>2015-01-12T04:32:45.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-shouyu.jpg" alt="加拿大开全球首家手语餐馆 顾客体验手语点餐"></p>
<ul>
<li>原文首发于联商网，发表时题为《卖场如何有效提升顾客体验：从“五觉”下手》</li>
</ul>
<p>商家希望做到的，是给顾客一个良好的购物体验，让他们体会到用心与诚意，期待他们再次光临。但体验是什么呢？百度百科上说，用户体验主要是一种纯主观的用户在使用一个产品（服务）过程中建立起来的心理感受。归根结底，体验就是感受。<a id="more"></a></p>
<p>感受又是什么呢？同样来自百度词条，感受是指感官侦测到外境的能量变化后，在个体内产生的生化产应。也就是说，感受来自于感官的侦测。</p>
<p>那消费者是通过什么侦测到卖场的氛围变化呢？他们的判断来自感觉，感觉是听觉、视觉、嗅觉、触觉、味觉的综合感受，它们不断向消费者反馈侦测到的信息，这些信息又决定了消费者的体验过程。</p>
<h2 id="听觉">听觉</h2>
<p>这是零售经营者最容易忽略的。我们经常听到，店堂的音乐与气氛不搭调，就像大身穿了一件小衣服，怎么都觉得不美观。店堂应该播放哪种音乐，应该在哪个时间段播放何种音乐，需要有一个契合点。要想找到这个契合点，前提是研究目标顾客的欣赏水平，不求适合所有顾客的需求，但一定要让大部分顾客喜欢，还要体现店家的品味。</p>
<p>除了整体音乐，也有卖场做了局部播放的尝试。如在生鲜产品区，播放水流动的声音和大海海浪的滚动声，加上现场的商品展示和布置，营造一个如身在海边的氛围，激发顾客的购买愿望。</p>
<p>能营造听觉感受的，不只有音乐，还有现场工作人员的声音：欢迎声、感谢声、叫卖声、唱收唱付声……，这些声音此起伏起，让消费者感受到的是现场员工的活力。但并不是声音越多越好、越大越好。有一家百货店曾采取“盯人战术”，一进入通道，就是高高低低的欢迎声，服务员站在通道边缘热情地让顾客试穿、试用。进入到品牌专区，服务人员紧跟在顾客后面，不停地问：需要什么，要不要试试。据观察，许多顾客听到如此密集的声音大都逃也似地离开，离开时轻舒一口气。高密度的问候声令顾客毫无喘息的机会，顿失安全感。</p>
<h2 id="视觉">视觉</h2>
<p>视觉带给消费者的冲击力最大，也最能让消费者产生直观的感受。视觉体验的范围非常广泛，几乎包括店堂运营的方方面面。现撷取几个方面共享：</p>
<h3 id="一是陈列。">一是陈列。</h3>
<blockquote>
<p><em>陈列的原则是让顾客轻松找到想要的商品。在陈列时必须考虑消费者的购买习惯，这也是品类管理的精华所在。</em></p>
</blockquote>
<p>在一家陌生的卖场，顾客能轻松找到所需商品，那一定是按消费者的需求原则陈列的。据麦肯锡的一项调查显示，消费者把“能轻松找到所需商品”列为第二重要性，仅次于价格。可见，陈列一定要照顾到消费者的购物习惯，要站在顾客角度布局商品。</p>
<p>陈列除了考虑购物便利，还要兼顾美观原则。许多超市把陈列做成了美学教案，不仅颜色搭配合理，还富创造力，让消费者在购物之余享受了一场视觉盛宴。优衣库在这方面尤其做得好，他们把同一款式各种颜色的衣服，依照色卡的顺序渐次摆放，简单而美观，非常有吸引力。</p>
<p>除以上两点外，陈列还要会“<strong>讲故事</strong>”。一件商品陈列出来要让顾客产生联想，联想到理想的生活方式。我曾经买过几个本子，当时本子打开陈列在一张小书桌上，旁边还放着一张POP，上面写到：每天为自己留下点记忆。我立即想到了写字的梦想，所以毫不犹豫地买了几本，虽然至今上面没写几个字。</p>
<p>见过一个卖西瓜的案例。正是盛夏，西瓜大量上市，一家超市的西瓜比外面贵几毛钱，旁边的指示牌写明：某地西瓜丰收来不及收获大多烂在了地里，超市派员直接到产地采购，价格稍贵是为了稍稍弥补农民的损失，并标出了进货价，表明超市只赚取了基本费用。看到这个牌子，许多顾客都不只买了一个西瓜。</p>
<p>还有一讲故事的例子。全聚德为烤鸭建立了“身份证”，从建店到现在，一共出炉一亿多只，每只都有一个编号。食客点了鸭子，会同时拿到一个身份证，上面有正在食用的烤鸭号码，看到这样的卡片，顾客不光觉得吃到了鸭子，还一同品尝了历史的厚重感。</p>
<h3 id="二是价格的标注。">二是价格的标注。</h3>
<blockquote>
<p>价格标注原则是清晰、明确。</p>
</blockquote>
<p>就是这样简单的原则，也有商家做得不够好。在售卖现场，顾客要么只看到商品，找不到相应的价签；要么有价签无商品；要么就是商品和价格错位，这些人为设置的障碍都让顾客在瞬间产生不佳的印象和体验，也容易引发投拆。</p>
<h3 id="三是员工的技能和笑容。">三是员工的技能和笑容。</h3>
<blockquote>
<p>员工是链接商家和顾客的桥梁，也是商家的代言人，员工的一举一动都会影响店铺在顾客心目中的形象。</p>
</blockquote>
<p>无印良品的员工服务一直让人称道，不管在任何地方，只要需要帮助，总有员工热情地提供服务，在卖场见到的都是员工平和的笑容。顾客在这样的店铺购物，脚步不急不慢，神情泰然自若，也更有“逛”的感觉。</p>
<h2 id="嗅觉">嗅觉</h2>
<blockquote>
<p>店铺里需要味道吗？答案当然是肯定的。</p>
</blockquote>
<p>在经营化妆品的楼层，整个楼面都香喷喷的，顾客被香氛围绕，能瞬间放松心情。超市里的香气更是必不可少。记得多年前听过一位日本同行讲过，为了营造良好的现场味道，他们特制了一种机器，把烘焙的香气散发出来，顾客被味道吸引，进而产生购买的欲望。</p>
<p>除了面包的香气，还有热气腾腾的刚出炉的包子味、油炸丸子的香味、现场制作豆浆的豆子味，这些味道混合在一起，迅速占领了顾客的嗅觉，徜徉其间，购买物的想法也蠢蠢欲动。</p>
<h2 id="触觉">触觉</h2>
<blockquote>
<p>当顾客拿取一个商品，上面沾满了灰尘，原本愉快的心情瞬间和灰尘一样灰色。这样的触觉体验是顾客不肯再光顾的理由。</p>
</blockquote>
<p>一家服装店，衣服是叠起平放在一起的，想看看式样，就必须逐一打开，不一会儿，展台上堆满了凌乱的衣服，服务人员跟着收拾。看到这种情况，顾客只得看看就走了，不敢再“动手”触摸，“只看不动”，许多销售机会就悄悄溜走了。</p>
<p>超市同样如此，货架层板之间的间距设计不合理，拿一瓶水，要左倾右倾才能拿出来，顾客也就不耐烦起来。</p>
<p>所以，对顾客来说，最佳的触觉就是货架洁净、购物篮整洁、商品易于拿取；对商家来说，就是想尽办法，让顾客触摸商品的过程更顺畅、更愉悦。</p>
<h2 id="味觉">味觉</h2>
<blockquote>
<p>许多商家注意到，做试吃的品种，销售额大都会提升。试吃是一种与顾客互动的促销活动，也会增加购买机率。为什么试吃会有如此好的效果呢，因为它能带给顾客味觉的体验，体验过后，能激发购买欲望。</p>
</blockquote>
<p>在宜家，顾客逛累了可以去食品售卖区喝杯饮料、吃份简餐，满足了味觉的需求后，再继续购物之旅。其经营的现场磨制咖啡，可免费续杯，许多人把喝咖啡当作去宜家的一个理由。可见，味觉的满足，也是吸引顾客再次体验的原因。</p>
<p>顾客在商家的体验是全方位、360度的，良好的体验可以延长顾客的停留时间，增加购买机会。每一个商家都应把打造一个超过顾客预期的体验过程为最终目标，让顾客更愿意光临、更愿意停留。如果商家不能判定顾客是否满意他的购物之旅，那就自己扮成顾客，完成一次体验，换个角度，就会发现许多问题。</p>
<h1 id="总结">总结</h1>
<blockquote>
<p>好的体验是让顾客感受到完美。对商家来说，从不完美到完美有一段很长的路要走，这个过程不是纸上谈兵般轻松容易，需要付出更多的努力与实践。但不管怎样，都要迈出第一步，那就从现在开始行动，离完美也就近了一些。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-shouyu.jpg" alt="加拿大开全球首家手语餐馆 顾客体验手语点餐"></p>
<ul>
<li>原文首发于联商网，发表时题为《卖场如何有效提升顾客体验：从“五觉”下手》</li>
</ul>
<p>商家希望做到的，是给顾客一个良好的购物体验，让他们体会到用心与诚意，期待他们再次光临。但体验是什么呢？百度百科上说，用户体验主要是一种纯主观的用户在使用一个产品（服务）过程中建立起来的心理感受。归根结底，体验就是感受。]]>
    
    </summary>
    
      <category term="客户体验" scheme="http://akgitcom.github.io/tags/%E5%AE%A2%E6%88%B7%E4%BD%93%E9%AA%8C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Rails 4.1.6 使用Devise 和Simple Captcha 验证码]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/Rails-4-1-6-%E4%BD%BF%E7%94%A8Devise-%E5%92%8CSimple-Captcha-%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>http://akgitcom.github.io/2015/01/12/Rails-4-1-6-使用Devise-和Simple-Captcha-验证码/</id>
    <published>2015-01-12T01:45:52.000Z</published>
    <updated>2015-01-12T02:00:04.000Z</updated>
    <content type="html"><![CDATA[<h2 id="rails_simple_captcha_验证码实现">rails simple_captcha 验证码实现</h2>
<h3 id="用到的gem有">用到的gem有</h3>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">"galetahub-simple_captcha"</span>, :<span class="keyword">require</span> =&gt; <span class="string">"simple_captcha"</span></div><div class="line">gem <span class="string">"mini_magick"</span></div></pre></td></tr></table></figure>

<p><a id="more"></a><br>执行<strong>bundle</strong></p>
<p>重写<strong>devise</strong>的<strong>controller</strong>方法我把<strong>devise</strong>的方法放到<em>/admin</em>里了</p>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">devise_for <span class="symbol">:users</span>,</div><div class="line">           <span class="symbol">:path</span> =&gt; <span class="string">"/admin/users"</span>,</div><div class="line">           <span class="symbol">:controllers</span> =&gt; { <span class="symbol">:sessions</span> =&gt; <span class="string">"devise_hack/sessions"</span>,<span class="symbol">:registrations</span> =&gt; <span class="string">"devise_hack/registrations"</span> },</div><div class="line">           <span class="symbol">:path_names</span>  =&gt; { <span class="symbol">:sign_in</span>  =&gt; <span class="string">'login'</span>, <span class="symbol">:sign_out</span> =&gt; <span class="string">'logout'</span>, <span class="symbol">:sign_up</span> =&gt; <span class="string">'sign_up'</span>}</div></pre></td></tr></table></figure>

<h3 id="执行下面命令安装simple_captcha">执行下面命令安装simple_captcha</h3>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rails generate simple_captcha</div><div class="line">rake <span class="keyword">d</span><span class="variable">b:migrate</span></div></pre></td></tr></table></figure>

<p>生成<strong>_simple_captcha.html.erb</strong>文件，该文件为验证码的局部视图模板。修改局部视图<strong>/vews/devise/sessions/new.html.erb</strong>，添加一个切换验证码链接。</p>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;<span class="variable">%=</span> show_simple_captcha <span class="variable">%&gt;</span></div></pre></td></tr></table></figure>

<h2 id="注册和登陆都需要验证码，需要重构两个controller的create方法">注册和登陆都需要验证码，需要重构两个controller的create方法</h2>
<p>在<strong>controllers/devise_hack/registrations_controller.rb</strong>中</p>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeviseHack::RegistrationsController</span> <span class="inheritance">&lt; <span class="parent">Devise::RegistrationsController</span></span></span></div><div class="line">    <span class="keyword">include</span> <span class="constant">SimpleCaptcha::ControllerHelpers</span></div><div class="line">    <span class="function"><span class="keyword">def</span> </span>create</div><div class="line">    <span class="keyword">if</span> simple_captcha_valid?</div><div class="line">      <span class="keyword">super</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">      build_resource</div><div class="line">      <span class="comment">#clean_up_passwords(resource)</span></div><div class="line">      params[<span class="symbol">:user</span>][<span class="symbol">:password</span>] = <span class="keyword">nil</span></div><div class="line">      flash.now[<span class="symbol">:alert</span>] = <span class="string">"验证码错误!"</span></div><div class="line">      respond_with_navigational(resource) { render <span class="symbol">:new</span> }</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<blockquote>
<p>skip_before_filter :require_no_authentication, :only =&gt; [:new]<br>只有在登陆的时候调用此方法,如果没有会一直重定向到注册页面</p>
</blockquote>
<p>在<strong>controllers/devise_hack/sessions_controller.rb</strong>中</p>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeviseHack::SessionsController</span> <span class="inheritance">&lt; <span class="parent">Devise::SessionsController</span></span></span></div><div class="line">  <span class="keyword">include</span> <span class="constant">SimpleCaptcha::ControllerHelpers</span></div><div class="line">  skip_before_filter <span class="symbol">:require_no_authentication</span>, <span class="symbol">:only</span> =&gt; [<span class="symbol">:new</span>]</div><div class="line">  <span class="function"><span class="keyword">def</span> </span>create</div><div class="line">    <span class="keyword">if</span> simple_captcha_valid?</div><div class="line">      <span class="keyword">super</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">      build_resource</div><div class="line">      flash[<span class="symbol">:error</span>] = <span class="string">"Captcha has wrong, try a again."</span></div><div class="line">      redirect_to <span class="string">'/admin/users/login'</span></div><div class="line">      <span class="comment">#respond_with_navigational(resource) { render :new }</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>build_resource(hash=<span class="keyword">nil</span>)</div><div class="line">    <span class="keyword">self</span>.resource = resource_class.new_with_session(hash || {}, session)</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<h2 id="遇到的问题:">遇到的问题:</h2>
<p>ImageMagick: Error while running convert: convert: unable to read font</p>
<blockquote>
<p>安装 $ brew install ghostscript</p>
</blockquote>
<p>验证码不验证问题（具体记不清了。。）</p>
<blockquote>
<p>将render换成redirect_to</p>
</blockquote>
<h2 id="参考文章：">参考文章：</h2>
<p><a href="http://www.cnblogs.com/itmangelihai/p/3254608.html" target="_blank" rel="external">http://www.cnblogs.com/itmangelihai/p/3254608.html</a><br><a href="https://github.com/plataformatec/devise/wiki/How-To%3a-Use-Recaptcha-with-Devise" target="_blank" rel="external">https://github.com/plataformatec/devise/wiki/How-To%3a-Use-Recaptcha-with-Devise</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="rails_simple_captcha_验证码实现">rails simple_captcha 验证码实现</h2>
<h3 id="用到的gem有">用到的gem有</h3>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">"galetahub-simple_captcha"</span>, :<span class="keyword">require</span> =&gt; <span class="string">"simple_captcha"</span></div><div class="line">gem <span class="string">"mini_magick"</span></div></pre></td></tr></table></figure>

<p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="devise" scheme="http://akgitcom.github.io/tags/devise/"/>
    
      <category term="simple captcha" scheme="http://akgitcom.github.io/tags/simple-captcha/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails开发CMS遇到的问题]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/rails%E5%BC%80%E5%8F%91CMS%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://akgitcom.github.io/2015/01/12/rails开发CMS遇到的问题/</id>
    <published>2015-01-12T01:43:33.000Z</published>
    <updated>2015-01-12T01:45:21.000Z</updated>
    <content type="html"><![CDATA[<h3 id="关联排序并取出第一个IMAGE">关联排序并取出第一个IMAGE</h3>
<blockquote>
<p>uploader用了carrierwave的七牛云,如果不用：<br>&lt;%= b.photos.order(sort: :asc).pluck(:image).pop || “blank.jpg” %&gt;<br>b.photos.order(sort: :asc) 你的<br>.pluck(:image)，取出image字段<br>.pop，取出第一个，如果为空，返回nil<br>|| blank，默认图片</p>
</blockquote>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="vbscript">&lt;% @products.<span class="keyword">each</span> <span class="keyword">do</span> |b|%&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"/products/&lt;%=b.id%&gt;.html"</span>&gt;</span></div><div class="line"><span class="vbscript">&lt;%= image_tag( b.photos.order(sort: :<span class="built_in">asc</span>).map(&:image_url).pop) %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="title">a</span>&gt;</span></div><div class="line"><span class="vbscript">&lt;%= link_to truncate(strip_tags(b.title), length: <span class="number">60</span>, escape: <span class="literal">false</span>),</span></div><div class="line">                            {:controller =&gt; <span class="string">"products"</span>,</div><div class="line">                             :action =&gt; <span class="string">"show"</span>,</div><div class="line">                             :id =&gt; <span class="string">"#{b.id}"</span>,</div><div class="line">                             :format=&gt;<span class="string">"html"</span></div><div class="line">                            } %&gt;</div><div class="line"><span class="tag">&lt;/<span class="title">li</span>&gt;</span></div><div class="line"><span class="vbscript">&lt;% <span class="keyword">end</span> %&gt;</span></div></pre></td></tr></table></figure>

<h3 id="截取字符串包括”…”加字符数量">截取字符串包括”…”加字符数量</h3>
<figure class="highlight rails"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="operator"><span class="keyword">truncate</span>(strip_tags(b.title), length: <span class="number">60</span>, <span class="keyword">escape</span>: <span class="literal">false</span>)</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h3 id="关联排序并取出第一个IMAGE">关联排序并取出第一个IMAGE</h3>
<blockquote>
<p>uploader用了carrierwave的七牛云,如果不用：<br>&lt;%= b.photos.order(sort: :asc).pluck(:im]]>
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="cms" scheme="http://akgitcom.github.io/tags/cms/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails 第四天]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/rails-%E7%AC%AC%E5%9B%9B%E5%A4%A9/"/>
    <id>http://akgitcom.github.io/2015/01/12/rails-第四天/</id>
    <published>2015-01-12T01:37:39.000Z</published>
    <updated>2015-01-12T01:59:37.000Z</updated>
    <content type="html"><![CDATA[<h2 id="在rails_4-1-5_里动态设置路由">在rails 4.1.5 里动态设置路由</h2>
<p>需要动态获取数据路由相关数据来动态设置路由，有同学指出用路由分析库 <a href="https://github.com/rails/journey" target="_blank" rel="external">点我</a>,看上去太复杂了，自己理解为模块设置路由，每次保存前重启应该就可以。<br><a id="more"></a></p>
<blockquote>
<p>routename 为路由名称</p>
</blockquote>
<h3 id="table:">table:</h3>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">create_table "singlepages", primary_key: "sid", force: true <span class="operator"><span class="keyword">do</span> |t|</span></div><div class="line">    t.<span class="keyword">string</span>   <span class="string">"title"</span>,          <span class="keyword">limit</span>: <span class="number">200</span>,        <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.<span class="built_in">text</span>     <span class="string">"description"</span>,                       <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.<span class="built_in">text</span>     <span class="string">"content"</span>,        <span class="keyword">limit</span>: <span class="number">2147483647</span>, <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.<span class="keyword">string</span>   <span class="string">"keywords"</span>,       <span class="keyword">limit</span>: <span class="number">200</span>,        <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.<span class="built_in">integer</span>  <span class="string">"sort"</span>,                              <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.datetime <span class="string">"created_at"</span>,                        <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.datetime <span class="string">"updated_at"</span>,                        <span class="literal">null</span>: <span class="literal">false</span></div><div class="line">    t.<span class="keyword">string</span>   <span class="string">"routename"</span>,      <span class="keyword">limit</span>: <span class="number">250</span>,        <span class="literal">null</span>: <span class="literal">false</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<h3 id="routes-rb">routes.rb</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">resources <span class="symbol">:singlepages</span></div><div class="line">get <span class="string">'/company'</span>, <span class="symbol">to:</span> <span class="string">'singlepages#show'</span>, <span class="symbol">sid:</span> <span class="number">1</span></div></pre></td></tr></table></figure>

<h3 id="singelpage_controller-rb">singelpage_controller.rb</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">SinglepagesController</span> <span class="inheritance">&lt; <span class="parent">ApplicationController</span></span></span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>index</div><div class="line">    <span class="variable">@singlepages</span> = <span class="constant">Singlepage</span>.order(<span class="string">"sid DESC"</span>).page(params[<span class="symbol">:page</span>]).per(<span class="number">5</span>)</div><div class="line">    <span class="variable">@title</span> = <span class="string">'singlepage manage'</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>show</div><div class="line">    <span class="variable">@singlepage</span> = <span class="constant">Singlepage</span>.find_by_sid(params[<span class="symbol">:sid</span>])</div><div class="line">    redirect_to not_found_path <span class="keyword">unless</span> <span class="variable">@singlepage</span></div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<h3 id="model/singlepage-rb">model/singlepage.rb</h3>
<blockquote>
<p>每次保存前重启路由器</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singlepage</span> <span class="inheritance">&lt; <span class="parent">ActiveRecord::Base</span></span></span></div><div class="line">  after_save <span class="symbol">:reload_routes</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>reload_routes</div><div class="line">    <span class="constant">DynamicRouter</span>.reload</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<h3 id="model/dynamic_router-rb">model/dynamic_router.rb</h3>
<blockquote>
<p>动态路由,包括加载和重启</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">DynamicRouter</span></span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span><span class="keyword">self</span>.load</div><div class="line">    <span class="constant">ComingSoon</span>.application.routes.draw <span class="keyword">do</span></div><div class="line">      <span class="constant">Singlepage</span>.all.each <span class="keyword">do</span> |pg|</div><div class="line">        puts <span class="string">"Routing <span class="subst">#{pg.name}</span>"</span></div><div class="line">        get <span class="string">"/<span class="subst">#{pg.name}</span>"</span>, <span class="symbol">:to</span> =&gt; <span class="string">"pages#show"</span>, <span class="symbol">defaults:</span> { <span class="symbol">id:</span> pg.id }</div><div class="line">      <span class="keyword">end</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span><span class="keyword">self</span>.reload</div><div class="line">    <span class="constant">ComingSoon</span>.application.routes_reloader.reload!</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<h3 id="config/routes-rb">config/routes.rb</h3>
<blockquote>
<p>在路由配置文件里加载动态路由模块</p>
</blockquote>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="constant">Rails</span>.application.routes.draw <span class="keyword">do</span></div><div class="line">  root <span class="string">'home#index'</span></div><div class="line">  get <span class="string">'not_found'</span> =&gt; <span class="string">'singlepages#not_found'</span></div><div class="line">  <span class="constant">DynamicRouter</span>.load</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<p>OK。</p>
<p>文章来源:<a href="http://codeconnoisseur.org/ramblings/creating-dynamic-routes-at-runtime-in-rails-4" target="_blank" rel="external">Creating Dynamic Routes at runtime in Rails 4</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在rails_4-1-5_里动态设置路由">在rails 4.1.5 里动态设置路由</h2>
<p>需要动态获取数据路由相关数据来动态设置路由，有同学指出用路由分析库 <a href="https://github.com/rails/journey" target="_blank" rel="external">点我</a>,看上去太复杂了，自己理解为模块设置路由，每次保存前重启应该就可以。<br>]]>
    
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="动态路由" scheme="http://akgitcom.github.io/tags/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/"/>
    
      <category term="DynamicRouter" scheme="http://akgitcom.github.io/tags/DynamicRouter/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[thinkphp 后台动态设置路由]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/thinkphp-%E5%90%8E%E5%8F%B0%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E8%B7%AF%E7%94%B1/"/>
    <id>http://akgitcom.github.io/2015/01/12/thinkphp-后台动态设置路由/</id>
    <published>2015-01-12T01:34:45.000Z</published>
    <updated>2015-01-12T02:00:11.000Z</updated>
    <content type="html"><![CDATA[<h2 id="Thinkphp_后台动态设置配置文件">Thinkphp 后台动态设置配置文件</h2>
<blockquote>
<p>单独加载routes.php路由文件。routes.php返回数组。</p>
</blockquote>
<p><a id="more"></a></p>
<h2 id="创建配置文件">创建配置文件</h2>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$Category</span> = D(<span class="string">'Category'</span>);</div><div class="line"><span class="variable">$categorylist</span> = <span class="variable">$Category</span><span class="variable">-&gt;where</span>(<span class="string">'sblock=0'</span>)<span class="variable">-&gt;select</span>();</div><div class="line"><span class="keyword">foreach</span> (<span class="variable">$categorylist</span> <span class="keyword">as</span> <span class="variable">$row</span>)</div><div class="line">{</div><div class="line">    <span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="variable">$row</span>[routename]]= <span class="keyword">array</span>(<span class="string">'Product/index'</span>,<span class="string">'cateid='</span>.<span class="variable">$row</span>[<span class="string">'cid'</span>]);</div><div class="line">}</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'ae/:aid\d'</span>] = <span class="string">'Article/View'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'sv/:sid\d'</span>] = <span class="string">'Singlepage/View'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'pt/:pid\d'</span>] = <span class="string">'Product/View'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'fq/:fid\d'</span>] = <span class="string">'Faq/View'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'dd/:did\d'</span>] = <span class="string">'Download/View'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'company'</span>] = <span class="keyword">array</span>(<span class="string">'Singlepage/View'</span>, <span class="string">'sid=1'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'index'</span>] = <span class="string">'Index/Index'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'qualificatio'</span>] = <span class="keyword">array</span>(<span class="string">'Singlepage/View'</span>, <span class="string">'sid=2'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'message'</span>] = <span class="string">'Guestbook/Index'</span>;</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'Factory'</span>] = <span class="keyword">array</span>(<span class="string">'Singlepage/View'</span>, <span class="string">'sid=4'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'Contact'</span>] = <span class="keyword">array</span>(<span class="string">'Singlepage/View'</span>, <span class="string">'sid=3'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'pc/:cateid\d'</span>] = <span class="string">'Product/Index'</span>; <span class="comment">//规则路由</span></div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'pi/:cateid\d/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Product/Index'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'pi/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Product/Index'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'ai/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Article/Index'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'fi/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Faq/Index'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'di/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Download/Index'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'s/:p\d'</span>] = <span class="keyword">array</span>(<span class="string">'Product/Search'</span>);</div><div class="line"><span class="variable">$arr</span>[<span class="string">'URL_ROUTE_RULES'</span>][<span class="string">'s'</span>] = <span class="keyword">array</span>(<span class="string">'Product/Search'</span>);</div><div class="line">dump(F(<span class="string">'routes'</span>,<span class="variable">$arr</span>, <span class="string">'./Home/Conf/'</span>)); <span class="comment">//重点</span></div></pre></td></tr></table></figure>

<blockquote>
<p>如果config.php有’URL_ROUTE_RULES’这个数组，会覆盖，暂时将所有路由都写到这里。。。</p>
</blockquote>
<h2 id="将中文转换为拼音">将中文转换为拼音</h2>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$data</span>[<span class="string">'routename'</span>])){</div><div class="line">    <span class="variable">$data</span>[<span class="string">'routename'</span>] = <span class="variable">$data</span>[<span class="string">'routename'</span>];</div><div class="line">}<span class="keyword">else</span>{</div><div class="line">    import(<span class="string">"ORG.Util.ChinesePinyin"</span>);</div><div class="line">    <span class="variable">$pinyin</span> = <span class="keyword">new</span> ChinesePinyin();</div><div class="line">    <span class="variable">$data</span>[<span class="string">'routename'</span>] = <span class="variable">$pinyin</span><span class="variable">-&gt;TransformWithoutTone</span>(<span class="variable">$data</span>[<span class="string">'title'</span>],<span class="string">''</span>);</div><div class="line">}</div></pre></td></tr></table></figure>

<h2 id="config-php_配置文件，在‘URL_ROUTE_RULES’_下面加入代码:">config.php 配置文件，在‘URL_ROUTE_RULES’ 下面加入代码:</h2>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">'LOAD_EXT_CONFIG'</span>=&gt;<span class="string">'routes'</span></div></pre></td></tr></table></figure>

<blockquote>
<p>载入APP_PATH/conf/目录下的routes.php文件</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Thinkphp_后台动态设置配置文件">Thinkphp 后台动态设置配置文件</h2>
<blockquote>
<p>单独加载routes.php路由文件。routes.php返回数组。</p>
</blockquote>
<p>]]>
    
    </summary>
    
      <category term="thinkphp" scheme="http://akgitcom.github.io/tags/thinkphp/"/>
    
      <category term="动态路由" scheme="http://akgitcom.github.io/tags/%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails 第三天]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/rails-%E7%AC%AC%E4%B8%89%E5%A4%A9/"/>
    <id>http://akgitcom.github.io/2015/01/12/rails-第三天/</id>
    <published>2015-01-12T01:11:06.000Z</published>
    <updated>2015-01-12T01:59:26.000Z</updated>
    <content type="html"><![CDATA[<h2 id="多对多关联：">多对多关联：</h2>
<p>在Rails中多对多关联通过在关联表对应的类中声明has_and_belongs_to_many来实现。<br>在数据库中，多对多关联使用中间表来实现，表中包括关联表的主键，Active Record假定这个中间表的名字是由关联表的名字根据字母的顺序串联起来得到的。<br><a id="more"></a><br>例如，关联表为categories和products，中间表的名字就是categories_products。<br><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-Rails57_1.gif" alt="关联表为categories和products"></p>
<blockquote>
<p>注意我们的关联表没有id列，有两个原因:<br>首先，不需要一个唯一的标识来识别两个外键之间的连接，我们定义表的语句像下面这样：</p>
</blockquote>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> categories_products (</span></div><div class="line">category_id <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line">product_id <span class="built_in">int</span> <span class="keyword">not</span> <span class="literal">null</span>,</div><div class="line"><span class="keyword">constraint</span> fk_cp_category <span class="keyword">foreign</span> <span class="keyword">key</span> (category_id) <span class="keyword">references</span> categories(id),</div><div class="line"><span class="keyword">constraint</span> fk_cp_product <span class="keyword">foreign</span> <span class="keyword">key</span> (product_id) <span class="keyword">references</span> products(id),</div><div class="line"><span class="keyword">primary</span> <span class="keyword">key</span> (category_id, product_id)</div><div class="line">);</div></pre></td></tr></table></figure>

<blockquote>
<p>第二个原因在中间表中不包括一个<strong>id</strong>列，<strong>Active Record</strong>在访问某个行时会自动包含所有的列。如果包含了一个id列，那么这个<strong>id</strong>列就会复写掉在关联表中的<strong>id</strong>列。</p>
</blockquote>
<h2 id="he_has_and_belongs_to_many()声明:">he has_and_belongs_to_many()声明:</h2>
<blockquote>
<p><strong>has_and_belongs_to_many</strong>在很多方面很像<strong>has_many</strong>，<strong>has_and_belongs_to_many</strong>创建了本质上是一个集合的属性，该属性支持和<strong>has_many</strong>相同的方法。<br>也许我们使用Rails来写一个社区站点，在这里用户可以阅读文章。这里有很多的用户和文章，而且任何一个用户都可以阅读多个文章，为了跟踪，我们希望知道谁读了哪些文章，每篇文章有谁阅读过，我们也希望知道用户最后一次在什么时间阅读了哪篇文章，我们会这样设计表：</p>
</blockquote>
<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-Rails57_2.gif" alt=""></p>
<p>我们这样设置两个Model类互相关联：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span> <span class="inheritance">&lt; <span class="parent">ActiveRecord::Base</span></span></span></div><div class="line">	has_and_belongs_to_many <span class="symbol">:users</span></div><div class="line"><span class="comment"># ...</span></div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="inheritance">&lt; <span class="parent">ActiveRecord::Base</span></span></span></div><div class="line">	has_and_belongs_to_many <span class="symbol">:articles</span></div><div class="line"><span class="comment"># ...</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<p>这样我们就可以列出所有阅读过文章123的用户和名为pragdave的用户阅读的所有文章：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Who has read article 123?</span></div><div class="line">article = <span class="constant">Article</span>.find(<span class="number">123</span>)</div><div class="line">readers = article.users</div><div class="line"><span class="comment"># What has Dave read?</span></div><div class="line">dave = <span class="constant">User</span>.find_by_name(<span class="string">"pragdave"</span>)</div><div class="line">articles_that_dave_read = dave.articles</div></pre></td></tr></table></figure>

<p>当我们的程序通知某个人阅读了某篇文章的时候，将user记录和article记录建立关联，我们调用下面的方法：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="inheritance">&lt; <span class="parent">ActiveRecord::Base</span></span></span></div><div class="line">	has_and_belongs_to_many <span class="symbol">:articles</span></div><div class="line">	<span class="function"><span class="keyword">def</span> </span>read_article(article)</div><div class="line">		articles.push_with_attributes(article, <span class="symbol">:read_at</span> =&gt; <span class="constant">Time</span>.now)</div><div class="line">	<span class="keyword">end</span></div><div class="line"><span class="comment"># ...</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<p>方法push_with_attributes( )和&lt;&lt;方法的作用一样，都是给两个Model之间设置连接，而且还赋值给中间表记录什么人在什么时间阅读了文章。</p>
<blockquote>
<p>注：如果该方法难以理解，可以想象一下C#中使用反射给某个对象的字段赋值，我们需要提供对象，对象的字段名，字段对应的值来进行操作。作为一种的关联方法，<strong>hasand_belongs_to_many</strong>支持一系列声明来复写<strong>Active Record</strong>的默认设置：<strong>:class_name</strong>, <strong>:foreign_key</strong>和<strong>:conditions</strong>，和其他的has方法一样(<strong>:foreign_key</strong>设置中间表中的外键的名字)。进一步说，<strong>has_and_belongs_to_many</strong>支持复写中间表的名字，外键列的名字，<strong>find</strong>，<strong>insert</strong>，<strong>delete</strong>中使用的SQL，详细请参考Rdoc。</p>
</blockquote>
<p>原文出处:<a href="http://www.cnblogs.com/dahuzizyd/archive/2008/04/24/ruby_rails_57.html" target="_blank" rel="external">Ruby on rails开发从头来（五十七）- ActiveRecord基础（多对多关联关系）</a><br>参考文章:<br><a href="http://blog.csdn.net/abbuggy/article/details/8274717" target="_blank" rel="external">Ruby on Rails，一对多关联（One-to-Many）</a><br><a href="http://guides.ruby-china.org/association_basics.html" target="_blank" rel="external">http://guides.ruby-china.org/association_basics.html</a><br><a href="https://gist.github.com/nightire/5124880" target="_blank" rel="external">https://gist.github.com/nightire/5124880</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="多对多关联：">多对多关联：</h2>
<p>在Rails中多对多关联通过在关联表对应的类中声明has_and_belongs_to_many来实现。<br>在数据库中，多对多关联使用中间表来实现，表中包括关联表的主键，Active Record假定这个中间表的名字是由关联表的名字根据字母的顺序串联起来得到的。<br>]]>
    
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="关联查询" scheme="http://akgitcom.github.io/tags/%E5%85%B3%E8%81%94%E6%9F%A5%E8%AF%A2/"/>
    
      <category term="多对多" scheme="http://akgitcom.github.io/tags/%E5%A4%9A%E5%AF%B9%E5%A4%9A/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails 第二天]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/rails-%E7%AC%AC%E4%BA%8C%E5%A4%A9/"/>
    <id>http://akgitcom.github.io/2015/01/12/rails-第二天/</id>
    <published>2015-01-12T01:05:47.000Z</published>
    <updated>2015-01-12T01:10:16.000Z</updated>
    <content type="html"><![CDATA[<h2 id="调用淘宝IP的API，Helper：">调用淘宝IP的API，Helper：</h2>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">AdminsHelper</span></span></div><div class="line">  <span class="keyword">require</span> <span class="string">'open-uri'</span></div><div class="line">  <span class="keyword">require</span> <span class="string">'json'</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>hello_world(name)</div><div class="line">    <span class="string">"hello <span class="subst">#{name}</span>"</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>get_location</div><div class="line">    ip = request.remote_ip</div><div class="line">    url = <span class="string">"http://ip.taobao.com/service/getIpInfo.php?ip="</span> + ip</div><div class="line">    response = <span class="constant">Net::HTTP</span>.get_response(<span class="constant">URI</span>.parse(url)).body</div><div class="line">    response = <span class="constant">JSON</span>.parse(response)[<span class="string">'data'</span>]</div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>get_country</div><div class="line">    response = get_location[<span class="string">'country'</span>]</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<p><a id="more"></a></p>
<h3 id="在Controller里调用Helper">在Controller里调用Helper</h3>
<p>在controller引入：</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">include</span>(<span class="constant">AdminsHelper</span>)</div></pre></td></tr></table></figure>

<h3 id="Link_to加入html后缀，使用:format">Link_to加入html后缀，使用:format</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%= link_to b.sbname,{<span class="symbol">:controller</span> =&gt; <span class="string">"admins"</span>,<span class="symbol">:action</span> =&gt; <span class="string">"show"</span>,<span class="symbol">:format=&gt;</span><span class="symbol">:html</span>,<span class="symbol">:id=&gt;b</span>.id} %&gt;</div></pre></td></tr></table></figure>

<h2 id="Form_表单提交_4-0加入了新的方法params-require()-permit()">Form 表单提交 4.0加入了新的方法<strong><em>params.require().permit()</em></strong></h2>
<h3 id="定义私有方法_adminparams">定义私有方法 adminparams</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> </span>create</div><div class="line">	<span class="variable">@admins</span> = params[<span class="symbol">:admin</span>]</div><div class="line">	<span class="variable">@admins</span>[<span class="symbol">:sbpass</span>] = <span class="constant">Digest::MD5</span>.hexdigest(<span class="variable">@admins</span>[<span class="symbol">:sbpass</span>])</div><div class="line">	<span class="variable">@admins</span>[<span class="symbol">:sblock</span>] = <span class="number">0</span></div><div class="line">	<span class="variable">@admins</span>[<span class="symbol">:current_login_date</span>]= <span class="constant">Time</span>.now.utc.to_i()</div><div class="line">	<span class="variable">@admins</span>[<span class="symbol">:last_login_date</span>] = <span class="string">''</span></div><div class="line">	<span class="variable">@admins</span>[<span class="symbol">:last_login_ip</span>]= request.remote_ip</div><div class="line">	<span class="variable">@admins</span>[<span class="symbol">:last_login_area</span>] = get_location[<span class="string">'country'</span>]</div><div class="line">	<span class="variable">@admin</span> = <span class="constant">Admin</span>.new(admin_params)</div><div class="line">	<span class="keyword">if</span> <span class="variable">@admin</span>.save</div><div class="line">		redirect_to <span class="symbol">action:</span> <span class="string">'index'</span></div><div class="line">	<span class="keyword">else</span></div><div class="line">		render <span class="string">"new"</span></div><div class="line">	<span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="function"><span class="keyword">def</span> </span>show</div><div class="line">	<span class="variable">@admins</span> = <span class="constant">Admin</span>.find(params[<span class="symbol">:id</span>])</div><div class="line"><span class="keyword">end</span></div><div class="line"><span class="function"><span class="keyword">def</span> </span>admin_params</div><div class="line">	params.<span class="keyword">require</span>(<span class="symbol">:admin</span>).permit(</div><div class="line">		<span class="symbol">:sbname</span>,<span class="symbol">:sbpass</span>,<span class="symbol">:sbemail</span>,<span class="symbol">:sblock</span>,<span class="symbol">:current_login_date</span>,<span class="symbol">:last_login_date</span>,<span class="symbol">:last_login_ip</span>,<span class="symbol">:last_login_area</span></div><div class="line">	)</div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="调用淘宝IP的API，Helper：">调用淘宝IP的API，Helper：</h2>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">module</span> <span class="title">AdminsHelper</span></span></div><div class="line">  <span class="keyword">require</span> <span class="string">'open-uri'</span></div><div class="line">  <span class="keyword">require</span> <span class="string">'json'</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>hello_world(name)</div><div class="line">    <span class="string">"hello <span class="subst">#{name}</span>"</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>get_location</div><div class="line">    ip = request.remote_ip</div><div class="line">    url = <span class="string">"http://ip.taobao.com/service/getIpInfo.php?ip="</span> + ip</div><div class="line">    response = <span class="constant">Net::HTTP</span>.get_response(<span class="constant">URI</span>.parse(url)).body</div><div class="line">    response = <span class="constant">JSON</span>.parse(response)[<span class="string">'data'</span>]</div><div class="line">  <span class="keyword">end</span></div><div class="line">  <span class="function"><span class="keyword">def</span> </span>get_country</div><div class="line">    response = get_location[<span class="string">'country'</span>]</div><div class="line">  <span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="helper" scheme="http://akgitcom.github.io/tags/helper/"/>
    
      <category term="link_to" scheme="http://akgitcom.github.io/tags/link-to/"/>
    
      <category term="form" scheme="http://akgitcom.github.io/tags/form/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails 多语言支持]]></title>
    <link href="http://akgitcom.github.io/2015/01/12/rails-%E5%A4%9A%E8%AF%AD%E8%A8%80%E6%94%AF%E6%8C%81/"/>
    <id>http://akgitcom.github.io/2015/01/12/rails-多语言支持/</id>
    <published>2015-01-12T01:01:42.000Z</published>
    <updated>2015-01-12T01:07:18.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://railscasts.com/episodes/138-i18n" target="_blank" rel="external">http://railscasts.com/episodes/138-i18n</a><br><a href="http://rails-i18n.org/" target="_blank" rel="external">http://rails-i18n.org/</a><br><a href="http://github.com/svenfuchs/rails-i18n/tree/master/rails%2Flocale" target="_blank" rel="external">Locale Examples</a><br><a href="http://blog.segmentfault.com/xiongxin/1190000000489534" target="_blank" rel="external">http://blog.segmentfault.com/xiongxin/1190000000489534</a></p>
<h3 id="i18n-rb:">i18n.rb:</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="constant">I18n</span>.default_locale = <span class="string">'zh-CN'</span></div><div class="line"><span class="constant">LANGUAGES</span> = {</div><div class="line">    <span class="string">'English'</span> =&gt; <span class="string">'en'</span>,</div><div class="line">    <span class="string">'Chinese'</span> =&gt; <span class="string">'zh-CN'</span></div><div class="line">}</div></pre></td></tr></table></figure>

<h3 id="application-rb:">application.rb:</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="constant">I18n</span>.config.enforce_available_locales = <span class="keyword">false</span></div><div class="line">config.i18n.load_path += <span class="constant">Dir</span>[<span class="constant">Rails</span>.root.join(<span class="string">'my'</span>, <span class="string">'locales'</span>, <span class="string">'*.{rb,yml}'</span>).to_s]</div><div class="line">config.i18n.default_locale = <span class="symbol">:<span class="string">'zh-CN'</span></span></div></pre></td></tr></table></figure>

<blockquote>
<p>kaminari 多语设置</p>
</blockquote>
<h3 id="zh-CN-yml:">zh-CN.yml:</h3>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">zh-<span class="constant">CN</span><span class="symbol">:</span></div><div class="line">  <span class="symbol">views:</span></div><div class="line">      <span class="symbol">pagination:</span></div><div class="line">        <span class="symbol">first:</span> <span class="string">"« 首页"</span></div><div class="line">        <span class="symbol">last:</span> <span class="string">"末页 »"</span></div><div class="line">        <span class="symbol">previous:</span> <span class="string">"« 上一页"</span></div><div class="line">        <span class="symbol">next:</span> <span class="string">"下一页 »"</span></div><div class="line">        <span class="symbol">truncate:</span> <span class="string">"..."</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://railscasts.com/episodes/138-i18n" target="_blank" rel="external">http://railscasts.com/episodes/138-i18n</a><br><a href="]]>
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="多语言" scheme="http://akgitcom.github.io/tags/%E5%A4%9A%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[kaminari简要文档]]></title>
    <link href="http://akgitcom.github.io/2015/01/11/kaminari%E7%AE%80%E8%A6%81%E6%96%87%E6%A1%A3/"/>
    <id>http://akgitcom.github.io/2015/01/11/kaminari简要文档/</id>
    <published>2015-01-11T14:22:43.000Z</published>
    <updated>2015-01-12T00:45:56.000Z</updated>
    <content type="html"><![CDATA[<h2 id="全局参数设置">全局参数设置</h2>
<p>执行以下命令，会在config/initializers下生成一个配置文件kaminari_config.rb</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g <span class="symbol">kaminari:</span>config</div></pre></td></tr></table></figure>

<p>这个文件控制着kaminari的全局设置，有以下参数可以定义<br><strong>default_per_page</strong> 默认值25<br><strong>page_method_name</strong> 分页方法的名称<br><strong>param_name</strong> 分页参数的参数名，默认为param<br><strong>window / outer_window / left / right</strong>这四个参数都与分页显示有关，设定了显示页码标签的方式和数量。</p>
<h2 id="分页界面定制">分页界面定制</h2>
<p>执行一下命令可以获取默认模版文件。目录在app/views/kaminari/下</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rails g <span class="symbol">kaminari:</span>views default</div></pre></td></tr></table></figure>

<p>各个文件描述如下<br><strong>_paginator.html.erb</strong> 这是总的入口文件，可以通过修改它来调整显示的整体结构比如我不需要”首页”，”末页”这两个链接，那么我就在这个文件里面将对应的代码删除<br><strong>_page.html.erb</strong> 对应页码链接<br><strong>_first_page.html.erb / _last_page.html.erb</strong>对应”首页”和”末页”的链接<br><strong>_prev_page.html.erb / _next_page.html.erb</strong> 对应”上一页”和”下一页”的链接<br><strong>_gap.html.erb</strong> 空隙的显示，默认是中间的省略号(…)</p>
<blockquote>
<p>注意，不要修改文件名。</p>
</blockquote>
<p>theme功能<br>在<em>app/views/kaminari</em>目录下创建一个文件夹，例如test，把默认的模版文件拷贝进去，修改模版文件的内容，就形成了个性化的样式。<br>view页面按下方写法即可调用个性样式。</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;%= paginate <span class="variable">@blogs</span>, <span class="symbol">:theme=&gt;<span class="string">'test'</span></span> %&gt;</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h2 id="全局参数设置">全局参数设置</h2>
<p>执行以下命令，会在config/initializers下生成一个配置文件kaminari_config.rb</p>
<figure class="highlight ruby"><table><tr><td cla]]>
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="kaminari" scheme="http://akgitcom.github.io/tags/kaminari/"/>
    
      <category term="分页" scheme="http://akgitcom.github.io/tags/%E5%88%86%E9%A1%B5/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[rails 第一天]]></title>
    <link href="http://akgitcom.github.io/2015/01/11/rails-%E7%AC%AC%E4%B8%80%E5%A4%A9/"/>
    <id>http://akgitcom.github.io/2015/01/11/rails-第一天/</id>
    <published>2015-01-11T14:11:23.000Z</published>
    <updated>2015-01-12T01:59:19.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-IMG_0242.jpg" alt="野三坡"></p>
<h2 id="常用命令">常用命令</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rake db:schema:dump</div><div class="line">rails g model 名称</div><div class="line">rails g controller 名称</div></pre></td></tr></table></figure>

<h2 id="常用gem:">常用gem:</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">'mysql2'</span></div><div class="line">gem <span class="string">'kaminari'</span> <span class="comment">#分页</span></div><div class="line">gem <span class="string">'nokogiri'</span> <span class="comment">#DOM分析</span></div></pre></td></tr></table></figure>

<p><a id="more"></a><br><a href="https://github.com/amatsuda/kaminari" target="_blank" rel="external">kaminari</a><br><a href="http://akgitcom.github.io/2014/09/11/kaminari%E7%AE%80%E8%A6%81%E6%96%87%E6%A1%A3/" target="_blank" rel="external">kaminari简要文档</a></p>
<h2 id="使用方法：">使用方法：</h2>
<p>controller:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdminsController</span> <span class="inheritance">&lt; <span class="parent">ApplicationController</span></span></span></div><div class="line">	<span class="function"><span class="keyword">def</span> </span>index</div><div class="line">		<span class="variable">@admins</span> = <span class="constant">Admin</span>.order(<span class="string">"id DESC"</span>).page(params[<span class="symbol">:page</span>]).per(<span class="number">1</span>)</div><div class="line">	<span class="keyword">end</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>

<p>views:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;% <span class="variable">@admins</span>.each <span class="keyword">do</span> |b|%&gt;</div><div class="line">&lt;%=b.sbname %&gt;</div><div class="line">&lt;% <span class="keyword">end</span> %&gt;</div><div class="line">&lt;%= paginate <span class="variable">@admins</span> %&gt;</div></pre></td></tr></table></figure>

<p>数据库表名后缀添加方法：<br>在config/application.rb添加</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">config.active_record.table_name_prefix = <span class="string">'j_'</span></div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7u2icj.com1.z0.glb.clouddn.com/github-IMG_0242.jpg" alt="野三坡"></p>
<h2 id="常用命令">常用命令</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">rake db:schema:dump</div><div class="line">rails g model 名称</div><div class="line">rails g controller 名称</div></pre></td></tr></table></figure>

<h2 id="常用gem:">常用gem:</h2>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">gem <span class="string">'mysql2'</span></div><div class="line">gem <span class="string">'kaminari'</span> <span class="comment">#分页</span></div><div class="line">gem <span class="string">'nokogiri'</span> <span class="comment">#DOM分析</span></div></pre></td></tr></table></figure>

<p>]]>
    
    </summary>
    
      <category term="rails" scheme="http://akgitcom.github.io/tags/rails/"/>
    
      <category term="kaminari" scheme="http://akgitcom.github.io/tags/kaminari/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[thinkphp 获取搜索引擎蜘蛛]]></title>
    <link href="http://akgitcom.github.io/2015/01/11/thinkphp-%E8%8E%B7%E5%8F%96%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E8%9C%98%E8%9B%9B/"/>
    <id>http://akgitcom.github.io/2015/01/11/thinkphp-获取搜索引擎蜘蛛/</id>
    <published>2015-01-11T14:09:41.000Z</published>
    <updated>2015-01-12T00:59:57.000Z</updated>
    <content type="html"><![CDATA[<h3 id="Function_is_bot():">Function is_bot():</h3>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_bot</span><span class="params">()</span></span></div><div class="line">{</div><div class="line">	<span class="variable">$data</span>[<span class="string">'robotspage'</span>] = <span class="variable">$_SERVER</span>[<span class="string">'REQUEST_URI'</span>] ? <span class="variable">$_SERVER</span>[<span class="string">'REQUEST_URI'</span>] : <span class="string">''</span>;</div><div class="line">	<span class="variable">$data</span>[<span class="string">'oldurl'</span>] = <span class="variable">$_SERVER</span>[<span class="string">'HTTP_REFERER'</span>] ? <span class="variable">$_SERVER</span>[<span class="string">'HTTP_REFERER'</span>] : <span class="string">'直接访问'</span>;</div><div class="line">	import(<span class="string">'ORG.Net.IpLocation'</span>); <span class="comment">// 导入IpLocation类</span></div><div class="line">	<span class="variable">$Ip</span> = <span class="keyword">new</span> IpLocation(<span class="string">'UTFWry.dat'</span>); <span class="comment">// 实例化类 参数表示IP地址库文件</span></div><div class="line">	<span class="variable">$data</span>[<span class="string">'robotsip'</span>] = get_client_ip();</div><div class="line">	<span class="variable">$useragent</span> = addslashes(strtolower(<span class="variable">$_SERVER</span>[<span class="string">'HTTP_USER_AGENT'</span>]));</div><div class="line">	<span class="keyword">if</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'googlebot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Google'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'mediapartners-google'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Google Adsense'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'baiduspider'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Baidu'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sogou spider'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Sogou'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sogou web'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Sogou web'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sosospider'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'SOSO'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'yahoo'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Yahoo'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'msn'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'MSN'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'msnbot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'msnbot'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sohu'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Sohu'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'yodaoBot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Yodao'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'twiceler'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Twiceler'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'ia_archiver'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Alexa_'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'iaarchiver'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'Alexa'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'slurp'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'雅虎'</span>;</div><div class="line">	} <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'bot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">	<span class="variable">$bot</span> = <span class="string">'未知'</span>.<span class="variable">$useragent</span>;</div><div class="line">	}</div><div class="line">	<span class="variable">$data</span>[<span class="string">'robotsname'</span>] = <span class="variable">$bot</span>;</div><div class="line">	<span class="variable">$data</span>[<span class="string">'robotsarea'</span>] = serialize(<span class="variable">$Ip</span><span class="variable">-&gt;getlocation</span>(<span class="variable">$data</span>[<span class="string">'robotsip'</span>]));</div><div class="line">	<span class="variable">$data</span>[<span class="string">'create_time'</span>] = time();</div><div class="line">	<span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$bot</span>)) <span class="comment">//如果是蜘蛛就存到数据库</span></div><div class="line">	{</div><div class="line">		<span class="comment">//$Jrobot-&gt;create();非表单无隐藏域,无法使用create()方法</span></div><div class="line">		<span class="variable">$Jrobot</span> = D(<span class="string">"Robot"</span>);</div><div class="line">		<span class="variable">$lastInsId</span> = <span class="variable">$Jrobot</span><span class="variable">-&gt;add</span>(<span class="variable">$data</span>);</div><div class="line">	}</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<h3 id="Function_is_bot():">Function is_bot():</h3>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</di]]>
    </summary>
    
      <category term="php" scheme="http://akgitcom.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[thinkphp ip 黑名单&白名单]]></title>
    <link href="http://akgitcom.github.io/2015/01/11/thinkphp-ip-%E9%BB%91%E5%90%8D%E5%8D%95-%E7%99%BD%E5%90%8D%E5%8D%95/"/>
    <id>http://akgitcom.github.io/2015/01/11/thinkphp-ip-黑名单-白名单/</id>
    <published>2015-01-11T14:09:41.000Z</published>
    <updated>2015-01-12T02:00:16.000Z</updated>
    <content type="html"><![CDATA[<p>获取搜素引擎蜘蛛访问情况，入库统计。<br><a id="more"></a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">is_bot</span><span class="params">()</span></span></div><div class="line">{</div><div class="line">    <span class="variable">$data</span>[<span class="string">'robotspage'</span>] = <span class="variable">$_SERVER</span>[<span class="string">'REQUEST_URI'</span>] ? <span class="variable">$_SERVER</span>[<span class="string">'REQUEST_URI'</span>] : <span class="string">''</span>;</div><div class="line">    <span class="variable">$data</span>[<span class="string">'oldurl'</span>] = <span class="variable">$_SERVER</span>[<span class="string">'HTTP_REFERER'</span>] ? <span class="variable">$_SERVER</span>[<span class="string">'HTTP_REFERER'</span>] : <span class="string">'直接访问'</span>;</div><div class="line">    import(<span class="string">'ORG.Net.IpLocation'</span>); <span class="comment">// 导入IpLocation类</span></div><div class="line">    <span class="variable">$Ip</span> = <span class="keyword">new</span> IpLocation(<span class="string">'UTFWry.dat'</span>); <span class="comment">// 实例化类 参数表示IP地址库文件</span></div><div class="line">    <span class="variable">$data</span>[<span class="string">'robotsip'</span>] = get_client_ip();</div><div class="line">    <span class="variable">$useragent</span> = addslashes(strtolower(<span class="variable">$_SERVER</span>[<span class="string">'HTTP_USER_AGENT'</span>]));</div><div class="line">    <span class="keyword">if</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'googlebot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Google'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'mediapartners-google'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Google Adsense'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'baiduspider'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Baidu'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sogou spider'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Sogou'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sogou web'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Sogou web'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sosospider'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'SOSO'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'yahoo'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Yahoo'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'msn'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'MSN'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'msnbot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'msnbot'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'sohu'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Sohu'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'yodaoBot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Yodao'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'twiceler'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Twiceler'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'ia_archiver'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Alexa_'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'iaarchiver'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'Alexa'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'slurp'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'雅虎'</span>;</div><div class="line">    } <span class="keyword">elseif</span> (strpos(<span class="variable">$useragent</span>, <span class="string">'bot'</span>) !== <span class="keyword">false</span>) {</div><div class="line">    <span class="variable">$bot</span> = <span class="string">'未知'</span>.<span class="variable">$useragent</span>;</div><div class="line">    }</div><div class="line">    <span class="variable">$data</span>[<span class="string">'robotsname'</span>] = <span class="variable">$bot</span>;</div><div class="line">    <span class="variable">$data</span>[<span class="string">'robotsarea'</span>] = serialize(<span class="variable">$Ip</span><span class="variable">-&gt;getlocation</span>(<span class="variable">$data</span>[<span class="string">'robotsip'</span>]));</div><div class="line">    <span class="variable">$data</span>[<span class="string">'create_time'</span>] = time();</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$bot</span>)) <span class="comment">//如果是蜘蛛就存到数据库</span></div><div class="line">    {</div><div class="line">        <span class="comment">//$Jrobot-&gt;create();非表单无隐藏域,无法使用create()方法</span></div><div class="line">        <span class="variable">$Jrobot</span> = D(<span class="string">"Robot"</span>);</div><div class="line">        <span class="variable">$lastInsId</span> = <span class="variable">$Jrobot</span><span class="variable">-&gt;add</span>(<span class="variable">$data</span>);</div><div class="line">    }</div></pre></td></tr></table></figure>

]]></content>
    <summary type="html">
    <![CDATA[<p>获取搜素引擎蜘蛛访问情况，入库统计。<br>]]>
    
    </summary>
    
      <category term="php" scheme="http://akgitcom.github.io/tags/php/"/>
    
  </entry>
  
</feed>
